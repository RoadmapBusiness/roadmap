{"version":3,"sources":["webpack://roadmap/./src/assets/SvgIcon.tsx","webpack://roadmap/./src/assets/Logo.tsx","webpack://roadmap/./src/constants/colors.ts","webpack://roadmap/./src/styles/Header.ts","webpack://roadmap/./src/components/Header/RoadmapList.tsx","webpack://roadmap/./src/components/Header/ConnectionStatus.tsx","webpack://roadmap/./src/data/auth.ts","webpack://roadmap/./src/styles/Common/Spinner.ts","webpack://roadmap/./src/components/Header/Avatar.tsx","webpack://roadmap/./src/components/Header/Header.tsx","webpack://roadmap/./src/constants/index.ts","webpack://roadmap/./src/utils/dates.ts","webpack://roadmap/./src/utils/nanoid.ts","webpack://roadmap/./src/state/actions/selection.ts","webpack://roadmap/./src/utils/subscribtion.ts","webpack://roadmap/./src/utils/placeholderActions.ts","webpack://roadmap/./src/context/dates.ts","webpack://roadmap/./src/utils/ui.ts","webpack://roadmap/./src/utils/cardActions.ts","webpack://roadmap/./src/styles/Placeholder.ts","webpack://roadmap/./src/types/state.ts","webpack://roadmap/./src/components/Placeholder/Placeholder.tsx","webpack://roadmap/./src/styles/DayHeader.ts","webpack://roadmap/./src/styles/DateTable.ts","webpack://roadmap/./src/styles/CardBlock.ts","webpack://roadmap/./src/assets/CardStatus.tsx","webpack://roadmap/./src/components/DateTable/Card.tsx","webpack://roadmap/./src/state/actions/milestones.ts","webpack://roadmap/./src/styles/MilestoneBlock.ts","webpack://roadmap/./src/components/DateTable/Milestone.tsx","webpack://roadmap/./src/components/DateTable/DayHeader.tsx","webpack://roadmap/./src/components/DateTable/DayColumn.tsx","webpack://roadmap/./src/components/DateTable/DateTable.tsx","webpack://roadmap/./src/state/actions/cards.ts","webpack://roadmap/./src/styles/Main.ts","webpack://roadmap/./src/components/Roadmap/Roadmap.tsx","webpack://roadmap/./src/styles/EditScreen.ts","webpack://roadmap/./src/styles/Form.ts","webpack://roadmap/./src/components/EditScreen/Range.tsx","webpack://roadmap/./src/styles/Switch.ts","webpack://roadmap/./src/components/EditScreen/Switch.tsx","webpack://roadmap/./src/components/EditScreen/DateInput.tsx","webpack://roadmap/./src/components/EditScreen/EditFields.tsx","webpack://roadmap/./src/components/EditScreen/EditTitle.tsx","webpack://roadmap/./src/components/EditScreen/EditScreen.tsx","webpack://roadmap/./src/state/actions/user.ts","webpack://roadmap/./src/components/Screens/Roadmap.tsx","webpack://roadmap/./src/styles/Common/Toast.ts","webpack://roadmap/./src/styles/Overview.ts","webpack://roadmap/./src/components/Overview/Overview.tsx","webpack://roadmap/./src/components/Overview/SingleLineInput.tsx","webpack://roadmap/./src/components/Screens/Overview.tsx","webpack://roadmap/./src/styles/Global.ts","webpack://roadmap/./src/components/Routes/Routes.tsx","webpack://roadmap/./src/data/index.ts","webpack://roadmap/./src/state/initialState.ts","webpack://roadmap/./src/state/reducers/ui.ts","webpack://roadmap/./src/state/reducers/index.ts","webpack://roadmap/./src/state/reducers/cards.ts","webpack://roadmap/./src/state/reducers/milestones.ts","webpack://roadmap/./src/state/reducers/selection.ts","webpack://roadmap/./src/state/reducers/roadMeta.ts","webpack://roadmap/./src/state/reducers/user.ts","webpack://roadmap/./src/data/data.ts","webpack://roadmap/./src/data/newUser.ts","webpack://roadmap/./src/state/sagas/auth.ts","webpack://roadmap/./src/data/connection.ts","webpack://roadmap/./src/state/sagas/connection.ts","webpack://roadmap/./src/state/sagas/card.ts","webpack://roadmap/./src/utils/arrays.ts","webpack://roadmap/./src/state/sagas/roadmap.ts","webpack://roadmap/./src/state/sagas/index.ts","webpack://roadmap/./src/index.tsx","webpack://roadmap/./src/state/store.ts","webpack://roadmap/webpack/bootstrap","webpack://roadmap/webpack/runtime/compat get default export","webpack://roadmap/webpack/runtime/define property getters","webpack://roadmap/webpack/runtime/global","webpack://roadmap/webpack/runtime/harmony module decorator","webpack://roadmap/webpack/runtime/hasOwnProperty shorthand","webpack://roadmap/webpack/runtime/make namespace object","webpack://roadmap/webpack/runtime/jsonp chunk loading","webpack://roadmap/webpack/startup"],"names":["SvgIcon","props","viewBox","children","Logo","fill","stroke","strokeLinejoin","x","y","width","height","rx","ry","d","MainColors","purple","violet","indigo","blue","azur","green","yellow","orange","fire","pink","header","black","white","acid","soft","HeaderBlock","RoadmapNameLabel","RoadmapName","SignIn","AvatarBlock","RoadmapList","history","roadMeta","state","currentRoadmapID","ui","roadmapsData","Object","entries","length","value","onChange","e","push","target","map","key","data","name","StatusIcon","off","CloudOff","syncing","on","ConnectionStatus","user","connectionStatus","id","handleAuth","provider","useDeviceLanguage","signInWithRedirect","handleAuthOut","signOut","rotate","Spinner","size","Math","ceil","Avatar","fetchig","onClick","photoURL","src","alt","Header","isUserDataReady","roadmapsSet","to","title","ID_LENGTH","ID_SYMBOLS","DAY","WIDTH","HEADER_HEIGHT","HEADER_MILE_HEIGHT","CARD_HEIGHT","CARD_VERTICAL_SPACE","CARD_HORIZONTAL_SPACE","CARD_RESIZE_TOLERANCE","MILE_MARGIN","LOCALE","navigator","language","MILLISECONDS_IN_DAY","COLUMN_MULTIPLIER","PLAN","FREE","LIMIT","ROADMAPS","getYMDFromTimestamp","timestamp","date","Date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","getWeekNumber","setUTCDate","getUTCDay","yearStart","UTC","dateDiff","getTime","getWeekdayFromTimestamp","toLocaleDateString","weekday","getMonthNameFromTimestamp","isWeekend","getDay","getTodayTimestamp","today","getFullYear","getMonth","getDate","getDataString","toISOString","slice","getFullDateFromTimestamp","isToday","dateString","monthName","weekDayName","weekDayShort","weekNumber","extendDatesArray","datesArray","extraDays","backward","lastDay","lastTimestamp","extraArray","Array","index","getDaysDiff","date1","date2","getDaysInterval","getDateFromDiff","diff","getDaysInMonth","getNewDates","dates","direction","nanoid","callItBack","status","selectionDelete","type","payload","passID","set","newID","get","placeholderInitState","started","x1","x2","y1","line","done","placeholderUpdate","notify","fn","update","removePlaceholder","relatedTarget","getAttribute","TodayString","getPlaceholderWidth","max","round","getProgressBackgroud","complete","color1","color2","background","undefined","getCardStatus","from","until","progress","localeCompare","fromToToday","autoscaleTextarea","textarea","setFocus","style","scrollHeight","Number","isInteger","selectionStart","selectionEnd","scrollToToday","list","smooth","scroll","left","offsetLeft","window","innerWidth","behavior","getCoords","coord","el","nativeEvent","offsetX","offsetTop","offsetY","targetFix","parentElement","tagName","toLocaleLowerCase","ElementType","PlaceholderBlock","solid","PlaceholderContent","Placeholder","useState","aim","setAim","cards","memoizedCards","useMemo","values","isAimHoversCard","shortList","filter","card","some","Boolean","isAimOnCard","selectionType","selection","useEffect","none","dispatch","isNew","newCard","shouldSkipAim","opacity","transform","String","getPlaceholderData","DayHeaderBlock","DayHeaderMonth","DayHeaderDayBlock","DayHeaderDayNumber","DayHeaderWeekday","DateTableBlock","DateColumnItem","TodayScroll","scrollPosition","CardBlockText","statusColorMap","pending","delayed","dropped","CardStatusSVG","xmlns","CardBlockProgress","CardBlock","cardCases","CardStatus","className","RoadmapCard","useContext","classList","contains","altKey","ctrlKey","metaKey","shiftKey","onDoubleClick","onMouseEnter","onMouseDown","text","colorNames","keys","MilestoneBlock","Milestone","fullDate","milestonesObject","milestones","todayMilestones","milestone","todayMilestoneColor","color","todayMilestoneStyle","todayMilestoneNumber","floor","random","DayHeader","monthLength","dateTime","DateColumn","indexFromEnd","scrollRef","cardsObject","classAddition","trim","min","ref","dayDiff","top","Card","columnSize","DateTable","todayTimestamp","listRef","useRef","todayRef","ready","position","getDatesArray","setDatesArray","setScrollPosition","useLayoutEffect","current","todayString","currentDatesArray","scrollLeft","moveCard","resize","dateTable","removeDateTable","clearDesk","cardDetails","limit","pressX","extraSize","remove","immidiate","wasResized","cursor","pointerEvents","zIndex","setTimeout","pressInZone","HTMLButtonElement","currentTarget","add","clientWidth","clientX","parseInt","HTMLLIElement","putPlaceholder","moveInZone","clientY","diffX","extra","extraX","curTarget","rect","getBoundingClientRect","childRect","scrollTop","movePlaceholder","releaseInZone","Error","lineDiff","enterZone","leaveZone","tabIndex","blur","onMouseMove","onMouseUp","onMouseLeave","onMouseOut","onScroll","scrollLimit","offsetWidth","scrollWidth","todayMiddle","DayColumn","timeout","MainBlock","Roadmap","setTodayTimestamp","manageTimer","document","hidden","clearTimeout","newTimestamp","days","getMilisecondsUntilTomorrow","addEventListener","removeEventListener","cancelAction","preventDefault","Provider","shake","EditForm","EditExtra","Fieldset","FormLabel","LabelWarp","attrs","as","join","FormInput","FormInputWrap","RangeInput","EditExtraFields","EditExtraActions","EditEntry","placeholder","rows","hoverColor","action","Button","Range","disabled","change","save","val","setVal","handleChange","newVal","isNaN","htmlFor","onKeyDown","SwitchBlock","Switch","toggle","defaultChecked","DateInput","setDate","inputRef","HTMLInputElement","focus","select","toLowerCase","required","pattern","EditFields","setSelection","cardDispatch","isProgressOn","isFinite","setFrom","setUntil","Save","cancel","EditTitle","enforceExtraFields","autoFocus","DefaultState","EditScreen","selectedElement","isExtraFieldsEnforced","newSelection","setNewSelection","isInvalid","setInvalid","isCardValid","edited","original","every","delete","hasExtraFields","setAccountRoadmaps","roadmaps","meta","roadmapDataFetch","roadmapData","RoadmapScreen","location","routeID","params","userRoadmapIDs","includes","setCurrentRoadmap","pathname","Toast","RoadmapListTitle","RoadmapListBubble","RoadmapListItem","RoadmapListItemDetail","RoadmapListAdd","Overview","showInput","userRoadmapsSet","userRoadmaps","roadmapsIDs","sort","a","b","createdAt","toLocaleString","getLocalString","SingleLineInput","isShowingInput","roadmapName","setRoadmapName","OverviewScreen","addAccountRoadmap","GlobalStyle","Routes","path","Auth","userID","email","initialState","nextState","forEach","roadmapID","getRoadmapContent","emiter","listener","snapshot","fetchAccountDetails","once","fetchRoadmapMeta","updateRemoteCardData","content","addRemoteAccountRoadmap","time","removeRemoteAccountRoadmap","createAccount","fetchUserRoadmapsData","watchAuth","roadmapIDs","f","setStatusChange","watchConnectionStatusChange","currentStatus","connection","online","cardChanges","authChanges","dataUpdates","changesChannel","updatesChannel","networkChannel","isChange","isUpdate","isOnline","newStatus","watchCardChange","hydrateWithIDs","obj","string","fetchCurrentRoadmapData","watchCurrentRoadmapChange","watchAddRoadmap","channel","isCancelled","hydratedData","close","now","rootSaga","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fetching","success","out","sagaMiddleware","middleware","composedMiddleware","trace","traceLimit","store","run","userData","authSuccess","onAuthStateChanged","uid","displayName","rootAppNode","body","firstElementChild","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","loaded","__webpack_modules__","m","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","hmd","create","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","installedChunks","143","deferredModules","checkDeferredModules","checkDeferredModulesImpl","result","i","deferredModule","fulfilled","j","depId","splice","s","chunkLoadingGlobal","webpackJsonpCallback","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","parentChunkLoadingFunction","shift","apply","self","bind"],"mappings":"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","file":"app.xxxx.js","sourcesContent":["import React from 'react';\n\nconst SvgIcon = (props?: { children?: JSX.Element }): JSX.Element => {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      {props?.children}\n    </svg>\n  );\n};\n\nexport default React.memo(SvgIcon);\n","import React from 'react';\n\nconst Logo = ({ fill }: { fill?: string }): JSX.Element => (\n  <svg viewBox=\"0 0 20 20\" stroke=\"currentColor\" strokeLinejoin=\"round\">\n    <rect x=\"1\" y=\"1\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\" />\n    <path d=\"M 15 5 L 15 8 L 8 8 L 8 5 L 8 15 L 5 15 L 5 5 L 15 5 Z\" fill={fill} />\n    {/* <path d=\"M15 5v3H8V5v10H5V5h10z\"/> */}\n  </svg>\n);\n\nexport default React.memo(Logo);\n","export const HeaderColors = {\n  black: '#191919',\n  white: '#f7f8f9',\n  acid: '#84ff00',\n  soft: '#4fadff',\n};\n\nexport const MainColors = {\n  purple: '#8c0756',\n  violet: '#8933f4',\n  indigo: '#374193',\n  blue: '#1c93ff',\n  azur: '#01e3b3',\n  green: '#0b890c',\n  yellow: '#e7e400',\n  orange: '#ffa900',\n  fire: '#ff5700',\n  pink: '#ff55b8',\n};\n\nexport const W3CSS = {\n  red: '#f44336',\n  pink: '#e91e63',\n  purple: '#9c27b0',\n  deeppurple: '#673ab7',\n  indigo: '#3f51b5',\n  blue: '#2196F3',\n  green: '#4CAF50',\n  amber: '#ffc107',\n  orange: '#ff9800',\n  bluegray: '#607d8b',\n};\n\nexport default {\n  header: HeaderColors,\n  ...MainColors,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const HeaderBlock = styled.header`\n  display: flex;\n  min-height: 46px;\n  background: ${color.header.black};\n  color: #fff;\n  font-size: 1.2rem;\n  line-height: 1rem;\n  justify-content: left;\n  align-items: center;\n`;\n\nexport const Logo = styled(Link)`\n  margin: 0 0 0 12px;\n  font-size: 0;\n  color: ${color.header.acid};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: 0.2s;\n  rect,\n  path {\n    transform-origin: center;\n    fill: transparent;\n    transition: 0.2s;\n  }\n  &:hover {\n    color: ${color.header.soft};\n    rect {\n      transform: rotate(-5deg);\n      fill: #6d21b3;\n    }\n  }\n  & svg {\n    width: 30px;\n    height: 30px;\n  }\n  & + button {\n    margin-left: auto;\n  }\n`;\n\nexport const RoadmapNameLabel = styled.label`\n  display: inline-flex;\n  margin: 0 auto 0 12px;\n  border-radius: 4px;\n  transition: 0.2s;\n  color: #fff;\n  &:hover {\n    color: ${color.header.soft};\n  }\n`;\n\nexport const RoadmapName = styled.select`\n  appearance: none;\n  background: transparent;\n  border: none;\n  color: inherit;\n  font-size: 13px;\n  height: 30px;\n  padding: 0px 5px;\n  width: 100%;\n  max-width: 400px;\n  text-overflow: ellipsis;\n`;\n\nexport const SignIn = styled.button`\n  margin: 0 12px 0 0;\n  box-sizing: border-box;\n  height: 30px;\n  min-width: 30px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #ddd;\n  transition: 0.2s;\n  position: relative;\n  cursor: pointer;\n  border: 1px solid #ddd;\n  background: transparent;\n  &:hover {\n    color: #fff;\n    background: #a2166a;\n    img {\n      filter: contrast(1.5);\n    }\n  }\n`;\n\nexport const AvatarBlock = styled(SignIn)`\n  padding: 0;\n  width: 30px;\n  border: none;\n  overflow: hidden;\n  mask-image: -webkit-radial-gradient(white, black);\n  & img {\n    width: 100%;\n    height: 100%;\n    transition: 0.2s;\n  }\n  & svg {\n    margin: 2px;\n    fill: currentColor;\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { RoadmapNameLabel, RoadmapName } from 'styles/Header';\n\nimport { State } from 'types/state';\n\nconst RoadmapList = (): JSX.Element | null => {\n  const history = useHistory();\n  const roadMeta = useSelector((state: State) => state.roadMeta);\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const roadmapsData = Object.entries(roadMeta);\n  if (!roadmapsData.length || !currentRoadmapID) {\n    return null;\n  }\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    history.push(`/roadmap/${e.target.value}/`);\n  };\n\n  return (\n    <RoadmapNameLabel>\n      <RoadmapName value={currentRoadmapID} onChange={handleChange}>\n        {roadmapsData.map(([key, data]) => (\n          <option key={key} value={key}>\n            {data.name}\n          </option>\n        ))}\n      </RoadmapName>\n    </RoadmapNameLabel>\n  );\n};\n\nexport default React.memo(RoadmapList);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport CloudOff from '@material-ui/icons/CloudOff';\nimport CloudUpload from '@material-ui/icons/CloudUploadOutlined';\nimport CloudDone from '@material-ui/icons/CloudDoneOutlined';\n\nimport { AvatarBlock } from 'styles/Header';\n\nimport { State } from 'types/state';\n\nconst StatusIcon = {\n  off: <CloudOff />,\n  syncing: <CloudUpload />,\n  on: <CloudDone />,\n};\n\nconst ConnectionStatus = (): JSX.Element | null => {\n  const user = useSelector((state: State) => state.user);\n  const connectionStatus = useSelector((state: State) => state.ui.connectionStatus);\n  return user.id ? <AvatarBlock>{StatusIcon[connectionStatus]}</AvatarBlock> : null;\n};\n\nexport default React.memo(ConnectionStatus);\n","import firebase from 'firebase/app';\n\nimport { AuthFetch, AuthSuccess, AuthOut } from 'types/actions';\nimport { AuthSuccessProp } from 'types/actionsProps';\n\nexport const handleAuth = (): void => {\n  if (typeof firebase.auth === 'function') {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().useDeviceLanguage();\n    void firebase.auth().signInWithRedirect(provider);\n  }\n};\n\nexport const handleAuthOut = (): void => {\n  if (typeof firebase.auth === 'function') {\n    void firebase.auth().signOut();\n  }\n};\n\nexport const trackAuthChange = ({\n  fetching,\n  success,\n  out,\n}: {\n  fetching: () => AuthFetch;\n  success: (userData: AuthSuccessProp) => AuthSuccess;\n  out: () => AuthOut;\n}): void => {\n  fetching();\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user && user.email) {\n      success({\n        id: user.uid,\n        name: user.displayName || '',\n        email: user.email,\n        photoURL: user.photoURL || '',\n      });\n    } else {\n      out();\n    }\n  });\n};\n","import styled, { keyframes } from 'styled-components';\n\nimport color from 'constants/colors';\n\nexport const rotate = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled.div`\n  width: ${({ size = 50 }: { size?: number }) => `${size}px`};\n  height: ${({ size = 50 }: { size?: number }) => (size ? `${size}px` : '50px')};\n  margin: ${({ size }: { size?: number }) => (size ? '3px' : 'auto')};\n  border: ${({ size = 50 }: { size?: number }) => `${Math.ceil(size / 10)}px solid transparent`};\n  border-top-color: ${({ size }: { size?: number }) => (size ? color.header.acid : 'rgba(106, 148, 184, 0.5)')};\n  border-radius: 50%;\n  animation: ${rotate} 1s linear infinite;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { handleAuth, handleAuthOut } from 'data/auth';\n\nimport { Spinner } from 'styles/Common/Spinner';\nimport { AvatarBlock, SignIn } from 'styles/Header';\n\nimport { State } from 'types/state';\n\nconst Avatar = (): JSX.Element => {\n  const user = useSelector((state: State) => state.user);\n  if (user.fetchig) {\n    return (\n      <AvatarBlock onClick={handleAuthOut}>\n        <Spinner size={20} />\n      </AvatarBlock>\n    );\n  }\n  if (user.id !== '') {\n    return (\n      <AvatarBlock onClick={handleAuthOut}>\n        {/* TODO: check if the image is renadable & replace image only when it's loaded */}\n        {user.photoURL ? <img src={user.photoURL} alt={user.name} /> : null}\n      </AvatarBlock>\n    );\n  }\n  return <SignIn onClick={handleAuth}>Sign In</SignIn>;\n};\n\nexport default React.memo(Avatar);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport LogoIcon from 'assets/Logo';\nimport app from 'constants/../../package.json';\n\nimport { HeaderBlock, Logo } from 'styles/Header';\n\nimport RoadmapList from './RoadmapList';\nimport ConnectionStatus from './ConnectionStatus';\nimport Avatar from './Avatar';\n\nimport { State } from 'types/state';\n\nconst Header = (): JSX.Element => {\n  const isUserDataReady = useSelector((state: State) => state.user.roadmapsSet);\n  return (\n    <HeaderBlock>\n      <Logo to=\"/\" title={`Roadmap.Business v${app.version}`}>\n        <LogoIcon />\n        <span>Roadmap</span>\n      </Logo>\n      {isUserDataReady && <RoadmapList />}\n      <ConnectionStatus />\n      <Avatar />\n    </HeaderBlock>\n  );\n};\n\nexport default React.memo(Header);\n","export default {\n  ID_LENGTH: 20,\n  ID_SYMBOLS: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  DAY: {\n    WIDTH: 30,\n    HEADER_HEIGHT: 85,\n    HEADER_MILE_HEIGHT: 125,\n  },\n  CARD_HEIGHT: 30,\n  CARD_VERTICAL_SPACE: 35,\n  CARD_HORIZONTAL_SPACE: 15,\n  CARD_RESIZE_TOLERANCE: 7,\n  MILE_MARGIN: 8,\n  LOCALE: navigator.language || 'en-US',\n  MILLISECONDS_IN_DAY: 86400000,\n  COLUMN_MULTIPLIER: 2, // should be even to make sure we can figure out 'today'\n  PLAN: {\n    FREE: {\n      LIMIT: {\n        ROADMAPS: 3,\n      },\n    },\n  },\n};\n","import C from 'constants/index';\n\nimport { DateType, FullDateType } from 'types';\nimport { MoveCard } from 'types/actions';\n\nexport const getTwoDigitDate = (number: number): string => `0${number}`.slice(-2);\n// export const getDataString = (date: DateType): string => `${date.year}-${date.month}-${date.day}`;\n\nexport const getYMDFromTimestamp = (timestamp: number): DateType => {\n  const date = new Date(timestamp);\n  return {\n    year: date.getUTCFullYear(),\n    month: date.getUTCMonth() + 1,\n    day: date.getUTCDate(),\n  };\n};\n\nexport const getWeekNumber = (timestamp: number): number => {\n  const date = new Date(timestamp);\n  date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n  const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\n  const dateDiff = date.getTime() - yearStart.getTime();\n  return Math.ceil((dateDiff / C.MILLISECONDS_IN_DAY + 1) / 7);\n};\nexport const getWeekdayFromTimestamp = (timestamp: number, long: boolean = true): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { weekday: long ? 'long' : 'narrow' });\n};\n\nexport const getMonthNameFromTimestamp = (timestamp: number): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\n// For now we assume weekends are only Saturdays & Sundays\nexport const isWeekend = (timestamp: number): boolean => new Date(timestamp).getDay() % 6 === 0;\n\nexport const getTodayTimestamp = (): number => {\n  const today = new Date();\n  return Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\n};\n\nexport const getDataString = (timestamp: number = getTodayTimestamp()): string =>\n  new Date(timestamp).toISOString().slice(0, 10);\n\nexport const getLocalString = (timestamp: number = getTodayTimestamp()): string => new Date(timestamp).toLocaleString();\n\nexport const getFullDateFromTimestamp = (timestamp: number, isToday: boolean = false): FullDateType => ({\n  date: getYMDFromTimestamp(timestamp),\n  dateString: getDataString(timestamp),\n  monthName: getMonthNameFromTimestamp(timestamp),\n  weekDayName: getWeekdayFromTimestamp(timestamp),\n  weekDayShort: getWeekdayFromTimestamp(timestamp, false),\n  weekNumber: getWeekNumber(timestamp),\n  isWeekend: isWeekend(timestamp),\n  isToday,\n});\n\nexport const getDatesArray = (columnSize: number, todayTimestamp: number): FullDateType[] =>\n  Array(columnSize)\n    .fill(todayTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (index - columnSize / 2) * C.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, todayTimestamp === timestamp);\n    });\n\nexport const extendDatesArray = (datesArray: FullDateType[], extraDays: number, backward?: boolean): FullDateType[] => {\n  const lastDay = datesArray[backward ? 0 : datesArray.length - 1];\n  const lastTimestamp = Date.UTC(lastDay.date.year, lastDay.date.month - 1, lastDay.date.day);\n  const extraArray = Array(extraDays)\n    .fill(lastTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (backward ? index - extraDays : index + 1) * C.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, false);\n    });\n  return backward ? [...extraArray, ...datesArray] : [...datesArray, ...extraArray];\n};\n\nexport const getDaysDiff = (date1: string, date2: string): number =>\n  (new Date(date2).getTime() - new Date(date1).getTime()) / C.MILLISECONDS_IN_DAY;\n\nexport const getDaysInterval = (date1: string, date2: string): number => getDaysDiff(date1, date2) + 1;\n\nexport const getDateFromDiff = (date: string, diff: number): string =>\n  getDataString(new Date(date).getTime() + diff * C.MILLISECONDS_IN_DAY);\n\nexport const getDaysInMonth = (year: number, month: number): number => new Date(year, month, 0).getDate();\n\nexport const getMilisecondsUntilTomorrow = (days: number = 1): number => {\n  const today = new Date();\n  const otherDay = new Date(today.getFullYear(), today.getMonth(), today.getDate() + days);\n  return otherDay.getTime() - today.getTime();\n};\n\nexport const getNewDates = ({ direction, dateDiff }: MoveCard['payload'], dates: string[]): string[] => {\n  switch (direction) {\n    case -1:\n      return [getDateFromDiff(dates[0], dateDiff), dates[1]];\n    case 1:\n      return [dates[0], getDateFromDiff(dates[1], dateDiff)];\n    default:\n      return dates.map((date) => getDateFromDiff(date, dateDiff));\n  }\n};\n","import { customAlphabet } from 'nanoid';\n\nimport C from 'constants/index';\n\nconst nanoid = customAlphabet(C.ID_SYMBOLS, C.ID_LENGTH);\nexport default (): string => nanoid();\n","import nanoid from 'utils/nanoid';\n\nimport { NewCard, SelectionCancel, SelectionDelete, SelectCard } from 'types/actions';\nimport { NewCardProp } from 'types/actionsProps';\n\nexport const newCard = ({ line, from, until }: NewCardProp): NewCard => ({\n  type: 'NEW_CARD',\n  payload: {\n    id: nanoid(),\n    isNew: true,\n    line,\n    from,\n    until,\n  },\n});\n\nexport const selectCard = ({ id }: { id: string }): SelectCard => ({\n  type: 'SELECT_CARD',\n  payload: {\n    id,\n    isNew: false,\n  },\n});\n\nexport const selectionCancel = (): SelectionCancel => ({\n  type: 'SELECTION_CANCEL',\n});\n\nexport const selectionDelete = ({ id }: { id: string }): SelectionDelete => ({\n  type: 'SELECTION_DELETE',\n  payload: {\n    id,\n  },\n});\n","export type SubscribtionStatus = {\n  started?: boolean;\n  x1?: number;\n  x2?: number;\n  y1?: number;\n  line?: number;\n  date1?: string;\n  done?: boolean;\n};\nexport type Callback<T> = (status: T) => void;\nexport type SetNotification<T> = (fn: Callback<T>) => void;\nexport type Subscribtion<T> = (\n  status: T\n) => {\n  notify: SetNotification<T>;\n  update: Callback<T>;\n};\n\nexport const subscribtion: Subscribtion<SubscribtionStatus> = (init) => {\n  let status = init;\n  let callItBack: Callback<SubscribtionStatus> | undefined;\n  return {\n    notify: (fn) => {\n      callItBack = fn;\n    },\n    update: (update) => {\n      status = update;\n      callItBack && callItBack(status);\n    },\n  };\n};\n\nexport const passID = (() => {\n  let id = '';\n  return {\n    set: (newID: string) => (id = newID),\n    get: () => id,\n  };\n})();\n","import C from 'constants/index';\n\nimport { subscribtion } from './subscribtion';\n\nexport const placeholderInitState = {\n  started: false,\n  x1: 0,\n  x2: 0,\n  y1: 0,\n  line: 0,\n  date1: '',\n  done: false,\n};\nexport const placeholderUpdate = subscribtion(placeholderInitState);\n\nexport const putPlaceholder = (e: React.MouseEvent<HTMLUListElement, MouseEvent>): void => {\n  const target = e.target as HTMLLIElement;\n  placeholderUpdate.update({\n    started: true,\n    date1: target.getAttribute('data-date') || '',\n  });\n};\n\nexport const movePlaceholder = (e: React.MouseEvent<HTMLUListElement, MouseEvent>): void => {\n  const curTarget = e.currentTarget as HTMLUListElement;\n  const target = e.target as HTMLLIElement;\n  if (target.parentElement === curTarget) {\n    const rect: ClientRect = curTarget.getBoundingClientRect();\n    const childRect: ClientRect = target.getBoundingClientRect();\n    const line = Math.floor((e.clientY - rect.top + curTarget.scrollTop - C.DAY.HEADER_HEIGHT) / C.CARD_VERTICAL_SPACE);\n    if (line >= 0) {\n      placeholderUpdate.update({\n        x1: e.clientX - rect.left + curTarget.scrollLeft - (e.clientX - childRect.left),\n        x2: e.clientX - rect.left + curTarget.scrollLeft,\n        y1: C.DAY.HEADER_HEIGHT + line * C.CARD_VERTICAL_SPACE,\n        date1: target.getAttribute('data-date') || '',\n        line,\n      });\n    }\n  }\n};\n\nexport const removePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  if (e.type === 'mouseup') {\n    placeholderUpdate.update({\n      started: false,\n      done: true,\n    });\n  } else {\n    const target = e.relatedTarget as HTMLElement;\n    // TODO: check if we still need `data-form` attribute\n    if (!target || !target.getAttribute || target.getAttribute('data-form') !== 'edit') {\n      placeholderUpdate.update({\n        started: false,\n      });\n    }\n  }\n};\n","import React from 'react';\n\nimport { getDataString } from 'utils/dates';\n\nexport const TodayString = React.createContext(getDataString());\n","import { CSSProperties } from 'react';\n\nimport C from 'constants/index';\n\nimport { placeholderInitState } from './placeholderActions';\nimport { getDaysDiff, getDaysInterval } from './dates';\n\nimport { PlaceholderData } from 'types/index';\nimport { Card } from 'types/state';\nimport { CardTypes } from 'types/card';\n\nexport const getColumnSize = (): number => Math.ceil(window.innerWidth / C.DAY.WIDTH);\n\nexport const getPlaceholderWidth = (x1: number, x2: number): number =>\n  Math.max(Math.round((x2 - x1) / C.DAY.WIDTH + 0.3), 1) || 1;\n\nexport const getPlaceholderData = (x1: number, x2: number, y1: number, shouldSkipAim: boolean): PlaceholderData => {\n  if (shouldSkipAim || (x1 === 0 && y1 === 0)) {\n    return {\n      style: { opacity: '0' },\n    };\n  }\n  if (x2 === 0) {\n    return {\n      style: { transform: `translate(${x1}px, ${y1}px)`, opacity: '1' },\n    };\n  }\n  const size = getPlaceholderWidth(x1, x2);\n  return {\n    style: {\n      transform: `translate(${x1}px, ${y1}px)`,\n      width: String((size - 1) * C.DAY.WIDTH) + 'px',\n    },\n    size,\n  };\n};\n\nexport const getProgressBackgroud = (\n  complete?: number,\n  color1: string = '#f50',\n  color2: string = '#ddd'\n): CSSProperties | undefined =>\n  typeof complete === 'number'\n    ? { background: `linear-gradient(to right, ${color1} ${complete}%, ${color2} ${complete}%)` }\n    : undefined;\n\nexport const isAimOnCard = (aim: typeof placeholderInitState, cards: Array<Card>): boolean => {\n  const shortList = cards.filter(\n    (card) =>\n      card.line === aim.line && card.from.localeCompare(aim.date1) <= 0 && card.until.localeCompare(aim.date1) >= 0\n  );\n  if (shortList.some((card) => card.from === aim.date1 || card.until === aim.date1)) {\n    return true;\n  }\n  return Boolean(shortList.length);\n};\n\nexport const getCardStatus = (from: string, until: string, today: string, progress?: number): CardTypes | undefined => {\n  // No progress => No status\n  if (progress === undefined) {\n    return;\n  }\n  // 'pending':  card is in the future or starting today and progress is zero\n  // 'progress': card is in the future and progress > zero || progress >= proportion of today in the timeframe\n  // 'delayed':  progress < proportion of today in the timeframe\n  // 'complete': progress is 100\n  // 'dropped':  card is in the past and progress is zero\n  if (progress === 100) {\n    return 'complete';\n  }\n  // Today is after Until (Card is in the past)\n  if (today.localeCompare(until) > 0) {\n    return 'dropped';\n  }\n  if (progress === 0) {\n    // From is before Today (Card from past without progress)\n    if (today.localeCompare(from) > 0) {\n      return 'delayed';\n    }\n    // From is not yet reached or Today (Card is in the plan)\n    if (today.localeCompare(from) <= 0) {\n      return 'pending';\n    }\n  }\n  // If progress is between 0 and 100 it's either in progress or delayed\n  const fromToToday = getDaysDiff(from, today);\n  const todayToUntilPlusOne = getDaysInterval(today, until);\n  const proportion = fromToToday / (fromToToday + todayToUntilPlusOne);\n  if (progress / 100 < proportion) {\n    return 'delayed';\n  } else {\n    return 'progress';\n  }\n};\n\nexport const autoscaleTextarea = (textarea: HTMLTextAreaElement, setFocus: boolean = false): void => {\n  textarea.style.height = 'inherit';\n  textarea.style.height = `${textarea.scrollHeight}px`;\n  if (setFocus && Number.isInteger(textarea.selectionStart)) {\n    textarea.selectionStart = textarea.value.length;\n    textarea.selectionEnd = textarea.value.length;\n  }\n};\n\nexport const hasCardChanged = (edited: Card, original?: Card): boolean =>\n  !!original && (Object.keys(edited) as [keyof Card]).every((key) => original[key] === edited[key]);\n\nexport const isCardValid = (selection: Card): boolean =>\n  selection.id !== '' &&\n  selection.line >= 0 &&\n  selection.text !== '' &&\n  (selection.progress === undefined ||\n    (Number.isInteger(selection.progress) && selection.progress >= 0 && selection.progress <= 100)) &&\n  selection.from.length === 10 &&\n  selection.until.length === 10 &&\n  getDaysDiff(selection.from, selection.until) >= 0;\n\nexport const scrollToToday = (list: HTMLUListElement, today: HTMLLIElement, smooth?: boolean): void =>\n  list.scroll({\n    left: today.offsetLeft - window.innerWidth / 2,\n    behavior: smooth ? 'smooth' : 'auto',\n  });\n","import C from 'constants/index';\n\nimport { putPlaceholder, movePlaceholder, removePlaceholder } from './placeholderActions';\nimport { passID } from './subscribtion';\n\nimport { MoveCardProp } from 'types/actionsProps';\n\ntype EventHandler = (e: React.MouseEvent<HTMLUListElement, MouseEvent>) => void;\n\ntype CardActions = {\n  pressInZone: EventHandler;\n  moveInZone: EventHandler;\n  releaseInZone: EventHandler;\n  enterZone: EventHandler;\n  leaveZone: EventHandler;\n};\n\nconst getCoords = (\n  e: React.MouseEvent<HTMLUListElement, MouseEvent>,\n  coord: number[],\n  el: HTMLButtonElement\n): [number, number] => {\n  const target = e.target as HTMLElement;\n  const x = target.offsetLeft + e.nativeEvent.offsetX - coord[0];\n  const y = target.offsetTop + e.nativeEvent.offsetY - coord[1];\n  if (el.offsetTop + y < C.DAY.HEADER_HEIGHT) {\n    const targetFix = target.parentElement?.tagName.toLocaleLowerCase() === 'section' ? target.parentElement : target;\n    const x = targetFix.offsetLeft + (e.nativeEvent.offsetX + (targetFix === target ? 0 : C.MILE_MARGIN)) - coord[0];\n    return [x, y];\n  }\n  return [x, y];\n};\n\nexport default (moveCard: (moveCard: MoveCardProp) => void): CardActions => {\n  const card = {\n    coord: [0, 0],\n    width: 0,\n    el: null as HTMLButtonElement | null,\n  };\n  const resize = {\n    limit: 0,\n    pressX: 0,\n    direction: 0,\n    extraSize: 0,\n  };\n  let dateTable: HTMLUListElement | null = null;\n  let setAim = false;\n\n  const removeDateTable = () => {\n    if (dateTable) {\n      dateTable.classList.remove('drag');\n      dateTable = null;\n    }\n  };\n\n  const clearDesk = (immidiate: boolean, wasResized: boolean = false): void => {\n    if (!card.el || !dateTable) {\n      return;\n    }\n    if (wasResized) {\n      resize.limit = 0;\n      resize.pressX = 0;\n      resize.direction = 0;\n      resize.extraSize = 0;\n      dateTable.style.cursor = '';\n    }\n    card.el.style.pointerEvents = '';\n    card.el.style.transform = '';\n    card.el.style.opacity = '';\n    card.el.style.zIndex = '';\n    card.el = null;\n    if (immidiate) {\n      removeDateTable();\n    } else {\n      setTimeout(removeDateTable, 10);\n    }\n  };\n\n  const pressInZone = (e: React.MouseEvent<HTMLUListElement, MouseEvent>): void => {\n    if (card.el) {\n      return;\n    }\n    if (e.target instanceof HTMLButtonElement) {\n      dateTable = e.currentTarget as HTMLUListElement;\n      dateTable.classList.add('drag');\n      card.el = e.target;\n      const { clientWidth, offsetLeft, offsetTop } = card.el;\n      const { offsetX, offsetY, clientX } = e.nativeEvent;\n      if (offsetX < C.CARD_RESIZE_TOLERANCE || clientWidth - offsetX < C.CARD_RESIZE_TOLERANCE) {\n        dateTable.style.cursor = 'ew-resize';\n        resize.pressX = clientX;\n        resize.direction = offsetX < C.CARD_RESIZE_TOLERANCE ? -1 : 1;\n        card.width = parseInt(card.el.style.width, 10);\n        resize.limit = (card.width - C.CARD_HORIZONTAL_SPACE) / -C.DAY.WIDTH;\n        return;\n      }\n      card.coord = [offsetLeft + offsetX, offsetTop + offsetY];\n    } else if (e.target instanceof HTMLLIElement) {\n      setAim = true;\n      putPlaceholder(e);\n    }\n  };\n  const moveInZone = (e: React.MouseEvent<HTMLUListElement, MouseEvent>): void => {\n    if (!card.el) {\n      if (e.target instanceof HTMLLIElement) {\n        movePlaceholder(e);\n      }\n      return;\n    }\n    if (!card.el.style.transform) {\n      card.el.style.pointerEvents = 'none';\n      card.el.style.zIndex = '5';\n    }\n    if (resize.direction === 0) {\n      const [x, y] = getCoords(e, card.coord, card.el);\n      if (e.clientY < C.DAY.HEADER_MILE_HEIGHT) {\n        card.el.style.opacity = '0';\n      } else {\n        card.el.style.transform = `translate(${x}px, ${y}px)`;\n        if (card.el.style.opacity !== '') {\n          card.el.style.opacity = '';\n        }\n      }\n    } else {\n      const { clientX } = e.nativeEvent;\n      const diffX = clientX - resize.pressX;\n      const extra =\n        resize.direction < 0\n          ? Math.round((C.CARD_RESIZE_TOLERANCE - diffX) / C.DAY.WIDTH)\n          : Math.ceil((diffX - C.CARD_RESIZE_TOLERANCE) / C.DAY.WIDTH);\n      resize.extraSize = Math.max(extra, resize.limit);\n      const extraX = resize.extraSize * C.DAY.WIDTH;\n      card.el.style.width = `${card.width + extraX}px`;\n      if (resize.direction < 0) {\n        card.el.style.transform = `translateX(${-extraX}px)`;\n      }\n    }\n  };\n  const releaseInZone = (e: React.MouseEvent<HTMLUListElement, MouseEvent>): void => {\n    const id = passID.get();\n    if (resize.direction !== 0) {\n      if (resize.extraSize) {\n        if (id) {\n          moveCard({\n            id,\n            direction: resize.direction,\n            lineDiff: 0,\n            dateDiff: resize.extraSize * resize.direction,\n          });\n        } else {\n          throw Error('Card ID is missing, card will not be resized.');\n        }\n      }\n      clearDesk(card.el === e.target, true);\n      return;\n    }\n    if (card.el) {\n      if (card.el.style.opacity === '0') {\n        return;\n      }\n      if (card.el !== e.target) {\n        const [x, y] = getCoords(e, card.coord, card.el);\n        if (id) {\n          const lineDiff = Math.round(y / C.CARD_VERTICAL_SPACE);\n          const dateDiff = Math.round(x / C.DAY.WIDTH);\n          if (lineDiff || dateDiff) {\n            moveCard({\n              id,\n              direction: 0,\n              lineDiff,\n              dateDiff,\n            });\n          }\n        } else {\n          throw Error('Card ID is missing, card will not be moved.');\n        }\n      }\n      clearDesk(card.el === e.target);\n    } else if (setAim) {\n      setAim = false;\n      removePlaceholder(e);\n    }\n  };\n  const leaveZone = (e: React.MouseEvent<HTMLUListElement, MouseEvent>): void => {\n    if (e.type === 'mouseout') {\n      if (e.relatedTarget instanceof HTMLButtonElement) {\n        setAim = false;\n      }\n      return;\n    }\n    if (card.el && !(e.target instanceof HTMLButtonElement) && resize.direction === 0) {\n      card.el.style.opacity = '0';\n    }\n  };\n  const enterZone = (): void => {\n    if (setAim) {\n      setAim = false;\n    }\n    if (card.el && card.el.style.opacity !== '') {\n      card.el.style.opacity = '';\n    }\n  };\n\n  return {\n    pressInZone,\n    moveInZone,\n    releaseInZone,\n    enterZone,\n    leaveZone,\n  };\n};\n","import styled from 'styled-components';\n\nexport const PlaceholderBlock = styled.li`\n  position: absolute;\n  display: block;\n  height: 26px;\n  line-height: 28px;\n  border: ${(props: { solid: boolean }) => (props.solid ? '1px dashed #999' : '1px dashed #ddd')};\n  border-radius: 5px;\n  padding: 0 12px;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2);\n  margin: 1px 2px;\n  background: rgba(255, 255, 255, 0.5);\n  pointer-events: none;\n  left: 0;\n  top: 0;\n`;\n\nexport const PlaceholderContent = styled.span`\n  display: inline-block;\n  font-weight: lighter;\n  position: absolute;\n  text-align: right;\n  font-size: 12px;\n  color: #999;\n  right: 7px;\n  left: 7px;\n`;\n","import { MainColors } from 'constants/colors';\n\nexport type Card = {\n  id: string;\n  line: number;\n  text: string;\n  from: string;\n  until: string;\n  progress?: number;\n};\n\nexport type Milestone = {\n  id: string;\n  text: string;\n  date: string;\n  from?: never;\n  until?: never;\n  progress?: never;\n  color: keyof typeof MainColors;\n};\n\nexport enum ElementType {\n  card = 'card',\n  milestone = 'milestone',\n  none = '',\n}\n\nexport type List<Type> = {\n  [key: string]: Type;\n};\n\nexport interface PersistentState {\n  cards: List<Card>;\n  milestones: List<Milestone>;\n}\n\nexport type SelectedElement = Card | Milestone | undefined;\n\nexport enum ConnectionStatus {\n  on = 'on',\n  off = 'off',\n  syncing = 'syncing',\n}\n\nexport type RoadMeta = {\n  name: string;\n  createdAt: number;\n};\n\nexport type EditSelection = Card;\n\nexport interface Selection extends EditSelection {\n  isNew: boolean;\n  type: ElementType;\n}\n\nexport interface State extends PersistentState {\n  selection: Selection;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n    photoURL: string;\n    fetchig: boolean;\n    roadmaps: {\n      [key: string]: boolean;\n    };\n    roadmapsSet: boolean;\n  };\n  roadMeta: {\n    [key: string]: RoadMeta;\n  };\n  ui: {\n    connectionStatus: ConnectionStatus;\n    currentRoadmapID: string;\n  };\n}\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { newCard } from 'state/actions/selection';\nimport { placeholderInitState, placeholderUpdate } from 'utils/placeholderActions';\nimport { isAimOnCard, getPlaceholderData, getPlaceholderWidth } from 'utils/ui';\nimport { getDateFromDiff } from 'utils/dates';\n\nimport { PlaceholderBlock, PlaceholderContent } from 'styles/Placeholder';\n\nimport { State, ElementType } from 'types/state';\n\nconst Placeholder = (): JSX.Element => {\n  const [aim, setAim] = useState(placeholderInitState);\n  const cards = useSelector((state: State) => state.cards);\n  const memoizedCards = useMemo(() => Object.values(cards), [cards]);\n  const isAimHoversCard = useMemo(() => isAimOnCard(aim, memoizedCards), [aim, memoizedCards]);\n  const selectionType = useSelector((state: State) => state.selection.type);\n  useEffect(() => {\n    if (selectionType === ElementType.none) {\n      setAim(placeholderInitState);\n    }\n  }, [selectionType]);\n  const dispatch = useDispatch();\n\n  placeholderUpdate.notify(({ started, x1, x2, y1, line, date1 = '', done = false }) => {\n    if (started !== undefined && !isAimHoversCard) {\n      if (started && started !== aim.started && date1 !== '') {\n        setAim({\n          ...aim,\n          started,\n          date1,\n          x2: aim.x1,\n        });\n      } else if (aim.started && done) {\n        dispatch(\n          newCard({\n            line: aim.line,\n            from: aim.date1,\n            until: getDateFromDiff(aim.date1, getPlaceholderWidth(aim.x1, aim.x2) - 1),\n          })\n        );\n      } else {\n        setAim(placeholderInitState);\n      }\n    }\n    if (x1 !== undefined && y1 !== undefined && line !== undefined) {\n      if (aim.started === false) {\n        if (aim.x1 !== x1 || aim.y1 !== y1) {\n          setAim({\n            ...aim,\n            x1,\n            y1,\n            line,\n            date1,\n          });\n        }\n      } else if (x2 !== undefined) {\n        setAim({\n          ...aim,\n          x2,\n        });\n      }\n    }\n  });\n\n  const shouldSkipAim = (aim.x1 === 0 && aim.y1 === 0) || isAimHoversCard;\n  const { style, size } = getPlaceholderData(aim.x1, aim.x2, aim.y1, shouldSkipAim);\n\n  return (\n    <PlaceholderBlock solid={aim.started} style={style}>\n      <PlaceholderContent>{size}</PlaceholderContent>\n    </PlaceholderBlock>\n  );\n};\n\nexport default React.memo(Placeholder);\n","import styled from 'styled-components';\n\nimport C from 'constants/index';\n\nexport const DayHeaderBlock = styled.section`\n  pointer-events: none;\n  position: sticky;\n  height: ${C.DAY.HEADER_HEIGHT}px;\n  z-index: 5;\n  top: 0;\n`;\n\nexport const DayHeaderMonth = styled.time`\n  display: block;\n  height: 24px;\n  width: ${(props: { size: number }) => Number(props.size) * 30}px;\n  padding: 8px 12px 3px;\n  position: absolute;\n  top: 0;\n  background: #f7f8f9;\n  box-sizing: border-box;\n  color: rgba(0, 0, 0, 0.3);\n  box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.06);\n  pointer-events: all;\n  &:before {\n    content: '';\n    background: #f7f8f9;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    height: 30px;\n    box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2), inset 1px 0 0 rgba(0, 0, 0, 0.06);\n  }\n`;\n\nexport const DayHeaderDayBlock = styled.time`\n  display: block;\n  position: absolute;\n  top: 24px;\n  width: 30px;\n`;\n\nexport const DayHeaderDayNumber = styled.span`\n  text-align: center;\n  display: block;\n  margin: auto;\n  padding: 8px;\n`;\n\nexport const DayHeaderWeekday = styled.span`\n  display: none;\n  color: rgba(0, 0, 0, 0.5);\n`;\n","import styled from 'styled-components';\n\nimport { DayHeaderDayNumber } from './DayHeader';\n\nexport const DateTableBlock = styled.ul`\n  margin: 0;\n  padding: 0;\n  font-size: 0;\n  overflow: scroll;\n  white-space: nowrap;\n  position: relative;\n  user-select: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const DateColumnItem = styled.li`\n  list-style: none;\n  width: 30px;\n  height: 200%;\n  display: inline-block;\n  box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.06);\n  font-size: 12px;\n  vertical-align: top;\n  &.today {\n    background: linear-gradient(#f00, #8c0756) no-repeat center/2px 100%;\n    & ${DayHeaderDayNumber} {\n      border-radius: 50%;\n      color: #fff;\n      background: #f00;\n      font-weight: bolder;\n      padding: 2px;\n      margin: 6px;\n    }\n  }\n  &.weekend {\n    background-color: rgba(106, 148, 184, 0.06);\n  }\n  &.month {\n    box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const TodayScroll = styled.button`\n  border: none;\n  font-size: 12px;\n  position: absolute;\n  left: 50%;\n  transform: translateX(-50%);\n  background: rgb(219 228 236);\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  margin: 3px auto;\n  line-height: 24px;\n  padding: 0 7px;\n  -webkit-transition: box-shadow 0.1s;\n  transition: box-shadow 0.1s;\n  cursor: pointer;\n  z-index: 10;\n  color: #555;\n  user-select: none;\n  opacity: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? '0' : '1')};\n  pointer-events: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? 'none' : undefined)};\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n  &:before {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition < 0 && `\"\\\\276E\"`};\n    margin-right: 4px;\n  }\n  &:after {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition > 0 && `\"\\\\276F\"`};\n    margin-left: 4px;\n  }\n`;\n","import styled from 'styled-components';\n\nimport { CardTypes } from 'types/card';\n\nexport const CardBlockText = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst statusColorMap = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\nexport const CardStatusSVG = styled.svg.attrs({\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 300 300',\n})`\n  background: ${({ type }: { type: CardTypes }) => statusColorMap[type]};\n  border-radius: 50%;\n  padding: 2px;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  fill: #fff;\n`;\n\nexport const CardBlockProgress = styled.mark`\n  position: absolute;\n  display: block;\n  left: 3px;\n  right: 3px;\n  bottom: 3px;\n  height: 2px;\n  background: transparent;\n  overflow: hidden;\n  opacity: 0.4;\n  border-radius: 0 0 2px 2px;\n  transition: 0.1s;\n`;\n\nexport const CardBlock = styled.button`\n  border: none;\n  text-align: left;\n  box-sizing: content-box;\n  font-size: 12px;\n  position: absolute;\n  background: #fff;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  margin: 0 2px;\n  line-height: 30px;\n  padding: 0 5px 0 7px;\n  transition: box-shadow 0.1s, opacity 0.1s;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n  &:hover ${CardBlockProgress} {\n    opacity: 1;\n  }\n  & ${CardStatusSVG} {\n    position: absolute;\n    width: 0;\n    top: 3px;\n    right: 3px;\n    transform: translate(50%, -50%);\n    z-index: 2;\n    transition: 0.1s;\n  }\n  &:hover ${CardStatusSVG} {\n    width: 8px;\n    opacity: 1;\n  }\n  &.resized {\n    line-height: 28px;\n    box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2);\n    border: 1px dashed #e2e2e2;\n    padding: 0 4px 0 6px;\n    cursor: ew-resize;\n  }\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    width: 5px;\n    bottom: 0;\n    opacity: 0;\n    cursor: ew-resize;\n  }\n  &:before {\n    left: 0;\n  }\n  &:after {\n    right: 0;\n  }\n  &:focus {\n    outline: none;\n  }\n  & * {\n    pointer-events: none;\n  }\n`;\n","import React from 'react';\n\nimport { CardStatusSVG } from 'styles/CardBlock';\n\nimport { CardTypes } from 'types/card';\n\n// Pending     — gray (empty circle)\n// In progress — blue (chart pie)\n// Delayed     - organge (exclamation)\n// Complete    - green (check)\n// Dropped     — red (cross)\n\nconst cardCases = (type: CardTypes): string => {\n  switch (type) {\n    case 'pending':\n      return 'M59 120a30 30 0 100 60 30 30 0 000-60zm93 0a30 30 0 100 60 30 30 0 000-60zm89 0a30 30 0 100 60 30 30 0 000-60z';\n    case 'progress':\n      return 'M150 150V15A135 135 0 1133.087 217.5L150 150';\n    case 'delayed':\n      return 'M150 21c-17 0-29 8-29 22v128c0 14 12 22 29 22 16 0 29-9 29-22V43c0-14-13-22-29-22zm0 201a29 29 0 100 58 29 29 0 000-58';\n    case 'complete':\n      return 'M119 260c-2 2-6 4-9 4s-7-2-10-4l-75-76c-8-8-8-20 0-28l9-10c8-7 21-7 29 0l47 48L237 66c8-8 21-8 29 0l9 10c8 8 8 20 0 28L119 260zm0 0';\n    case 'dropped':\n      return 'M185 150l66-66c8-7 8-19 0-27l-8-8c-8-8-20-8-27 0l-66 66-66-66c-7-8-19-8-27 0l-8 8c-8 8-8 20 0 27l66 66-66 66c-8 7-8 19 0 27l8 8c8 8 20 8 27 0l66-66 66 66c7 8 19 8 27 0l8-8c8-8 8-20 0-27l-66-66zm0 0';\n  }\n};\n\nconst CardStatus = ({ type, className }: { type?: CardTypes; className?: string }): JSX.Element | null =>\n  type ? (\n    <CardStatusSVG type={type} className={className}>\n      <path d={cardCases(type)} />\n    </CardStatusSVG>\n  ) : null;\n\nexport default React.memo(CardStatus);\n","import React, { useContext } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getProgressBackgroud, getCardStatus } from 'utils/ui';\nimport { selectCard, selectionDelete } from 'state/actions/selection';\nimport { removePlaceholder } from 'utils/placeholderActions';\nimport CardStatus from 'assets/CardStatus';\nimport { TodayString } from 'context/dates';\nimport { passID } from 'utils/subscribtion';\n\nimport { CardBlock, CardBlockProgress, CardBlockText } from 'styles/CardBlock';\n\nimport { Card } from 'types/state';\n\ntype Props = {\n  card: Card;\n  style: {\n    width: string;\n    top: string;\n  };\n};\n\nconst RoadmapCard = ({ card, style }: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const today = useContext(TodayString);\n\n  const clickCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    if (\n      (e.target as HTMLButtonElement)?.parentElement?.parentElement?.classList.contains('drag') ||\n      e.altKey ||\n      e.ctrlKey ||\n      e.metaKey ||\n      e.shiftKey\n    ) {\n      return;\n    }\n    dispatch(\n      selectCard({\n        id: card.id,\n      })\n    );\n  };\n\n  const handleDoubleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (e.altKey) {\n      dispatch(\n        selectionDelete({\n          id: card.id,\n        })\n      );\n    }\n  };\n\n  const handleMouseDown = () => {\n    passID.set(card.id);\n  };\n\n  return (\n    <CardBlock\n      style={style}\n      onClick={clickCard}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={removePlaceholder}\n      onMouseDown={handleMouseDown}\n    >\n      <CardStatus type={getCardStatus(card.from, card.until, today, card.progress)} />\n      <CardBlockProgress style={getProgressBackgroud(card.progress)} />\n      <CardBlockText>{card.text}</CardBlockText>\n    </CardBlock>\n  );\n};\n\nexport default React.memo(RoadmapCard);\n","import nanoid from 'utils/nanoid';\n\nimport { MainColors } from 'constants/colors';\n\nimport { AddMilestone, DeleteMilestone } from 'types/actions';\n\nconst colorNames = Object.keys(MainColors) as Array<keyof typeof MainColors>;\nconst getRandomColor = () => colorNames[Math.floor(Math.random() * colorNames.length)];\n\nexport const addMilestone = (date: string): AddMilestone => ({\n  type: 'ADD_MILESTONE',\n  payload: {\n    id: nanoid(),\n    date,\n    text: 'Wow!',\n    color: getRandomColor(),\n  },\n});\n\nexport const deleteMilestone = (date: string): DeleteMilestone => ({\n  type: 'DELETE_MILESTONE',\n  payload: {\n    date,\n  },\n});\n","import styled from 'styled-components';\n\nexport const MilestoneBlock = styled.div`\n  position: absolute;\n  top: 54px;\n  width: 14px;\n  min-height: 10px;\n  text-align: center;\n  margin: 0 8px;\n  color: #fff;\n  line-height: 0.8em;\n  background: #8c0756;\n  padding: 5px 0 0;\n  cursor: pointer;\n  filter: drop-shadow(0px 2px 1px rgba(0, 0, 0, 0.2));\n  box-shadow: inset 0 2px 2px rgba(0, 0, 0, 0.2);\n  user-select: none;\n  pointer-events: all;\n  .drag & {\n    pointer-events: none;\n  }\n  &:empty {\n    opacity: 0;\n  }\n  &:hover {\n    opacity: 1;\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    background: transparent;\n    top: 0;\n    left: -7px;\n    width: 29px;\n    height: 25px;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    top: 10px;\n    left: 2px;\n    width: 10px;\n    height: 10px;\n    background: inherit;\n    transform: rotate(45deg);\n    box-shadow: inset -1px -1px 3px -2px rgba(0, 0, 0, 0.2);\n    z-index: -1;\n  }\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addMilestone, deleteMilestone } from 'state/actions/milestones';\n\nimport { MainColors } from 'constants/colors';\n\nimport { MilestoneBlock } from 'styles/MilestoneBlock';\n\nimport { FullDateType } from 'types';\nimport { State } from 'types/state';\n\ntype Props = {\n  fullDate: FullDateType;\n};\n\nconst Milestone = ({ fullDate }: Props): JSX.Element => {\n  const milestonesObject = useSelector((state: State) => state.milestones);\n  const dispatch = useDispatch();\n\n  const milestones = Object.values(milestonesObject);\n  const todayMilestones = milestones.filter((milestone) => milestone.date === fullDate.dateString);\n  const todayMilestoneColor = todayMilestones[0] !== undefined ? todayMilestones[0].color : 'purple';\n  const todayMilestoneStyle = todayMilestones.length ? { background: MainColors[todayMilestoneColor] } : undefined;\n  const todayMilestoneNumber = todayMilestones.length ? todayMilestones.length : undefined;\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) {\n      return;\n    }\n    dispatch(addMilestone(fullDate.dateString));\n  };\n  const handleDoubleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (e.altKey) {\n      dispatch(deleteMilestone(fullDate.dateString));\n    }\n  };\n\n  return (\n    <MilestoneBlock style={todayMilestoneStyle} onClick={handleClick} onDoubleClick={handleDoubleClick}>\n      {todayMilestoneNumber}\n    </MilestoneBlock>\n  );\n};\n\nexport default React.memo(Milestone);\n","import React from 'react';\n\nimport { DayHeaderDayBlock, DayHeaderWeekday, DayHeaderDayNumber, DayHeaderMonth } from 'styles/DayHeader';\n\nimport { FullDateType } from 'types';\n\ntype Props = {\n  fullDate: FullDateType;\n  monthLength: number;\n};\n\nconst DayHeader = ({ fullDate, monthLength }: Props): JSX.Element => {\n  return (\n    <React.Fragment>\n      {monthLength !== 0 && (\n        <DayHeaderMonth\n          dateTime={fullDate.dateString.slice(0, 7)}\n          size={monthLength}\n        >{`${fullDate.monthName} ${fullDate.date.year}`}</DayHeaderMonth>\n      )}\n      <DayHeaderDayBlock dateTime={fullDate.dateString}>\n        <DayHeaderWeekday>{fullDate.weekDayShort}</DayHeaderWeekday>\n        <DayHeaderDayNumber>{fullDate.date.day}</DayHeaderDayNumber>\n      </DayHeaderDayBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(DayHeader);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getDaysInterval, getDaysInMonth } from 'utils/dates';\nimport { removePlaceholder } from 'utils/placeholderActions';\n\nimport C from 'constants/index';\n\nimport { DayHeaderBlock } from 'styles/DayHeader';\nimport { DateColumnItem } from 'styles/DateTable';\n\nimport Card from './Card';\nimport Milestone from './Milestone';\nimport DayHeader from './DayHeader';\n\nimport { FullDateType } from 'types';\nimport { State } from 'types/state';\n\ntype Props = {\n  fullDate: FullDateType;\n  index: number;\n  indexFromEnd: number;\n  scrollRef?: React.RefObject<HTMLLIElement>;\n};\n\nconst DateColumn = ({ fullDate, index, indexFromEnd, scrollRef }: Props): JSX.Element => {\n  const cardsObject = useSelector((state: State) => state.cards);\n  const cards = Object.values(cardsObject);\n\n  const today = fullDate.isToday ? 'today' : '';\n  const month = fullDate.date.day === 1 ? 'month' : '';\n  const weekend = fullDate.isWeekend ? 'weekend' : '';\n  const classAddition = (today + ' ' + weekend + ' ' + month).trim();\n\n  const monthLength =\n    index === 0 || fullDate.date.day === 1\n      ? index === 0\n        ? getDaysInMonth(fullDate.date.year, fullDate.date.month) - fullDate.date.day + 1\n        : Math.min(getDaysInMonth(fullDate.date.year, fullDate.date.month), indexFromEnd)\n      : 0;\n\n  return (\n    <DateColumnItem className={classAddition} data-date={fullDate.dateString} ref={scrollRef ? scrollRef : undefined}>\n      <DayHeaderBlock onMouseEnter={removePlaceholder}>\n        <DayHeader fullDate={fullDate} monthLength={monthLength} />\n        <Milestone fullDate={fullDate} />\n      </DayHeaderBlock>\n      {cards.map((card) => {\n        if (card.from === fullDate.dateString) {\n          const dayDiff = getDaysInterval(card.from, card.until);\n          const style = {\n            width: `${dayDiff * C.DAY.WIDTH - C.CARD_HORIZONTAL_SPACE}px`,\n            top: `${C.DAY.HEADER_HEIGHT + card.line * C.CARD_VERTICAL_SPACE}px`,\n          };\n          return <Card key={card.id} card={card} style={style} />;\n        }\n        return null;\n      })}\n    </DateColumnItem>\n  );\n};\n\nexport default React.memo(DateColumn);\n","import React, { useRef, useState, useLayoutEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getDatesArray, extendDatesArray, getDataString } from 'utils/dates';\nimport { getColumnSize, scrollToToday } from 'utils/ui';\nimport cardActions from 'utils/cardActions';\nimport { moveCard } from 'state/actions/cards';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport DayColumn from 'components/DateTable/DayColumn';\n\nimport C from 'constants/index';\n\nimport { DateTableBlock, TodayScroll } from 'styles/DateTable';\n\nimport { MoveCardProp } from 'types/actionsProps';\nimport { FullDateType } from 'types';\n\nconst columnSize: number = getColumnSize() * C.COLUMN_MULTIPLIER;\n\nconst DateTable = ({ todayTimestamp }: { todayTimestamp: number }): JSX.Element => {\n  const dispatch = useDispatch();\n  const listRef = useRef<HTMLUListElement>(null);\n  const todayRef = useRef<HTMLLIElement>(null);\n  const scroll = useRef({\n    left: 0,\n    fire: false,\n    ready: true,\n    position: 0,\n  });\n  const [datesArray, setDatesArray] = useState(getDatesArray(columnSize, todayTimestamp));\n  const [scrollPosition, setScrollPosition] = useState(0);\n  useLayoutEffect(() => {\n    // This event has to fire only when the timestamp changes, but not at the initial run\n    if (scroll.current.ready === false) {\n      const todayString = getDataString(todayTimestamp);\n      setDatesArray((currentDatesArray) =>\n        currentDatesArray.map((date) => ({\n          ...date,\n          isToday: date.dateString === todayString,\n        }))\n      );\n    }\n  }, [todayTimestamp]);\n  useLayoutEffect(() => {\n    if (scroll.current.ready && listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current);\n      scroll.current.position = listRef.current.scrollLeft;\n      scroll.current.ready = false;\n    }\n    if (scroll.current.fire && listRef.current) {\n      listRef.current.scrollLeft = scroll.current.left;\n      scroll.current.fire = false;\n    }\n  }, [datesArray]);\n\n  const remoteDispatch = (cardDetails: MoveCardProp) => dispatch(moveCard(cardDetails));\n  const { pressInZone, moveInZone, releaseInZone, enterZone, leaveZone } = cardActions(remoteDispatch);\n\n  const renderPastOrFuture = () => {\n    // TODO: Optimize bloated number of DOM elements on scroll (clean memory)\n    const list = listRef.current;\n    if (list && list.scrollLeft !== scroll.current.position) {\n      const backward = list.scrollLeft < scroll.current.position;\n      const scrollLimit = list.offsetWidth * (C.COLUMN_MULTIPLIER + 1);\n      if (!backward && scroll.current.position > list.scrollWidth - scrollLimit) {\n        setDatesArray(extendDatesArray(datesArray, columnSize, backward));\n      } else if (backward && scroll.current.position < scrollLimit) {\n        scroll.current.left = list.scrollLeft + columnSize * C.DAY.WIDTH;\n        scroll.current.fire = true;\n        setDatesArray(extendDatesArray(datesArray, columnSize, backward));\n      }\n      if (listRef.current && todayRef.current) {\n        const list = listRef.current;\n        const today = todayRef.current;\n        const todayMiddle = today.offsetLeft + today.offsetWidth / 2;\n        if (todayMiddle < list.scrollLeft) {\n          setScrollPosition(-1);\n        } else if (todayMiddle > list.scrollLeft + list.offsetWidth) {\n          setScrollPosition(1);\n        } else {\n          setScrollPosition(0);\n        }\n      }\n      scroll.current.position = list.scrollLeft;\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    if (listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current, true);\n      e.currentTarget.blur();\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <TodayScroll scrollPosition={scrollPosition} tabIndex={scrollPosition ? undefined : -1} onClick={handleClick}>\n        Today\n      </TodayScroll>\n      <DateTableBlock\n        ref={listRef}\n        onMouseDown={pressInZone}\n        onMouseMove={moveInZone}\n        onMouseUp={releaseInZone}\n        onMouseEnter={enterZone}\n        onMouseLeave={leaveZone}\n        onMouseOut={leaveZone}\n        onScroll={renderPastOrFuture}\n      >\n        {datesArray.map((fullDate: FullDateType, index: number) => (\n          <DayColumn\n            key={fullDate.dateString}\n            fullDate={fullDate}\n            index={index}\n            indexFromEnd={datesArray.length - index}\n            scrollRef={fullDate.isToday ? todayRef : undefined}\n          />\n        ))}\n        <Placeholder />\n      </DateTableBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(DateTable);\n","import { EditCard, MoveCard } from 'types/actions';\nimport { MoveCardProp } from 'types/actionsProps';\nimport { EditSelection } from 'types/state';\n\nexport const editCard = (props: EditSelection): EditCard => ({\n  type: 'EDIT_CARD',\n  payload: {\n    ...props,\n  },\n});\n\nexport const moveCard = (props: MoveCardProp): MoveCard => ({\n  type: 'MOVE_CARD',\n  payload: {\n    ...props,\n  },\n});\n","import styled from 'styled-components';\n\nexport const MainBlock = styled.main`\n  position: relative;\n  flex: 1;\n  display: flex;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { getTodayTimestamp, getMilisecondsUntilTomorrow, getDataString } from 'utils/dates';\nimport { selectionCancel } from 'state/actions/selection';\nimport { placeholderUpdate } from 'utils/placeholderActions';\nimport { TodayString } from 'context/dates';\nimport DateTable from 'components/DateTable/DateTable';\n\nimport { MainBlock } from 'styles/Main';\n\nlet timeout: number;\n\nconst Roadmap = (): JSX.Element => {\n  const [todayTimestamp, setTodayTimestamp] = useState(getTodayTimestamp());\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const manageTimer = () => {\n      if (document.hidden) {\n        window.clearTimeout(timeout);\n      } else {\n        const newTimestamp = getTodayTimestamp();\n        if (todayTimestamp !== newTimestamp) {\n          setTodayTimestamp(getTodayTimestamp());\n        } else {\n          timeout = window.setTimeout(() => {\n            setTodayTimestamp(getTodayTimestamp());\n          }, getMilisecondsUntilTomorrow());\n        }\n      }\n    };\n    manageTimer();\n    document.addEventListener('visibilitychange', manageTimer);\n    return () => {\n      document.removeEventListener('visibilitychange', manageTimer);\n    };\n  }, [todayTimestamp]);\n  useEffect(() => {\n    const cancelAction = (e: KeyboardEvent): void => {\n      if (e.key.toLocaleLowerCase() === 'escape') {\n        e.preventDefault();\n        dispatch(selectionCancel());\n        placeholderUpdate.update({\n          started: false,\n        });\n      }\n    };\n    document.addEventListener('keydown', cancelAction);\n    return () => {\n      document.removeEventListener('keydown', cancelAction);\n    };\n  }, [dispatch]);\n\n  return (\n    <MainBlock>\n      <TodayString.Provider value={getDataString(todayTimestamp)}>\n        <DateTable todayTimestamp={todayTimestamp} />\n      </TodayString.Provider>\n    </MainBlock>\n  );\n};\n\nexport default React.memo(Roadmap);\n","import styled, { keyframes } from 'styled-components';\n\nexport const EditScreen = styled.section`\n  background: rgba(0, 0, 0, 0.2);\n  position: absolute;\n  overflow-y: scroll;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 100;\n`;\n\nexport const shake = keyframes`\n  8%, 41% {\n    transform: translateX(-10px);\n  }\n  25%, 58% {\n    transform: translateX(10px);\n  }\n  75% {\n    transform: translateX(-5px);\n  }\n  92% {\n    transform: translateX(5px);\n  }\n  0%, 100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const EditForm = styled.form`\n  background: #f7f8f9;\n  width: 600px;\n  max-width: 90%;\n  box-sizing: border-box;\n  margin: 15vh auto;\n  padding: 17px 20px 13px;\n  box-shadow: 0 0 0 0 #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  transition: box-shadow 0.3s;\n  &.invalid {\n    animation: ${shake} 0.3s linear;\n    box-shadow: 0 0 0 1px #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const EditExtra = styled.div`\n  background: #e7e7ec;\n  margin: 12px -20px -13px;\n  padding: 19px;\n  font-size: 12px;\n  border-radius: 0 0 5px 5px;\n  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Fieldset = styled.fieldset`\n  margin: 0;\n  padding: 0;\n  border: none;\n  display: inline-flex;\n  flex-wrap: wrap;\n  & > label,\n  & > span,\n  & > input {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 14px;\n  line-height: 27px;\n  background: #d9d9de;\n  border: 1px solid #999;\n  margin: 0 -5px 0 0;\n  padding: 0 13px 0 9px;\n  border-radius: 3px;\n  z-index: 3;\n`;\n\nexport const LabelWarp = styled(FormLabel).attrs({\n  as: 'span',\n})`\n  padding-left: ${({ join }: { join?: boolean }) => join && '13px'};\n  & + input[type='text'] {\n    width: 25px;\n    text-align: right;\n  }\n`;\n\nexport const FormInput = styled.input.attrs({\n  type: 'text',\n})`\n  background: #efeff3;\n  border: 1px solid #999;\n  border-radius: 3px;\n  margin: 0 5px 0 0;\n  padding: 0 7px 0 8px;\n  width: 75px;\n  font-size: 14px;\n  line-height: 27px;\n  z-index: 5;\n  &:focus {\n    background: #f7f8f9;\n  }\n  &::last-child {\n    margin-right: 0;\n  }\n  &:invalid,\n  &:invalid:focus {\n    border-color: #d22121;\n    outline-color: #d22121;\n  }\n`;\n\nexport const FormInputWrap = styled(FormInput).attrs({\n  as: 'span',\n})`\n  width: auto;\n  margin-right: -5px;\n`;\n\nexport const RangeInput = styled.input.attrs({\n  type: 'range',\n})`\n  height: 5px;\n  display: block;\n  margin: 11px 0 0;\n  appearance: none;\n  background: #2196f3;\n  border-radius: 4px;\n  box-shadow: inset 0 0px 1px 0px #333;\n  &::-webkit-slider-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &::-moz-range-thumb,\n  &::-ms-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &:disabled {\n    background: #999;\n  }\n  & + input[type='text'] {\n    width: 24px;\n    text-align: right;\n  }\n`;\n\nexport const EditExtraFields = styled.div`\n  flex: 1;\n  line-height: 0;\n  & hr {\n    background: transparent;\n    border: none;\n    margin: 0 auto;\n    padding-right: 5px;\n  }\n  & svg {\n    width: 15px;\n    height: 15px;\n    margin: 3px;\n    opacity: 0;\n    z-index: 1;\n    transform: translate(-40px, 0) scale(0.1);\n    transition: transform ease-in 0.1s, opacity ease-in 0.1s;\n    &.active {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`;\n\nexport const EditExtraActions = styled.div`\n  flex: 0;\n`;\n\nexport const EditEntry = styled.textarea.attrs((props) => ({\n  placeholder: props.placeholder ? props.placeholder : 'Task name',\n  rows: 1,\n}))`\n  font: inherit;\n  width: 100%;\n  padding: 0;\n  border: none;\n  background: transparent;\n  resize: none;\n  &:focus {\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst hoverColor = ({ action }: { action?: string }) => (action === 'danger' ? '#d22121' : '#5e88ad');\n\nexport const Button = styled.button.attrs({\n  type: 'button',\n})`\n  border: none;\n  width: 100%;\n  margin: 0;\n  padding: 6px 10px 5px;\n  font-size: 12px;\n  z-index: 1;\n  position: relative;\n  color: #777;\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px #999;\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    z-index: 2;\n    cursor: pointer;\n    color: ${hoverColor};\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px ${hoverColor};\n  }\n  svg {\n    width: 23px;\n    display: none;\n    fill: currentColor;\n    margin: -3px -7px -5px;\n  }\n  & + & {\n    margin-top: -1px;\n  }\n  &:disabled {\n    color: #ccc;\n    background: #eee;\n  }\n  &:first-child {\n    border-radius: 3px 3px 0 0;\n  }\n  &:last-child {\n    border-radius: 0 0 3px 3px;\n  }\n  @media (max-width: 768px) {\n    span {\n      display: none;\n    }\n    svg {\n      display: inline-block;\n    }\n  }\n`;\n","import React, { useState, ChangeEvent } from 'react';\n\nimport { LabelWarp, RangeInput, FormInput } from 'styles/EditScreen';\n\ntype Props = {\n  id: string;\n  min: number;\n  max: number;\n  value: number;\n  disabled: boolean;\n  change?: (value: number) => void;\n  save: () => void;\n  title?: string;\n  join?: boolean;\n};\n\nconst Range = ({ id, min, max, value, disabled, change, save, title, join }: Props): JSX.Element => {\n  const [val, setVal] = useState(value);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const newVal = Math.min(Math.max(parseInt(e.target.value, 10), min), max);\n    if (!Number.isNaN(newVal)) {\n      setVal(newVal);\n      if (change) {\n        change(newVal);\n      }\n    }\n  };\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <label htmlFor={id}>{title}</label> : null}\n      <LabelWarp join={join}>\n        <RangeInput id={id} min={min} max={max} disabled={disabled} value={val} onChange={handleChange} />\n      </LabelWarp>\n      <FormInput value={val} onChange={handleChange} onKeyDown={handleKeyDown} disabled={disabled} />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Range);\n","import styled from 'styled-components';\n\nexport const SwitchBlock = styled.label`\n  position: relative;\n  display: block;\n  width: 38px;\n  height: 21px;\n  margin: 3px 0;\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n    &:checked + span {\n      background-color: #2196f3;\n    }\n    &:focus + span {\n      box-shadow: 0 0 0 1px #efeff3, 0 0 0 3px #025fcc, 0 0 0 4px #fff;\n    }\n    &:checked + span:before {\n      transform: translateX(17px);\n    }\n  }\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #999;\n    transition: 0.1s;\n    border-radius: 12px;\n    &:before {\n      position: absolute;\n      content: '';\n      height: 17px;\n      width: 17px;\n      left: 2px;\n      bottom: 2px;\n      background-color: white;\n      transition: 0.1s;\n      border-radius: 50%;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FormInputWrap, FormLabel } from 'styles/EditScreen';\nimport { SwitchBlock } from 'styles/Switch';\n\ntype Props = { id: string; value: boolean; toggle: (value: boolean) => void; title?: string };\n\nconst Switch = ({ id, value, toggle, title }: Props): JSX.Element => {\n  const handleToggle = () => toggle(!value);\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <FormLabel htmlFor={id}>{title}</FormLabel> : null}\n      <FormInputWrap>\n        <SwitchBlock>\n          <input type=\"checkbox\" id={id} defaultChecked={value} onChange={handleToggle} />\n          <span />\n        </SwitchBlock>\n      </FormInputWrap>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Switch);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { Fieldset, FormLabel, FormInput } from 'styles/EditScreen';\n\ntype DateInputProps = {\n  date?: string;\n  setDate: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  save: () => void;\n  title: string;\n  setFocus?: boolean;\n};\n\nconst DateInput = ({ date, setDate, save, title, setFocus }: DateInputProps): JSX.Element | null => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, []);\n\n  const name = title.toLowerCase();\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n\n  return date === undefined ? null : (\n    <Fieldset>\n      <FormLabel htmlFor={name}>{title}</FormLabel>\n      <FormInput\n        id={name}\n        ref={setFocus ? inputRef : undefined}\n        value={date}\n        onChange={setDate}\n        onKeyDown={handleKeyDown}\n        required\n        pattern=\"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))\"\n      />\n    </Fieldset>\n  );\n};\n\nexport default React.memo(DateInput);\n","import React, { useContext } from 'react';\nimport Save from '@material-ui/icons/Save';\nimport Revert from '@material-ui/icons/NotInterested';\nimport Delete from '@material-ui/icons/DeleteForever';\n\nimport CardStatus from 'assets/CardStatus';\nimport { getCardStatus } from 'utils/ui';\nimport { TodayString } from 'context/dates';\n\nimport { Button } from 'styles/Form';\nimport { EditExtra, EditExtraActions, EditExtraFields, Fieldset } from 'styles/EditScreen';\n\nimport Range from './Range';\nimport Switch from './Switch';\nimport DateInput from './DateInput';\n\nimport { EditSelection } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\ntype EditFieldsProps = {\n  selection: EditSelection;\n  setSelection: React.Dispatch<React.SetStateAction<EditSelection>>;\n  cardDispatch: CardDispatch;\n  setFocus: boolean;\n};\n\nconst EditFields = ({ selection, setSelection, cardDispatch, setFocus }: EditFieldsProps): JSX.Element | null => {\n  const today = useContext(TodayString);\n\n  const progress = selection.progress || 0;\n  const isProgressOn = Number.isFinite(selection.progress);\n  const setProgress = (value: number) =>\n    setSelection({\n      ...selection,\n      progress: value,\n    });\n  const setProgressOn = (value: boolean) => {\n    if (value) {\n      selection.progress = progress;\n    } else {\n      delete selection.progress;\n    }\n    setSelection({ ...selection });\n  };\n  const setDate = (type: 'from' | 'until') => (e: React.ChangeEvent<HTMLInputElement>) =>\n    setSelection({\n      ...selection,\n      [type]: e.target.value,\n    });\n\n  const setFrom = setDate('from');\n  const setUntil = setDate('until');\n\n  const { from, until } = selection;\n\n  return (\n    <EditExtra>\n      <EditExtraFields>\n        <DateInput date={from} setDate={setFrom} save={cardDispatch.save} title=\"From\" setFocus={setFocus} />\n        <DateInput date={until} setDate={setUntil} save={cardDispatch.save} title=\"Until\" />\n\n        <Fieldset>\n          <Switch id=\"showProgress\" value={isProgressOn} toggle={setProgressOn} title=\"Completion\" />\n          <Range\n            id=\"progress\"\n            min={0}\n            max={100}\n            disabled={!isProgressOn}\n            value={progress}\n            change={setProgress}\n            save={cardDispatch.save}\n            join={true}\n          />\n          {from && until && typeof progress === 'number' && (\n            <CardStatus\n              type={getCardStatus(from, until, today, progress)}\n              className={isProgressOn ? 'active' : undefined}\n            />\n          )}\n        </Fieldset>\n      </EditExtraFields>\n      <EditExtraActions>\n        <Button onClick={cardDispatch.save} title=\"Save changes\" action={'primary'}>\n          <Save />\n          <span>Save</span>\n        </Button>\n        <Button onClick={cardDispatch.cancel} title=\"Revert changes\">\n          <Revert />\n          <span>Revert</span>\n        </Button>\n        <Button onClick={cardDispatch.delete} title=\"Delete card\" action={'danger'}>\n          <Delete />\n          <span>Delete</span>\n        </Button>\n      </EditExtraActions>\n    </EditExtra>\n  );\n};\n\nexport default React.memo(EditFields);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditEntry } from 'styles/EditScreen';\n\nimport { EditSelection } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst EditTitle = ({\n  selection,\n  setSelection,\n  cardDispatch,\n  enforceExtraFields,\n}: {\n  selection: EditSelection;\n  setSelection: React.Dispatch<React.SetStateAction<EditSelection>>;\n  cardDispatch: CardDispatch;\n  enforceExtraFields: React.Dispatch<React.SetStateAction<boolean>> | undefined;\n}): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, [selection.id]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    autoscaleTextarea(e.target as HTMLTextAreaElement);\n    setSelection({\n      ...selection,\n      text: e.target.value,\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      cardDispatch.save();\n    } else if (e.key.toLocaleLowerCase() === 'tab') {\n      if (enforceExtraFields) {\n        e.preventDefault();\n        enforceExtraFields(true);\n      }\n    }\n  };\n\n  return (\n    <EditEntry\n      ref={inputRef}\n      autoFocus={true}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      value={selection.text}\n    />\n  );\n};\n\nexport default React.memo(EditTitle);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // TODO: shallowEqual\n\nimport { editCard } from 'state/actions/cards';\nimport { selectionCancel, selectionDelete } from 'state/actions/selection';\nimport { hasCardChanged, isCardValid } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm } from 'styles/EditScreen';\n\nimport EditFields from './EditFields';\nimport EditTitle from './EditTitle';\n\nimport { EditSelection, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst DefaultState = {\n  id: '',\n  text: '',\n  line: 0,\n  from: '',\n  until: '',\n} as EditSelection;\n\nconst EditScreen = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const selection = useSelector((state: State) => state.selection);\n  const selectedElement = useSelector((state: State) => (selection.isNew ? undefined : state.cards[selection.id]));\n  const [isExtraFieldsEnforced, enforceExtraFields] = useState(selectedElement !== undefined);\n  const [newSelection, setNewSelection] = useState(DefaultState);\n  const [isInvalid, setInvalid] = useState(false);\n  useEffect(() => {\n    if (isInvalid) {\n      setTimeout(() => setInvalid(false), 500);\n    }\n  }, [isInvalid]);\n  useEffect(() => {\n    if (selection.id === '') {\n      enforceExtraFields(selectedElement !== undefined);\n    } else {\n      setNewSelection({\n        id: (selectedElement || selection).id,\n        text: (selectedElement || selection).text,\n        line: (selectedElement || selection).line,\n        from: (selectedElement || selection).from,\n        until: (selectedElement || selection).until,\n        progress: (selectedElement || selection).progress,\n      });\n    }\n    return () => {\n      setNewSelection(DefaultState);\n    };\n  }, [selection, selectedElement]);\n\n  if (selection.type === '' || newSelection.id === '') {\n    return null;\n  }\n\n  const cardDispatch: CardDispatch = {\n    save: () => {\n      if (isCardValid(newSelection)) {\n        return dispatch(hasCardChanged(newSelection, selectedElement) ? selectionCancel() : editCard(newSelection));\n      } else {\n        // TODO: Show user incorrect fields\n        setInvalid(true);\n        return;\n      }\n    },\n    cancel: () => dispatch(selectionCancel()),\n    delete: () => {\n      dispatch(\n        selectedElement\n          ? selectionDelete({\n              id: newSelection.id,\n            })\n          : selectionCancel()\n      );\n    },\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      cardDispatch.cancel();\n    }\n  };\n\n  const hasExtraFields = isExtraFieldsEnforced || Boolean(selectedElement);\n  return (\n    <Screen onClick={handleClick} data-form=\"edit\">\n      <EditForm className={isInvalid ? 'invalid' : undefined}>\n        <EditTitle\n          selection={newSelection}\n          setSelection={setNewSelection}\n          cardDispatch={cardDispatch}\n          enforceExtraFields={hasExtraFields ? undefined : enforceExtraFields}\n        />\n        {hasExtraFields ? (\n          <EditFields\n            selection={newSelection}\n            setSelection={setNewSelection}\n            cardDispatch={cardDispatch}\n            setFocus={isExtraFieldsEnforced}\n          />\n        ) : null}\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(EditScreen);\n","import {\n  AuthFetch,\n  AuthSuccess,\n  AuthOut,\n  SetAccountRoadmaps,\n  AddAccountRoadmap,\n  RemoveAccountRoadmap,\n  SetCurrentRoadmap,\n  RemoveCurrentRoadmap,\n  RoadmapDataFetch,\n} from 'types/actions';\nimport { AuthSuccessProp } from 'types/actionsProps';\nimport { PersistentState, State } from 'types/state';\n\nexport const authFetch = (): AuthFetch => ({\n  type: 'AUTH_FETCH',\n});\n\nexport const authSuccess = (userData: AuthSuccessProp): AuthSuccess => ({\n  type: 'AUTH_SUCCESS',\n  payload: {\n    ...userData,\n  },\n});\n\nexport const authOut = (): AuthOut => ({\n  type: 'AUTH_OUT',\n});\n\nexport const setAccountRoadmaps = (\n  roadmaps: State['user']['roadmaps'],\n  meta: State['roadMeta']\n): SetAccountRoadmaps => ({\n  type: 'SET_ACCOUNT_ROADMAPS',\n  payload: {\n    roadmaps,\n    meta,\n  },\n});\n\nexport const addAccountRoadmap = (roadmapName: string): AddAccountRoadmap => ({\n  type: 'ADD_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapName,\n  },\n});\n\nexport const removeAccountRoadmap = (roadmapID: string): RemoveAccountRoadmap => ({\n  type: 'REMOVE_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapID,\n  },\n});\n\nexport const setCurrentRoadmap = (currentRoadmapID: string): SetCurrentRoadmap => ({\n  type: 'SET_CURRENT_ROADMAP',\n  payload: {\n    currentRoadmapID,\n  },\n});\n\nexport const removeCurrentRoadmap = (): RemoveCurrentRoadmap => ({\n  type: 'REMOVE_CURRENT_ROADMAP',\n});\n\nexport const roadmapDataFetch = (roadmapData: PersistentState): RoadmapDataFetch => ({\n  type: 'ROADMAP_DATA_FETCH',\n  payload: {\n    ...roadmapData,\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\nimport Roadmap from 'components/Roadmap/Roadmap';\nimport EditScreen from 'components/EditScreen/EditScreen';\nimport { setCurrentRoadmap, removeCurrentRoadmap } from 'state/actions/user';\n\nimport { RouteMatch } from 'types/routes';\nimport { State } from 'types/state';\n\nconst RoadmapScreen = (): JSX.Element => {\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { id: routeID } = (useRouteMatch('/roadmap/:id') as RouteMatch).params;\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const userRoadmapIDs = Object.keys(useSelector((state: State) => state.user.roadmaps));\n  useEffect(() => {\n    // TODO: Split two conditions if we want to create a roadmap for users without it\n    if (userRoadmapIDs.length && userRoadmapIDs.includes(routeID)) {\n      if (currentRoadmapID !== routeID) {\n        // We need to mark a roadmap as loaded to clean the state when navigating away\n        dispatch(setCurrentRoadmap(routeID));\n      }\n    } else {\n      // Account's roadmap list is loaded, but it's empty or doesn't contain the requested ID\n      history.push('/');\n    }\n    return () => {\n      // One of the roadmaps was loaded & rendered and we navigating away from this page\n      if (currentRoadmapID && location.pathname !== history.location.pathname) {\n        dispatch(removeCurrentRoadmap());\n      }\n    };\n  }, [history, location, dispatch, currentRoadmapID, routeID, userRoadmapIDs]);\n\n  return (\n    <React.Fragment>\n      <Roadmap />\n      <EditScreen />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(RoadmapScreen);\n","import styled from 'styled-components';\n\nimport color from 'constants/colors';\n\nexport const Toast = styled.span`\n  max-width: 90%;\n  font-size: 14px;\n  margin: 30px auto;\n  border: 3px double #ccc;\n  background: #eaecef;\n  padding: 20px 25px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-align: center;\n  display: table;\n  button {\n    appearance: none;\n    background: none;\n    cursor: pointer;\n    font: inherit;\n    border: none;\n    padding: 0;\n    margin: 0;\n    &:hover {\n      color: ${color.header.soft};\n    }\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    opacity: 0.2;\n    background: url('pattern.svg') #f7f8f9 -100px -140px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const RoadmapList = styled.section`\n  width: 300px;\n  margin: 20px auto;\n  font-size: 16px;\n`;\n\nexport const RoadmapListTitle = styled.span`\n  display: inline-block;\n  width: 100%;\n  padding: 0 10px;\n  box-sizing: border-box;\n`;\n\nexport const RoadmapListBubble = styled.span`\n  background: #aaa;\n  color: #fff;\n  padding: 0px 2px 0 3px;\n  border-radius: 4px;\n  font-weight: 100;\n  letter-spacing: 0.05em;\n  font-size: 13px;\n  float: right;\n  margin: 2px 0;\n  text-shadow: 1px 1px #999;\n`;\n\nexport const RoadmapListItem = styled(Link)`\n  display: inline-block;\n  width: 100%;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  margin: 10px auto 0;\n  padding: 8px 10px 6px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-decoration: none;\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n`;\n\nexport const RoadmapListItemDetail = styled.small`\n  display: block;\n  font-size: 12px;\n  color: #ccc;\n  margin: 5px 0 2px;\n`;\n\nexport const RoadmapListAdd = styled.button.attrs({\n  type: 'button',\n})`\n  width: 100%;\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  margin: 10px auto 0;\n  padding: 8px 10px;\n  border-radius: 4px;\n  appearance: none;\n  background: none;\n  border: none;\n  font-size: 14px;\n  color: #aaa;\n  cursor: pointer;\n  &:hover {\n    color: ${color.header.soft};\n    box-shadow: inset 0 0 0 1px ${color.header.soft};\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { handleAuth } from 'data/auth';\nimport { getLocalString } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport { Spinner } from 'styles/Common/Spinner';\nimport { Toast } from 'styles/Common/Toast';\nimport {\n  RoadmapList,\n  RoadmapListTitle,\n  RoadmapListBubble,\n  RoadmapListItem,\n  RoadmapListAdd,\n  RoadmapListItemDetail,\n} from 'styles/Overview';\n\nimport { State } from 'types/state';\n\nconst limit = C.PLAN.FREE.LIMIT.ROADMAPS;\n\nconst Overview = ({ showInput }: { showInput: (value: boolean) => void }): JSX.Element => {\n  const userRoadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const userRoadmaps = useSelector((state: State) => state.user.roadmaps);\n  const roadMeta = useSelector((state: State) => state.roadMeta);\n  const user = useSelector((state: State) => state.user);\n  if (!user.fetchig && !user.id) {\n    return (\n      <Toast>\n        Please <button onClick={handleAuth}>sign in</button> to load existing or create new roadmaps.\n      </Toast>\n    );\n  }\n  if (!userRoadmapsSet) {\n    return <Spinner />;\n  }\n  const roadmapsIDs = Object.keys(userRoadmaps);\n  const createRoadmap = () => showInput(true);\n  return (\n    <RoadmapList>\n      <RoadmapListTitle>\n        Available Roadmaps\n        <RoadmapListBubble title={`With free plan you can create up to ${limit} roadmaps`}>\n          {roadmapsIDs.length}/{limit}\n        </RoadmapListBubble>\n      </RoadmapListTitle>\n      {roadmapsIDs\n        .sort((a, b) => roadMeta[a].createdAt - roadMeta[b].createdAt)\n        .map(\n          (id, index) =>\n            index < limit && (\n              <RoadmapListItem key={id} to={`/roadmap/${id}/`}>\n                {roadMeta[id].name}\n                <RoadmapListItemDetail>Creation date: {getLocalString(roadMeta[id].createdAt)}</RoadmapListItemDetail>\n              </RoadmapListItem>\n            )\n        )}\n      {roadmapsIDs.length < limit && <RoadmapListAdd onClick={createRoadmap}>Create new roadmap</RoadmapListAdd>}\n    </RoadmapList>\n  );\n};\n\nexport default React.memo(Overview);\n","import React, { useLayoutEffect, useRef } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm, EditEntry } from 'styles/EditScreen';\n\nconst handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n  autoscaleTextarea(e.target as HTMLTextAreaElement);\n};\n\ntype Props = {\n  isShowingInput: boolean;\n  showInput: (value: boolean) => void;\n  roadmapName: string;\n  setRoadmapName: (value: string) => void;\n};\n\nconst SingleLineInput = ({ isShowingInput, showInput, roadmapName, setRoadmapName }: Props): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, []);\n\n  if (!isShowingInput) {\n    return null;\n  }\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      showInput(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      const { value } = e.currentTarget;\n      if (value !== '' && roadmapName !== value) {\n        setRoadmapName(value);\n      }\n      showInput(false);\n    } else if (e.key.toLocaleLowerCase() === 'escape') {\n      showInput(false);\n    }\n  };\n\n  return (\n    <Screen onClick={handleClick}>\n      <EditForm>\n        <EditEntry\n          ref={inputRef}\n          autoFocus={true}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Roadmap name\"\n        />\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(SingleLineInput);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Overview from 'components/Overview/Overview';\nimport SingleLineInput from 'components/Overview/SingleLineInput';\nimport { addAccountRoadmap } from 'state/actions/user';\n\nconst OverviewScreen = (): JSX.Element => {\n  const [isShowingInput, showInput] = useState(false);\n  const [roadmapName, setRoadmapName] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roadmapName) {\n      dispatch(addAccountRoadmap(roadmapName));\n    }\n  }, [dispatch, roadmapName]);\n  return (\n    <React.Fragment>\n      <Overview showInput={showInput} />\n      <SingleLineInput\n        isShowingInput={isShowingInput}\n        showInput={showInput}\n        roadmapName={roadmapName}\n        setRoadmapName={setRoadmapName}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(OverviewScreen);\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  input {\n    font-family: Helvetica, Arial, sans-serif;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport Header from 'components/Header/Header';\nimport Roadmap from 'components/Screens/Roadmap';\nimport Overview from 'components/Screens/Overview';\n\nimport { Spinner } from 'styles/Common/Spinner';\nimport { GlobalStyle } from 'styles/Global';\n\nimport { State } from 'types/state';\n\nconst Routes = (): JSX.Element => (\n  <Switch>\n    <Route path=\"/roadmap/:id\">\n      <Roadmap />\n    </Route>\n    <Route path=\"/\">\n      <Overview />\n    </Route>\n  </Switch>\n);\n\nconst Auth = (): JSX.Element => {\n  const fetchig = useSelector((state: State) => state.user.fetchig);\n  const userID = useSelector((state: State) => state.user.id);\n  const history = useHistory();\n  useEffect(() => {\n    if (!fetchig && userID === '') {\n      history.push('/'); // User isn't defined (logged out), but fetching has stopped\n    }\n  }, [history, fetchig, userID]);\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      <Header />\n      {fetchig ? <Spinner /> : <Routes />}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Auth);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nexport default (): void =>\n  void firebase.initializeApp({\n    apiKey: 'AIzaSyCEwZ2uDycrD2WnxZGF6LZGeXNJRf5Nxjo',\n    authDomain: 'auth.roadmap.business',\n    databaseURL: 'https://roadmap-business.firebaseio.com',\n    projectId: 'roadmap-business',\n    storageBucket: 'roadmap-business.appspot.com',\n    messagingSenderId: '191720794635',\n    appId: '1:191720794635:web:813af7fecc632a4f29f50e',\n  });\n","import { ElementType, State } from 'types/state';\n\nexport default {\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    photoURL: '',\n    fetchig: false,\n    roadmaps: {},\n    roadmapsSet: false,\n  },\n  // settings: {},\n  // roadmap: {\n  //   id: '',\n  //   cards: [],\n  //   lists: [],\n  //   buckets: [],\n  //   milestones: [],\n  // },\n  cards: {},\n  // lists: {},\n  milestones: {},\n  selection: {\n    id: '',\n    isNew: false,\n    line: 0,\n    type: ElementType.none,\n    text: '',\n    from: '',\n    until: '',\n  },\n  roadMeta: {},\n  ui: {\n    connectionStatus: 'syncing',\n    currentRoadmapID: '',\n  },\n} as State;\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['ui'];\n\nexport default (state: StatePart = initialState.ui, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'CONNECTION_UPDATE':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          connectionStatus: action.payload.status,\n        };\n      });\n    case 'SET_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: action.payload.currentRoadmapID,\n        };\n      });\n    case 'REMOVE_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: '',\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.ui;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport cards from './cards';\nimport milestones from './milestones';\nimport selection from './selection';\nimport roadMeta from './roadMeta';\nimport user from './user';\nimport ui from './ui';\n\nexport default combineReducers({\n  cards,\n  milestones,\n  selection,\n  roadMeta,\n  user,\n  ui,\n});\n","import produce from 'immer';\n\nimport { getNewDates } from 'utils/dates';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['cards'];\n\nexport default (state = initialState.cards, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'EDIT_CARD':\n      return produce(state, (nextState: StatePart) => {\n        if (!Number.isInteger(action.payload.progress)) {\n          delete action.payload.progress;\n        }\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'MOVE_CARD':\n      return produce(state, (nextState: StatePart) => {\n        const card = nextState[action.payload.id];\n        const [from, until] = getNewDates(action.payload, [card.from, card.until]);\n        const line = Math.max(card.line + action.payload.lineDiff, 0);\n        nextState[action.payload.id] = {\n          ...nextState[action.payload.id],\n          line,\n          from,\n          until,\n        };\n        return nextState;\n      });\n    case 'SELECTION_DELETE':\n      if (state[action.payload.id] !== undefined) {\n        return produce(state, (nextState: StatePart) => {\n          delete nextState[action.payload.id];\n          return nextState;\n        });\n      }\n      return state;\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.cards,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.cards;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['milestones'];\n\nexport default (state = initialState.milestones, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ADD_MILESTONE':\n      return produce(state, (nextState: StatePart) => {\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'DELETE_MILESTONE':\n      return produce(state, (nextState: StatePart) => {\n        Object.values(nextState).forEach((milestone) => {\n          if (milestone.date === action.payload.date) {\n            delete nextState[milestone.id];\n          }\n        });\n        return nextState;\n      });\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.milestones,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.milestones;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State, ElementType } from 'types/state';\n\ntype StatePart = State['selection'];\n\nexport default (state = initialState.selection, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'NEW_CARD':\n    case 'SELECT_CARD':\n      return produce(state, (nextState: StatePart) => ({\n        ...nextState,\n        ...action.payload,\n        type: ElementType.card,\n      }));\n    case 'SELECTION_CANCEL':\n    case 'SELECTION_DELETE':\n    case 'EDIT_CARD':\n      return produce(state, () => initialState.selection);\n    case 'AUTH_OUT':\n      return initialState.selection;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['roadMeta'];\n\nexport default (state: StatePart = initialState.roadMeta, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload.meta,\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.roadMeta;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['user'];\n\nexport default (state: StatePart = initialState.user, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'AUTH_FETCH':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          fetchig: true,\n        };\n      });\n    case 'AUTH_SUCCESS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload,\n          fetchig: false,\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.user;\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          roadmaps: {\n            ...nextState.roadmaps,\n            ...action.payload.roadmaps,\n          },\n          roadmapsSet: true,\n        };\n      });\n    case 'REMOVE_ACCOUNT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        delete nextState.roadmaps[action.payload.roadmapID];\n        return nextState;\n      });\n    default:\n      return state;\n  }\n};\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel, END } from 'redux-saga';\n\nimport { Card, PersistentState } from 'types/state';\n\nexport const getRoadmapContent = (roadmapID: string): EventChannel<PersistentState> =>\n  eventChannel((emiter) => {\n    const listener = firebase.database().ref(`roadmaps/${roadmapID}`);\n    listener.on('value', (snapshot) => {\n      const value = snapshot.val() as PersistentState;\n      if (value) {\n        emiter(value);\n      } else {\n        // This roadmap hasn't been found or access is denied\n        emiter(END);\n        listener.off();\n      }\n    });\n    return () => {\n      listener.off();\n    };\n  });\n\nexport const fetchAccountDetails = (userID: string): Promise<firebase.database.DataSnapshot> =>\n  firebase.database().ref(`users/${userID}`).once('value');\n\nexport const fetchRoadmapMeta = (roadmapID: string): Promise<firebase.database.DataSnapshot> =>\n  firebase.database().ref(`roadmaps/${roadmapID}/meta/`).once('value');\n\nexport const updateRemoteCardData = (currentRoadmapID: string, card: Card | { id: string }): void => {\n  const { id, ...content } = card;\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/cards/${id}`);\n  if (Object.keys(content).length) {\n    void ref.update(content);\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const addRemoteAccountRoadmap = async (userID: string, time: number, roadmapName: string): Promise<string> => {\n  const roadmapID = firebase.database().ref(`users/${userID}/roadmaps/`).push().key;\n  if (roadmapID) {\n    await firebase\n      .database()\n      .ref(`users/${userID}/roadmaps/`)\n      .update({\n        [roadmapID]: true,\n      });\n    await firebase.database().ref(`roadmaps/${roadmapID}/meta/`).update({\n      name: roadmapName,\n      createdAt: time,\n    });\n    return roadmapID;\n  }\n  return '';\n};\n\nexport const removeRemoteAccountRoadmap = (userID: string, roadmapID: string): void => {\n  void firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}/`).remove();\n};\n","import firebase from 'firebase/app';\n\nimport { State } from 'types/state';\n\nexport const createAccount = (user: State['user']): void =>\n  void firebase.database().ref(`users/${user.id}`).set({\n    email: user.email,\n    name: user.name,\n  });\n","import firebase from 'firebase';\nimport { put, fork, take, call, select, TakeEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { fetchAccountDetails, fetchRoadmapMeta } from 'data/data';\nimport { createAccount } from 'data/newUser';\nimport { setAccountRoadmaps } from 'state/actions/user';\n\nimport { AuthSuccess } from 'types/actions';\nimport { RoadMeta, State } from 'types/state';\n\nfunction* fetchUserRoadmapsData(userID: string) {\n  const snapshot = (yield call(fetchAccountDetails, userID)) as firebase.database.DataSnapshot;\n  const value = (yield snapshot.val()) as {\n    roadmaps?: State['user']['roadmaps'];\n  } | null;\n  if (!value) {\n    const user = (yield select((state: State) => state.user)) as State['user'];\n    yield call(createAccount, user);\n  }\n  if (value?.roadmaps) {\n    const roadmapIDs = Object.keys(value.roadmaps);\n    if (roadmapIDs) {\n      const roadMeta = {} as State['roadMeta'];\n      for (const roadmapID of roadmapIDs) {\n        const snapshot = (yield call(fetchRoadmapMeta, roadmapID)) as firebase.database.DataSnapshot;\n        roadMeta[roadmapID] = snapshot.val() as RoadMeta;\n      }\n      yield put(setAccountRoadmaps(value.roadmaps, roadMeta));\n    } else {\n      yield put(setAccountRoadmaps({}, {}));\n    }\n  } else {\n    yield put(setAccountRoadmaps({}, {}));\n  }\n}\n\nexport function* watchAuth(): Generator<TakeEffect | ForkEffect<void>, void, AuthSuccess> {\n  while (true) {\n    const action = yield take('AUTH_SUCCESS');\n    if (typeof action.payload?.id === 'string') {\n      yield fork(fetchUserRoadmapsData, action.payload.id);\n    }\n  }\n}\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel } from 'redux-saga';\n\nexport const getDataConnectionStatus = (): EventChannel<boolean> =>\n  eventChannel((emiter) => {\n    const listener = firebase.database().ref('.info/connected');\n    listener.on('value', (snapshot) => {\n      emiter(snapshot.val() as boolean);\n    });\n    return () => {\n      listener.off();\n    };\n  });\n\n// export const getBrowserConnectionStatus = (): EventChannel<boolean> =>\n//   eventChannel((emiter) => {\n//     const updateStatus = (e: Event) => emiter(e.type === 'online');\n//     window.addEventListener('online', updateStatus);\n//     window.addEventListener('offline', updateStatus);\n//     return () => {\n//       window.removeEventListener('online', updateStatus);\n//       window.removeEventListener('offline', updateStatus);\n//     };\n//   });\n","import { put, select, take, actionChannel, delay, race, ActionPattern, ActionChannelEffect } from 'redux-saga/effects';\nimport { RaceEffect, TakeEffect, ChannelTakeEffect, PutEffect, SelectEffect, CallEffect } from 'redux-saga/effects';\n\nimport { getDataConnectionStatus } from 'data/connection';\n\nimport { Actions } from 'types/actions';\nimport { ConnectionStatus, State } from 'types/state';\n\ntype StatusChange = Generator<SelectEffect | PutEffect<Actions>, void, ConnectionStatus>;\ntype RaceEffects = RaceEffect<TakeEffect | ChannelTakeEffect<boolean>>;\ntype Effects = ActionChannelEffect | RaceEffects | PutEffect<Actions> | CallEffect<number>;\n\nexport function* setStatusChange(status: ConnectionStatus): StatusChange {\n  const currentStatus = yield select((state: State) => state.ui.connectionStatus);\n  if (status === 'syncing' && currentStatus !== 'on') {\n    return;\n  }\n  // TODO: refactore this to move UI logic out of store to React.Context\n  yield put({\n    type: 'CONNECTION_UPDATE',\n    payload: {\n      status: status,\n    },\n  });\n}\n\nexport function* watchConnectionStatusChange(): Generator<Effects, void, unknown> {\n  const connection = {\n    status: 'syncing',\n    online: true,\n    syncing: true,\n  };\n  const cardChanges = ['EDIT_CARD', 'MOVE_CARD', 'SELECTION_DELETE'];\n  const authChanges = ['AUTH_FETCH'];\n  const dataUpdates = ['ACCOUNT_ROADMAPS', 'ROADMAP_DATA_FETCH'];\n  const changesChannel = (yield actionChannel([...cardChanges, ...authChanges])) as ActionPattern<Actions>;\n  const updatesChannel = (yield actionChannel(dataUpdates)) as ActionPattern<Actions>;\n  const networkChannel = getDataConnectionStatus();\n  while (true) {\n    const [isChange, isUpdate, isOnline]: [Actions, Actions, boolean] = (yield race([\n      take(changesChannel),\n      take(updatesChannel),\n      take(networkChannel),\n    ])) as [Actions, Actions, boolean];\n    if (isChange || isUpdate) {\n      connection.syncing = isChange ? true : false;\n    } else if (isOnline !== undefined) {\n      connection.online = isOnline;\n    }\n    const newStatus = ConnectionStatus[connection.online ? (connection.syncing ? 'syncing' : 'on') : 'off'];\n    if (newStatus !== connection.status) {\n      connection.status = newStatus;\n      // TODO: replace this action with a two different sagas (network & syncing) and replace store with context\n      yield put({\n        type: 'CONNECTION_UPDATE',\n        payload: {\n          status: newStatus,\n        },\n      });\n      if (connection.syncing) {\n        yield delay(300);\n      }\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteCardData } from 'data/data';\n\nimport { setStatusChange } from './connection';\n\nimport { CardEditActions } from 'types/actions';\nimport { Card, ConnectionStatus, State } from 'types/state';\n\ntype Actions = CardEditActions | Card | State['user']['roadmaps'] | undefined;\n\nexport function* watchCardChange(): Generator<TakeEffect | SelectEffect | ForkEffect<unknown>, void, Actions | string> {\n  while (true) {\n    const action = (yield take(['EDIT_CARD', 'MOVE_CARD', 'SELECTION_DELETE'])) as CardEditActions;\n    const card = (yield select((state: State) => state.cards[action.payload.id])) as Card | undefined;\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(setStatusChange, ConnectionStatus['syncing']);\n      yield fork(updateRemoteCardData, currentRoadmapID, card || { id: action.payload.id });\n    }\n  }\n}\n","import { PersistentState } from 'types/state';\n\nexport const getKeyWithTrueValue = (arr: Array<[string, boolean]> = []): string | undefined =>\n  (arr.find((pair) => pair[1]) || [])[0];\n\nexport const hydrateWithIDs = (data: PersistentState): PersistentState => {\n  (Object.keys(data) as Array<keyof typeof data>).forEach((type) => {\n    const obj = data[type];\n    (Object.keys(obj) as Array<keyof typeof obj>).forEach((key) => {\n      const string = String(key);\n      obj[string].id = string;\n    });\n  });\n  return data;\n};\n","import {\n  put,\n  fork,\n  take,\n  call,\n  select,\n  race,\n  TakeEffect,\n  ForkEffect,\n  SelectEffect,\n  CallEffect,\n  PutEffect,\n} from 'redux-saga/effects';\n\nimport { getRoadmapContent, removeRemoteAccountRoadmap, addRemoteAccountRoadmap } from 'data/data';\nimport { removeAccountRoadmap, roadmapDataFetch, setAccountRoadmaps } from 'state/actions/user';\nimport { hydrateWithIDs } from 'utils/arrays';\n\nimport C from 'constants/index';\n\nimport { AddAccountRoadmap, SetAccountRoadmaps, SetCurrentRoadmap } from 'types/actions';\nimport { PersistentState, State } from 'types/state';\n\nfunction* fetchCurrentRoadmapData(currentRoadmapID: string) {\n  const channel = getRoadmapContent(currentRoadmapID);\n  let isCancelled = false;\n  try {\n    while (true) {\n      const { roadmapData } = (yield race({\n        roadmapData: take(channel),\n        cancel: take('REMOVE_CURRENT_ROADMAP'),\n      })) as { roadmapData: PersistentState };\n      if (roadmapData) {\n        const hydratedData = hydrateWithIDs({\n          cards: roadmapData.cards || {},\n          milestones: roadmapData.milestones || {},\n        });\n        yield put(roadmapDataFetch(hydratedData));\n      } else {\n        isCancelled = true;\n        channel.close();\n      }\n    }\n  } finally {\n    if (!isCancelled) {\n      // Error in data fetch: requested roadmap doesn't exist. Removing its ID from user account.\n      yield put(removeAccountRoadmap(currentRoadmapID));\n      const userID = (yield select((state: State) => state.user.id)) as string;\n      yield call(removeRemoteAccountRoadmap, userID, currentRoadmapID);\n    }\n  }\n}\n\nexport function* watchCurrentRoadmapChange(): Generator<TakeEffect | ForkEffect<void>, void, SetCurrentRoadmap> {\n  while (true) {\n    const { currentRoadmapID } = (yield take(['SET_CURRENT_ROADMAP'])).payload;\n    if (typeof currentRoadmapID === 'string' && currentRoadmapID.length === C.ID_LENGTH) {\n      yield fork(fetchCurrentRoadmapData, currentRoadmapID);\n    }\n  }\n}\n\nexport function* watchAddRoadmap(): Generator<\n  TakeEffect | SelectEffect | CallEffect<string> | PutEffect<SetAccountRoadmaps> | ForkEffect<void>,\n  void,\n  AddAccountRoadmap | string\n> {\n  while (true) {\n    const { roadmapName } = ((yield take(['ADD_ACCOUNT_ROADMAP'])) as AddAccountRoadmap).payload;\n    if (typeof roadmapName === 'string' && roadmapName.length) {\n      const userID = (yield select((state: State) => state.user.id)) as string;\n      const createdAt = Date.now();\n      const roadmapID = (yield call(addRemoteAccountRoadmap, userID, createdAt, roadmapName)) as string;\n      yield put(\n        setAccountRoadmaps(\n          {\n            [roadmapID]: true,\n          },\n          {\n            [roadmapID]: {\n              name: roadmapName,\n              createdAt,\n            },\n          }\n        )\n      );\n      // const movePage = (roadmapID: string) => history.push(`/roadmap/${roadmapID}/`);\n      // yield fork(movePage, roadmapID);\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchAuth } from './auth';\nimport { watchCardChange } from './card';\nimport { watchConnectionStatusChange } from './connection';\nimport { watchAddRoadmap, watchCurrentRoadmapChange } from './roadmap';\n\nexport default function* rootSaga(): Generator<unknown, void, unknown> {\n  yield all([\n    watchAuth(),\n    watchCardChange(),\n    watchConnectionStatusChange(),\n    watchAddRoadmap(),\n    watchCurrentRoadmapChange(),\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { enableAllPlugins } from 'immer';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './components/Routes/Routes';\nimport createStore from './state/store';\n\nenableAllPlugins();\nconst store = createStore();\nconst rootAppNode = document.body.firstElementChild;\n\nif (rootAppNode) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>,\n    rootAppNode\n  );\n}\n","import { createStore, applyMiddleware, Store, CombinedState } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport dataInit from 'data';\nimport { trackAuthChange } from 'data/auth';\nimport rootReducer from 'state/reducers';\nimport rootSaga from 'state/sagas';\nimport { authFetch, authOut, authSuccess } from 'state/actions/user';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\nimport { AuthSuccessProp } from 'types/actionsProps';\n// import { loadState, saveState } from './localStorage';\n\nexport default (): Store<CombinedState<State>, Actions> => {\n  // Global initialization of the Firebase\n  dataInit();\n\n  // const persistedState = loadState();\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = applyMiddleware(sagaMiddleware);\n  const composedMiddleware = composeWithDevTools({ trace: true, traceLimit: 25 })(middleware);\n\n  const store = createStore(rootReducer, composedMiddleware);\n  sagaMiddleware.run(rootSaga);\n\n  // Starting authorization and provinging two callbacks for succesful & failed fetching auth data\n  trackAuthChange({\n    fetching: () => store.dispatch(authFetch()),\n    success: (userData: AuthSuccessProp) => store.dispatch(authSuccess(userData)),\n    out: () => store.dispatch(authOut()),\n  });\n\n  // const store = createStore(rootReducer, persistedState, composedMiddleware);\n  // store.subscribe(() => {\n  //   const { selection, ...stateRest } = store.getState();\n  //   saveState(stateRest);\n  // });\n\n  return store;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\nvar deferredModules = [\n\t[1709,633,660]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = () => {\n\n};\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = () => {\n\n\t\t}\n\t}\n\treturn result;\n}\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = () => {\n\n\t}\n\tchunkLoadingGlobal = chunkLoadingGlobal.slice();\n\tfor(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tparentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkroadmap\"] = self[\"webpackChunkroadmap\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = webpackJsonpCallback;","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}