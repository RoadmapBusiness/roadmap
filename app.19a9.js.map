{"version":3,"sources":["webpack://roadmap/webpack/runtime/chunk loaded","webpack://roadmap/./src/assets/SvgIcon.tsx","webpack://roadmap/./src/constants/colors.ts","webpack://roadmap/./src/styles/Header.ts","webpack://roadmap/./src/components/Header/Title.tsx","webpack://roadmap/./src/data/user.ts","webpack://roadmap/./src/data/auth.ts","webpack://roadmap/./src/styles/Keyframes.ts","webpack://roadmap/./src/styles/Common/Spinner.ts","webpack://roadmap/./src/components/Header/ConnectionStatus.tsx","webpack://roadmap/./src/data/connection.ts","webpack://roadmap/./src/styles/Common/Dropdown.ts","webpack://roadmap/./src/components/Header/Dropdown.tsx","webpack://roadmap/./src/components/Header/Avatar.tsx","webpack://roadmap/./src/components/Header/Header.tsx","webpack://roadmap/./src/constants/index.ts","webpack://roadmap/./src/utils/nanoid.ts","webpack://roadmap/./src/state/actions/selection.ts","webpack://roadmap/./src/utils/ui.ts","webpack://roadmap/./src/utils/dates.ts","webpack://roadmap/./src/utils/subscribtion.ts","webpack://roadmap/./src/utils/placeholderActions.ts","webpack://roadmap/./src/utils/cardActions.ts","webpack://roadmap/./src/state/actions/cards.ts","webpack://roadmap/./src/types/state.ts","webpack://roadmap/./src/styles/Placeholder.ts","webpack://roadmap/./src/components/Placeholder/Placeholder.tsx","webpack://roadmap/./src/components/Deck/Day.tsx","webpack://roadmap/./src/components/Deck/Month.tsx","webpack://roadmap/./src/styles/CardBlock.ts","webpack://roadmap/./src/assets/CardStatus.tsx","webpack://roadmap/./src/components/Deck/Card.tsx","webpack://roadmap/./src/components/Deck/CardsDeck.tsx","webpack://roadmap/./src/styles/DateTable.ts","webpack://roadmap/./src/components/Deck/MonthsList.tsx","webpack://roadmap/./src/state/actions/ui.ts","webpack://roadmap/./src/components/Deck/Deck.tsx","webpack://roadmap/./src/components/Roadmap/Roadmap.tsx","webpack://roadmap/./src/styles/EditScreen.ts","webpack://roadmap/./src/styles/Form/Button.ts","webpack://roadmap/./src/components/EditScreen/Range.tsx","webpack://roadmap/./src/styles/Form/Switch.ts","webpack://roadmap/./src/components/EditScreen/Switch.tsx","webpack://roadmap/./src/components/EditScreen/DateInput.tsx","webpack://roadmap/./src/components/EditScreen/EditFields.tsx","webpack://roadmap/./src/components/EditScreen/EditTitle.tsx","webpack://roadmap/./src/components/EditScreen/EditScreen.tsx","webpack://roadmap/./src/state/actions/user.ts","webpack://roadmap/./src/components/Screens/Roadmap.tsx","webpack://roadmap/./src/styles/Main.ts","webpack://roadmap/./src/styles/Landing.ts","webpack://roadmap/./src/components/Overview/Landing.tsx","webpack://roadmap/./src/styles/Overview.ts","webpack://roadmap/./src/components/Overview/Overview.tsx","webpack://roadmap/./src/components/Overview/SingleLineInput.tsx","webpack://roadmap/./src/components/Screens/Overview.tsx","webpack://roadmap/./src/components/Core/Routes.tsx","webpack://roadmap/./src/components/Core/Core.tsx","webpack://roadmap/./src/data/index.ts","webpack://roadmap/./src/state/initialState.ts","webpack://roadmap/./src/state/reducers/ui.ts","webpack://roadmap/./src/state/reducers/index.ts","webpack://roadmap/./src/state/reducers/cards.ts","webpack://roadmap/./src/state/reducers/milestones.ts","webpack://roadmap/./src/state/reducers/selection.ts","webpack://roadmap/./src/state/reducers/metas.ts","webpack://roadmap/./src/state/reducers/user.ts","webpack://roadmap/./src/data/data.ts","webpack://roadmap/./src/data/newUser.ts","webpack://roadmap/./src/state/sagas/auth.ts","webpack://roadmap/./src/state/sagas/card.ts","webpack://roadmap/./src/utils/arrays.ts","webpack://roadmap/./src/state/sagas/roadmap.ts","webpack://roadmap/./src/utils/recurrent.ts","webpack://roadmap/./src/state/sagas/user.ts","webpack://roadmap/./src/utils/analytics.ts","webpack://roadmap/./src/state/sagas/analytics.ts","webpack://roadmap/./src/state/sagas/index.ts","webpack://roadmap/./src/styles/Global.ts","webpack://roadmap/./src/index.tsx","webpack://roadmap/./src/state/store.ts","webpack://roadmap/webpack/bootstrap","webpack://roadmap/webpack/runtime/compat get default export","webpack://roadmap/webpack/runtime/define property getters","webpack://roadmap/webpack/runtime/global","webpack://roadmap/webpack/runtime/harmony module decorator","webpack://roadmap/webpack/runtime/hasOwnProperty shorthand","webpack://roadmap/webpack/runtime/make namespace object","webpack://roadmap/webpack/runtime/jsonp chunk loading","webpack://roadmap/webpack/startup"],"names":["deferred","SvgIcon","props","viewBox","children","weekendColor","statusColorMap","pending","progress","delayed","complete","dropped","header","black","white","acid","soft","statusColors","purple","violet","indigo","blue","azur","green","yellow","orange","fire","pink","HeaderBlock","Logo","RoadmapTitle","AvatarBlock","RoadmapList","title","currentRoadmapID","state","ui","metas","roadmapName","useMemo","name","useEffect","document","writeUserLastActive","userID","ref","update","lastActive","Date","now","handleAuth","provider","useDeviceLanguage","signInWithRedirect","shake","rotate","move","SpinnerMixin","size","Math","ceil","Spinner","ConnectionStatus","user","useState","isConnected","setConnected","callback","connectionChannel","status","listener","on","snapshot","val","off","close","id","className","Cancel","DropdownGroup","DropdownWraper","Dropdown","onClick","alert","signOut","Avatar","body","removeAttribute","UserPhoto","photoURL","src","alt","fetchig","Header","to","Title","ID","LENGTH","SYMBOLS","DAY","WIDTH","HEADER","HEIGHT","MILE_HEIGHT","CARD","VERTICAL_SPACE","HORIZONTAL_SPACE","RESIZE_TOLERANCE","CARDDECK_MOUSE_POSITION_FIX","MILE","MARGIN","LOCALE","navigator","language","COLUMN_MULTIPLIER","PLAN","FREE","LIMIT","ROADMAPS","TIME","DAYS_IN_MONTH","LAST_ACTIVE","MILLISECONDS_IN_DAY","nanoid","selectionDelete","type","payload","getExtraMonths","window","innerWidth","getPlaceholderWidth","x1","x2","max","round","getCardStatus","from","until","today","undefined","localeCompare","fromToToday","getDaysDiff","getDaysInterval","autoscaleTextarea","textarea","setFocus","style","height","scrollHeight","Number","isInteger","selectionStart","value","length","selectionEnd","scrollToToday","list","smooth","scroll","left","offsetLeft","parentElement","behavior","callItBack","months","getTwoDigitDate","number","slice","getYMDFromTimestamp","timestamp","date","year","getUTCFullYear","month","getUTCMonth","day","getUTCDate","getYMDWFromTimestamp","firstDay","setUTCHours","setUTCDate","firstWeekDay","getUTCDay","getTodayTimestamp","UTC","getFullYear","getMonth","getDate","getDataString","toISOString","date1","date2","getTime","getDateFromDiff","diff","getExpandedDate","offsetMonths","isFuture","getNewDates","dates","direction","dateDiff","map","getMonthList","swap","split","fromYear","fromMonth","untilYear","untilMonth","yearMonth1","yearMonth2","min","extraMonth","skipOneMonthForFuture","yearsDiff","monthsDiff","Array","fill","_","index","getExtendedMonthList","i","offset","newMonths","prototype","apply","getFromUntil","cards","Object","values","reduce","card","getUIOffset","todayString","extraMonths","fromOffset","untilOffset","placeholderInitState","started","y1","line","done","placeholder","notify","fn","x","parseInt","m","d","setMonths","passID","set","newID","get","removePlaceholder","e","target","relatedTarget","getAttribute","mXFix","mYFix","getCoords","coord","el","nativeEvent","button","offsetTop","HTMLButtonElement","cardDeck","getMousePositionFromCardDeck","mX","mY","offsetX","offsetY","ElementType","PlaceholderBlock","solid","PlaceholderContent","Placeholder","aim","setAim","memoizedCards","isAimHoversCard","shortList","filter","some","Boolean","isAimOnCard","selectionType","selection","none","dispatch","isNew","newCard","shouldSkipAim","opacity","transform","width","String","getPlaceholderData","weekDay","tip","isToday","Month","monthName","toLocaleDateString","getMonthName","days","dateObject","weekday","getDateForTooltip","key","CardWaraper","CardBlockText","CardStatusSVG","xmlns","CardBlockProgress","CardBlock","cardCases","CardStatus","RoadmapCard","todayTimestamp","typeS","progS","color1","color2","background","getProgressBackgroud","handleMouseDown","classList","contains","altKey","ctrlKey","metaKey","shiftKey","onDoubleClick","onMouseEnter","onTouchStart","onMouseDown","text","CardsDeck","cardsObject","cardsPosition","lineSize","useRef","dayOffset","dayDiff","top","current","Card","wrapperStyle","maxSize","DeckBlock","DeckInner","MonthsBlock","fDay","dayWidth","daysWidth","relativePart","Today","TodayScroll","scrollPosition","todayRef","cardsYear","cardsMonth","todayStyle","MonthBlock","monthStyle","setUIOffset","setTodayTimestamp","Deck","listRef","ready","position","setScrollPosition","hasMonths","lastOffset","updateMonths","useLayoutEffect","scrollLeft","moveCard","cardDetails","resize","limit","pressX","extraSize","dateTable","removeDateTable","remove","clearDesk","immidiate","wasResized","cursor","pointerEvents","zIndex","setTimeout","pressInZone","currentTarget","add","clientWidth","clientX","HTMLDivElement","moveInZone","y","clientY","diffX","extra","extraX","curTarget","rect","getBoundingClientRect","childRect","floor","scrollTop","item","HTMLElement","offsetWidth","trunc","movePlaceholder","releaseInZone","Error","lineDiff","enterZone","leaveZone","HTMLHtmlElement","HTMLSpanElement","renderPastOrFuture","firstMonth","newDate","extraLeftOffset","d1","d2","setDate","lastMonth","Months","tabIndex","blur","onScroll","deck","scrollCurrent","todayElement","todayLeft","showScrollButton","daysVisible","daysTotal","scrollWidth","onMouseOut","onMouseLeave","onMouseMove","onMouseUp","Roadmap","cancelAction","toLocaleLowerCase","preventDefault","addEventListener","removeEventListener","EditForm","EditExtra","Fieldset","FormLabel","LabelWarp","attrs","as","join","FormInput","FormInputWrap","RangeInput","EditExtraFields","EditExtraActions","EditEntry","rows","hoverColor","action","Button","Range","disabled","change","save","setVal","handleChange","newVal","isNaN","htmlFor","onChange","onKeyDown","SwitchBlock","Switch","toggle","defaultChecked","DateInput","inputRef","HTMLInputElement","focus","select","toLowerCase","required","pattern","EditFields","setSelection","cardDispatch","isProgressOn","isFinite","setFrom","setUntil","Save","cancel","EditTitle","enforceExtraFields","autoFocus","DefaultState","EditScreen","selectedElement","isExtraFieldsEnforced","newSelection","setNewSelection","isInvalid","setInvalid","isCardValid","edited","original","editedKeys","keys","originalKeys","hasCardChanged","delete","hasExtraFields","setAccountRoadmaps","roadmaps","meta","roadmapDataFetch","roadmapData","RoadmapScreen","history","location","routeID","params","roadmapsSet","userRoadmapIDs","includes","setCurrentRoadmap","push","pathname","MainBlock","LandingIntro","LandingRuller","LandingTitle","LandingButton","LandingList","SignedOff","RoadmapListTitle","RoadmapListBubble","RoadmapListItem","RoadmapListItemDetail","RoadmapListAdd","Overview","showInput","userRoadmapsSet","userRoadmaps","Landing","roadmapsIDs","sort","a","b","createdAt","toLocaleString","getLocalString","SingleLineInput","isShowingInput","setRoadmapName","OverviewScreen","addAccountRoadmap","Routes","path","timeout","Core","manageTimer","hidden","clearTimeout","newTimestamp","getMilisecondsUntilTomorrow","email","milestones","initialState","nextState","forEach","milestone","roadmapID","getRoadmapContent","emiter","fetchAccountDetails","once","fetchRoadmapMeta","updateRemoteCardData","content","addRemoteAccountRoadmap","time","createAccount","fetchUserRoadmapsData","watchAuth","roadmapIDs","f","watchCardChange","hydrateWithIDs","data","obj","string","fetchCurrentRoadmapData","watchCurrentRoadmapChange","watchAddRoadmap","channel","isCancelled","hydratedData","equalCards","equalMiles","setRecurrentEvent","eventActive","recurrentEvent","func","sendLastActive","stopSending","actionLogin","savedAnalyticsState","analytics","analyticsState","sendAnalytics","logEvent","method","uuid","app_version","rootSaga","GlobalStyle","saveAnalyticsState","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fetching","success","out","sagaMiddleware","middleware","composedMiddleware","trace","traceLimit","store","run","userData","authSuccess","onAuthStateChanged","uid","displayName","rootAppNode","firstElementChild","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","O","result","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","definition","o","defineProperty","enumerable","g","globalThis","this","Function","hmd","create","prop","hasOwnProperty","r","Symbol","toStringTag","installedChunks","143","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"mappings":"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","file":"app.xxxx.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","import React from 'react';\n\nconst SvgIcon = (props: { children?: JSX.Element; className?: string }): JSX.Element => {\n  return (\n    <svg viewBox=\"0 0 24 24\" {...props}>\n      {props?.children}\n    </svg>\n  );\n};\n\nexport default React.memo(SvgIcon);\n","import { CardTypes } from 'types/card';\nimport { MileColors } from 'types/state';\n\nexport const weekendColor = 'rgba(106,148,184,0.06)';\n\nexport const headerColors = {\n  black: '#191919',\n  white: '#f7f8f9',\n  acid: '#84ff00',\n  soft: '#4fadff',\n};\n\nexport const statusColorMap = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\nexport const mainColors: { [key in MileColors]: string } = {\n  purple: '#8c0756',\n  violet: '#8933f4',\n  indigo: '#374193',\n  blue: '#1c93ff',\n  azur: '#01e3b3',\n  green: '#0b890c',\n  yellow: '#e7e400',\n  orange: '#ffa900',\n  fire: '#ff5700',\n  pink: '#ff55b8',\n};\n\n// export const W3CSS = {\n//   red: '#f44336',\n//   pink: '#e91e63',\n//   purple: '#9c27b0',\n//   deeppurple: '#673ab7',\n//   indigo: '#3f51b5',\n//   blue: '#2196F3',\n//   green: '#4CAF50',\n//   amber: '#ffc107',\n//   orange: '#ff9800',\n//   bluegray: '#607d8b',\n// };\n\nconst statusColors: { [key in CardTypes]: string } = {\n  pending: '#cccccc',\n  progress: '#60aeff',\n  delayed: '#ff9360',\n  complete: '#0bad00',\n  dropped: '#ff5656',\n};\n\nexport default {\n  header: headerColors,\n  statusColors: statusColors,\n  ...mainColors,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const HeaderBlock = styled.header`\n  display: flex;\n  min-height: 45px;\n  background: ${color.header.black};\n  color: #ccc;\n  font-size: 1.2rem;\n  line-height: 1rem;\n  justify-content: left;\n  align-items: center;\n  user-select: none;\n`;\n\nexport const Logo = styled(Link)`\n  display: flex;\n  width: 28px;\n  height: 27px;\n  min-width: 28px;\n  border: 1px solid #696969;\n  margin: 0 0 0 12px;\n  border-radius: 4px;\n  position: relative;\n  sup,\n  sub {\n    display: inline-block;\n    position: absolute;\n    left: 5px;\n    height: 3px;\n    font-size: 0;\n    transition: width 0.2s;\n  }\n  sup {\n    top: 5px;\n    width: 18px;\n    border-top: 2px solid #ec4af5;\n    border-bottom: 2px solid #84ff00;\n  }\n  sub {\n    top: 15px;\n    width: 10px;\n    border-top: 2px solid #edff00;\n    border-bottom: 2px solid #4aa4f5;\n  }\n  &:hover sub {\n    width: 18px;\n  }\n  & + button {\n    margin-left: auto;\n  }\n`;\n\nexport const RoadmapTitle = styled.h1`\n  margin: 1px auto 0;\n  font-size: 13px;\n  font-weight: normal;\n  padding: 0px 12px;\n  width: 100%;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  text-align: center;\n  user-select: all;\n`;\n\nexport const AvatarBlock = styled.button`\n  padding: 0;\n  width: 29px;\n  overflow: hidden;\n  margin: 0 12px 0 0;\n  box-sizing: border-box;\n  height: 29px;\n  min-width: 29px;\n  border-radius: 4px;\n  font-size: 13px;\n  color: #ddd;\n  transition: 0.2s;\n  position: relative;\n  z-index: 30;\n  cursor: pointer;\n  border: 1px solid #696969;\n  background: transparent;\n  &:hover {\n    color: #84ff00;\n    img {\n      transform: scale(1.2);\n    }\n  }\n  & img {\n    width: 100%;\n    height: 100%;\n    font-size: 0;\n    transition: 0.2s;\n    vertical-align: middle;\n  }\n  & svg {\n    fill: currentColor;\n    pointer-events: none;\n    &.online,\n    &.offline {\n      color: transparent;\n      position: absolute;\n      border-radius: 50%;\n      width: 10px;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n    }\n    &.online {\n      color: #84ff00; // green\n      background: #696969;\n    }\n    &.offline {\n      color: #ff3e84; // red\n      background: #fff;\n    }\n  }\n`;\n","import React, { useMemo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { RoadmapTitle } from 'styles/Header';\n\nimport { State } from 'types/state';\n\nconst RoadmapList = ({ title }: { title: string }): JSX.Element | null => {\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const metas = useSelector((state: State) => state.metas);\n  const roadmapName = useMemo(() => (metas[currentRoadmapID] || { name: title }).name, [metas, currentRoadmapID]);\n  useEffect(() => {\n    if (document.title !== roadmapName) {\n      document.title = roadmapName === title ? title : `${roadmapName} • ${title}`;\n    }\n  }, [roadmapName]);\n\n  return <RoadmapTitle>{roadmapName}</RoadmapTitle>;\n};\n\nexport default React.memo(RoadmapList);\n","import firebase from 'firebase/app';\n\nexport const writeUserLastActive = (userID: string): void =>\n  void firebase.database().ref(`users/${userID}`).update({\n    lastActive: Date.now(),\n  });\n","import firebase from 'firebase/app';\n\nimport { AuthFetch, AuthSuccess, AuthOut } from 'types/actions';\nimport { AuthSuccessProp } from 'types/actionsProps';\nimport { writeUserLastActive } from 'data/user';\n\nexport const handleAuth = (): void => {\n  if (typeof firebase.auth === 'function') {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().useDeviceLanguage();\n    void firebase.auth().signInWithRedirect(provider);\n  }\n};\n\nexport const handleAuthOut = (userID: string): void => {\n  writeUserLastActive(userID);\n  if (typeof firebase.auth === 'function') {\n    void firebase.auth().signOut();\n  }\n};\n\nexport const trackAuthChange = ({\n  fetching,\n  success,\n  out,\n}: {\n  fetching: () => AuthFetch;\n  success: (userData: AuthSuccessProp) => AuthSuccess;\n  out: () => AuthOut;\n}): void => {\n  fetching();\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user && user.email) {\n      success({\n        id: user.uid,\n        name: user.displayName || '',\n        email: user.email,\n        photoURL: user.photoURL || '',\n      });\n    } else {\n      out();\n    }\n  });\n};\n","import { keyframes } from 'styled-components';\n\nexport const shake = keyframes`\n  8%, 41% {\n    transform: translateX(-10px);\n  }\n  25%, 58% {\n    transform: translateX(10px);\n  }\n  75% {\n    transform: translateX(-5px);\n  }\n  92% {\n    transform: translateX(5px);\n  }\n  0%, 100% {\n    transform: translateX(0);\n  }\n`;\n\nexport const rotate = keyframes`\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const move = keyframes`\n  from { transform: translateX(-52%) }\n  to { transform: translateX(150%) }\n`;\n","import styled, { css } from 'styled-components';\n\nimport color from 'constants/colors';\nimport { rotate } from 'styles/Keyframes';\n\nexport const SpinnerMixin = css`\n  width: ${({ size = 50 }: { size?: number }) => `${size}px`};\n  height: ${({ size = 50 }: { size?: number }) => (size ? `${size}px` : '50px')};\n  margin: auto;\n  border: ${({ size = 50 }: { size?: number }) => `${Math.ceil(size / 10)}px solid transparent`};\n  border-top-color: ${({ size }: { size?: number }) => (size ? color.header.acid : '#ccc')};\n  border-radius: 50%;\n  animation: ${rotate} 1s linear infinite;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nexport const Spinner = styled.div`\n  ${SpinnerMixin}\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Check from '@material-ui/icons/CheckCircle';\nimport Cancel from '@material-ui/icons/Cancel';\n\nimport { State } from 'types/state';\nimport { getDataConnectionStatus } from 'data/connection';\n\nconst ConnectionStatus = (): JSX.Element | null => {\n  const user = useSelector((state: State) => state.user);\n  const [isConnected, setConnected] = useState(false);\n  useEffect(() => {\n    const notify = (status: boolean) => setConnected(status);\n    const connectionChannel = getDataConnectionStatus(notify);\n    return () => {\n      connectionChannel.close();\n    };\n  }, []);\n\n  return user.id ? isConnected ? <Check className=\"online\" /> : <Cancel className=\"offline\" /> : null;\n};\n\nexport default React.memo(ConnectionStatus);\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel } from 'redux-saga';\n\nexport const getDataConnectionStatus = (callback: (status: boolean) => void): EventChannel<boolean> =>\n  eventChannel(() => {\n    const listener = firebase.database().ref('.info/connected');\n    listener.on('value', (snapshot) => {\n      callback(snapshot.val());\n    });\n    return () => {\n      listener.off();\n    };\n  });\n","import styled from 'styled-components';\n\nexport const DropdownGroup = styled.ul`\n  position: absolute;\n  min-width: 150px;\n  max-width: 300px;\n  background: #f7f8f9;\n  font-size: 13px;\n  border-radius: 4px;\n  right: 12px;\n  box-shadow: 0 2px 6px -1px rgb(0 0 0 / 20%);\n  border: 1px solid #ccc;\n  color: #696969;\n  margin: 2px 0 0;\n  padding: 0;\n  opacity: 0;\n  transition: 0.2s;\n  transform: translateY(-20px);\n  pointer-events: none;\n  z-index: 20;\n  &:before {\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: 5px solid transparent;\n    margin: -5px;\n    z-index: -1;\n  }\n  li {\n    list-style: none;\n    padding: 7px 10px;\n    cursor: pointer;\n    & + li {\n      border-top: 1px solid #ccc;\n    }\n    &:first-child {\n      border-radius: 4px 4px 0 0;\n    }\n    &:last-child {\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n    &:hover {\n      background: #eee;\n      color: #4ba4f5;\n    }\n  }\n`;\n\nexport const DropdownWraper = styled.div`\n  &:hover ${DropdownGroup} {\n    opacity: 1;\n    pointer-events: all;\n    transform: translateY(0);\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { handleAuthOut } from 'data/auth';\n\nimport { DropdownGroup } from 'styles/Common/Dropdown';\n\nimport { State } from 'types/state';\n\nconst Dropdown = (): JSX.Element => {\n  const user = useSelector((state: State) => state.user);\n  const authOut = () => handleAuthOut(user.id);\n  const noProfileEditYet = () => alert('Profile editing will be available in the near future');\n\n  return (\n    <DropdownGroup>\n      <li onClick={noProfileEditYet}>{user.name}</li>\n      <li onClick={authOut}>Log out</li>\n    </DropdownGroup>\n  );\n};\n\nexport default React.memo(Dropdown);\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport UserIcon from '@material-ui/icons/AccountBox';\nimport EnterIcon from '@material-ui/icons/ExitToApp';\n\nimport { handleAuth } from 'data/auth';\n\nimport { Spinner } from 'styles/Common/Spinner';\nimport { AvatarBlock } from 'styles/Header';\n\nimport { State } from 'types/state';\nimport ConnectionStatus from 'components/Header/ConnectionStatus';\nimport Dropdown from 'components/Header/Dropdown';\nimport { DropdownWraper } from 'styles/Common/Dropdown';\n\nconst Avatar = (): JSX.Element => {\n  const user = useSelector((state: State) => state.user);\n  useEffect(() => {\n    if (user.id !== '') {\n      document.body.removeAttribute('class');\n    } else {\n      document.body.className = 'dark';\n    }\n  }, [user.id]);\n\n  const UserPhoto = () => {\n    // TODO: check if the image is renadable & replace image only when it's loaded\n    return user.photoURL ? <img src={user.photoURL} alt={user.name} /> : <UserIcon />;\n  };\n\n  if (user.fetchig) {\n    return (\n      <AvatarBlock>\n        <Spinner size={15} />\n      </AvatarBlock>\n    );\n  }\n  if (user.id !== '') {\n    return (\n      <DropdownWraper>\n        <AvatarBlock>\n          <UserPhoto />\n          <ConnectionStatus />\n        </AvatarBlock>\n        <Dropdown />\n      </DropdownWraper>\n    );\n  }\n  return (\n    <AvatarBlock onClick={handleAuth} title=\"Log in\">\n      <EnterIcon />\n    </AvatarBlock>\n  );\n};\n\nexport default React.memo(Avatar);\n","import React from 'react';\n\nimport app from 'constants/../../package.json';\n\nimport { HeaderBlock, Logo } from 'styles/Header';\n\nimport Title from './Title';\nimport Avatar from './Avatar';\n\nconst Header = (): JSX.Element => {\n  return (\n    <HeaderBlock>\n      <Logo to=\"/\" title={`Roadmap.Business v${app.version}`}>\n        <sup>Roadmap for Business</sup>\n        <sub>Delightful Project Planning Tool</sub>\n      </Logo>\n      <Title title={app.description} />\n      <Avatar />\n    </HeaderBlock>\n  );\n};\n\nexport default React.memo(Header);\n","export default {\n  ID: {\n    LENGTH: 20,\n    SYMBOLS: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ',\n  },\n  DAY: {\n    WIDTH: 30,\n    HEADER: {\n      HEIGHT: 85,\n      MILE_HEIGHT: 125,\n    },\n  },\n  CARD: {\n    HEIGHT: 30,\n    VERTICAL_SPACE: 35,\n    HORIZONTAL_SPACE: 15,\n    RESIZE_TOLERANCE: 7,\n    CARDDECK_MOUSE_POSITION_FIX: [1, 1],\n  },\n  MILE: {\n    MARGIN: 8,\n  },\n  LOCALE: navigator.language || 'en-US',\n  COLUMN_MULTIPLIER: 2, // should be even to make sure we can figure out 'today'\n  PLAN: {\n    FREE: {\n      LIMIT: {\n        ROADMAPS: 3,\n      },\n    },\n  },\n  TIME: {\n    DAYS_IN_MONTH: 30,\n    LAST_ACTIVE: 60000,\n    MILLISECONDS_IN_DAY: 86400000,\n  },\n};\n","import { customAlphabet } from 'nanoid';\n\nimport C from 'constants/index';\n\nconst nanoid = customAlphabet(C.ID.SYMBOLS, C.ID.LENGTH);\nexport default (): string => nanoid();\n","import nanoid from 'utils/nanoid';\n\nimport { NewCard, SelectionCancel, SelectionDelete, SelectCard } from 'types/actions';\nimport { NewCardProp } from 'types/actionsProps';\n\nexport const newCard = ({ line, from, until }: NewCardProp): NewCard => ({\n  type: 'NEW_CARD',\n  payload: {\n    id: nanoid(),\n    isNew: true,\n    line,\n    from,\n    until,\n  },\n});\n\nexport const selectCard = ({ id }: { id: string }): SelectCard => ({\n  type: 'SELECT_CARD',\n  payload: {\n    id,\n    isNew: false,\n  },\n});\n\nexport const selectionCancel = (): SelectionCancel => ({\n  type: 'SELECTION_CANCEL',\n});\n\nexport const selectionDelete = ({ id }: { id: string }): SelectionDelete => ({\n  type: 'SELECTION_DELETE',\n  payload: {\n    id,\n  },\n});\n","import { CSSProperties } from 'react';\n\nimport C from 'constants/index';\nimport { weekendColor as wC } from 'constants/colors';\n\nimport { placeholderInitState } from './subscribtion';\nimport { getDaysDiff, getDaysInterval } from './dates';\n\nimport { PlaceholderData } from 'types/index';\nimport { Card } from 'types/state';\nimport { CardTypes } from 'types/card';\n\nexport const getColumnSize = (): number => Math.ceil(window.innerWidth / C.DAY.WIDTH);\n\nexport const getExtraMonths = (): number => Math.ceil((getColumnSize() * C.COLUMN_MULTIPLIER) / C.TIME.DAYS_IN_MONTH);\n\nexport const getPlaceholderWidth = (x1: number, x2: number): number =>\n  Math.max(Math.round((x2 - x1) / C.DAY.WIDTH + 0.3), 1) || 1;\n\nexport const getPlaceholderData = (x1: number, x2: number, y1: number, shouldSkipAim: boolean): PlaceholderData => {\n  if (shouldSkipAim || (x1 === 0 && y1 === 0)) {\n    return {\n      style: { opacity: '0' },\n    };\n  }\n  if (x2 === 0) {\n    return {\n      style: { transform: `translate(${x1}px, ${y1}px)`, opacity: '1' },\n    };\n  }\n  const size = getPlaceholderWidth(x1, x2);\n  return {\n    style: {\n      transform: `translate(${x1}px, ${y1}px)`,\n      width: String((size - 1) * C.DAY.WIDTH) + 'px',\n    },\n    size,\n  };\n};\n\nexport const getProgressBackgroud = (\n  complete?: number,\n  color1: string = '#0bad00',\n  color2: string = '#ddd'\n): CSSProperties | undefined =>\n  typeof complete === 'number'\n    ? { background: `linear-gradient(to right, ${color1} ${complete}%, ${color2} ${complete}%)` }\n    : undefined;\n\nexport const isAimOnCard = (aim: typeof placeholderInitState, cards: Array<Card>): boolean => {\n  const shortList = cards.filter(\n    (card) =>\n      card.line === aim.line && card.from.localeCompare(aim.date) <= 0 && card.until.localeCompare(aim.date) >= 0\n  );\n  if (shortList.some((card) => card.from === aim.date || card.until === aim.date)) {\n    return true;\n  }\n  return Boolean(shortList.length);\n};\n\nexport const getCardStatus = (from: string, until: string, today: string, progress?: number): CardTypes | undefined => {\n  // No progress => No status\n  if (progress === undefined) {\n    return;\n  }\n  // 'pending':  card is in the future or starting today and progress is zero\n  // 'progress': card is in the future and progress > zero || progress >= proportion of today in the timeframe\n  // 'delayed':  progress < proportion of today in the timeframe\n  // 'complete': progress is 100\n  // 'dropped':  card is in the past and progress is zero\n  if (progress === 100) {\n    return 'complete';\n  }\n  // Today is after Until (Card is in the past)\n  if (today.localeCompare(until) > 0) {\n    return 'dropped';\n  }\n  if (progress === 0) {\n    // From is before Today (Card from past without progress)\n    if (today.localeCompare(from) > 0) {\n      return 'delayed';\n    }\n    // From is not yet reached or Today (Card is in the plan)\n    if (today.localeCompare(from) <= 0) {\n      return 'pending';\n    }\n  }\n  // If progress is between 0 and 100 it's either in progress or delayed\n  const fromToToday = getDaysDiff(from, today);\n  const todayToUntilPlusOne = getDaysInterval(today, until);\n  const proportion = fromToToday / (fromToToday + todayToUntilPlusOne);\n  if (progress / 100 < proportion) {\n    return 'delayed';\n  } else {\n    return 'progress';\n  }\n};\n\nexport const autoscaleTextarea = (textarea: HTMLTextAreaElement, setFocus: boolean = false): void => {\n  textarea.style.height = 'inherit';\n  textarea.style.height = `${textarea.scrollHeight}px`;\n  if (setFocus && Number.isInteger(textarea.selectionStart)) {\n    textarea.selectionStart = textarea.value.length;\n    textarea.selectionEnd = textarea.value.length;\n  }\n};\n\nexport const hasCardChanged = (edited: Card, original?: Card): boolean => {\n  if (!original) {\n    return true;\n  }\n  const editedKeys = Object.keys(edited) as [keyof Card];\n  const originalKeys = Object.keys(original) as [keyof Card];\n  if (editedKeys.length !== originalKeys.length) {\n    return true;\n  }\n  return (\n    editedKeys.some((key) => original[key] !== edited[key]) || originalKeys.some((key) => original[key] !== edited[key])\n  );\n};\n\nexport const isCardValid = (selection: Card): boolean =>\n  selection.id !== '' &&\n  selection.line >= 0 &&\n  selection.text !== '' &&\n  (selection.progress === undefined ||\n    (Number.isInteger(selection.progress) && selection.progress >= 0 && selection.progress <= 100)) &&\n  selection.from.length === 10 &&\n  selection.until.length === 10 &&\n  getDaysDiff(selection.from, selection.until) >= 0;\n\nexport const scrollToToday = (list: HTMLElement, today: HTMLElement, smooth?: boolean): void =>\n  list.scroll({\n    left: today.offsetLeft + (today.parentElement ? today.parentElement.offsetLeft : 0) - window.innerWidth / 2,\n    behavior: smooth ? 'smooth' : 'auto',\n  });\n\nexport const checkInView = (blockLeft: number, blockWidth: number, deckScroll: number, deckWidth: number): boolean =>\n  blockLeft > deckScroll - blockWidth && blockLeft < deckScroll + deckWidth;\n\nexport const getCardsDeckHeight = (maxSize: number): { height: string } => ({\n  height: `${C.DAY.HEADER.HEIGHT + (maxSize + 2) /* starts with 0 and we add 1 more */ * C.CARD.VERTICAL_SPACE}px`,\n});\n\nexport const getMonthBackgroud = (fDay: number, dayWidth: number): string => {\n  /* TODO: Allow customized weekends & make weekend generation a separagte UI function */\n  const daysWidth = (offset: number): number => (offset - fDay) * dayWidth;\n  const relativePart = fDay\n    ? `transparent ${daysWidth(6)}px, ${wC} ${daysWidth(6)}px, ${wC} ${daysWidth(8)}px, transparent ${daysWidth(8)}px`\n    : `${wC} ${dayWidth}px, transparent ${dayWidth}px, transparent ${6 * dayWidth}px, ${wC} ${6 * dayWidth}px`;\n  return `linear-gradient(90deg, #e8e9ea 1px, transparent 1px), linear-gradient(90deg, ${relativePart})`;\n};\n","import C from 'constants/index';\n\nimport { DateType, DateTypeWithWeek, FullDateType } from 'types';\nimport { MoveCard } from 'types/actions';\nimport { Cards } from 'types/state';\n\nimport { getExtraMonths } from 'utils/ui';\n\nexport const getTwoDigitDate = (number: number): string => `0${number}`.slice(-2);\n// export const getDataString = (date: DateType): string => `${date.year}-${date.month}-${date.day}`;\n\nexport const getYMDFromTimestamp = (timestamp: number | Date): DateType => {\n  const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n  return {\n    year: date.getUTCFullYear(),\n    month: date.getUTCMonth() + 1,\n    day: date.getUTCDate(),\n  };\n};\n\nexport const getYMDWFromTimestamp = (timestamp: number | Date): DateTypeWithWeek => {\n  const date = getYMDFromTimestamp(timestamp);\n  const firstDay = new Date(timestamp);\n  firstDay.setUTCHours(0);\n  firstDay.setUTCDate(1);\n  return {\n    ...date,\n    firstWeekDay: firstDay.getUTCDay(),\n  };\n};\n\nexport const getWeekNumber = (timestamp: number): number => {\n  const date = new Date(timestamp);\n  date.setUTCDate(date.getUTCDate() + 4 - (date.getUTCDay() || 7));\n  const yearStart = new Date(Date.UTC(date.getUTCFullYear(), 0, 1));\n  const dateDiff = date.getTime() - yearStart.getTime();\n  return Math.ceil((dateDiff / C.TIME.MILLISECONDS_IN_DAY + 1) / 7);\n};\nexport const getWeekdayFromTimestamp = (timestamp: number, long: boolean = true): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { weekday: long ? 'long' : 'narrow' });\n};\n\nexport const getMonthNameFromTimestamp = (timestamp: number): string => {\n  return new Date(timestamp).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\nexport const getMonthName = (date: DateType): string => {\n  return new Date(date.year, date.month - 1, date.day).toLocaleDateString(C.LOCALE, { month: 'long' });\n};\n\nexport const getDateForTooltip = (date: DateType): [string, string] => {\n  const dateObject = new Date(date.year, date.month - 1, date.day);\n  return [\n    dateObject.toLocaleDateString(C.LOCALE, { weekday: 'short' }),\n    dateObject.toLocaleDateString(C.LOCALE, { day: 'numeric', month: 'long', year: 'numeric' }),\n  ];\n};\n\n// For now we assume weekends are only Saturdays & Sundays\nexport const isWeekend = (timestamp: number): boolean => new Date(timestamp).getDay() % 6 === 0;\n\nexport const getTodayTimestamp = (): number => {\n  const today = new Date();\n  return Date.UTC(today.getFullYear(), today.getMonth(), today.getDate());\n};\n\nexport const getDataString = (timestamp?: number | Date): string => {\n  if (timestamp instanceof Date) {\n    return timestamp.toISOString().slice(0, 10);\n  }\n  return new Date(timestamp || getTodayTimestamp()).toISOString().slice(0, 10);\n};\n\nexport const getLocalString = (timestamp: number = getTodayTimestamp()): string => new Date(timestamp).toLocaleString();\n\nexport const getFullDateFromTimestamp = (timestamp: number, isToday: boolean = false): FullDateType => ({\n  date: getYMDFromTimestamp(timestamp),\n  dateString: getDataString(timestamp),\n  monthName: getMonthNameFromTimestamp(timestamp),\n  weekDayName: getWeekdayFromTimestamp(timestamp),\n  weekDayShort: getWeekdayFromTimestamp(timestamp, false),\n  weekNumber: getWeekNumber(timestamp),\n  isWeekend: isWeekend(timestamp),\n  isToday,\n});\n\nexport const getDatesArray = (columnSize: number, todayTimestamp: number): FullDateType[] =>\n  Array(columnSize)\n    .fill(todayTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (index - columnSize / 2) * C.TIME.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, todayTimestamp === timestamp);\n    });\n\nexport const extendDatesArray = (datesArray: FullDateType[], extraDays: number, backward?: boolean): FullDateType[] => {\n  const lastDay = datesArray[backward ? 0 : datesArray.length - 1];\n  const lastTimestamp = Date.UTC(lastDay.date.year, lastDay.date.month - 1, lastDay.date.day);\n  const extraArray = Array(extraDays)\n    .fill(lastTimestamp)\n    .map((dateString: number, index: number) => {\n      const timestamp = dateString + (backward ? index - extraDays : index + 1) * C.TIME.MILLISECONDS_IN_DAY;\n      return getFullDateFromTimestamp(timestamp, false);\n    });\n  return backward ? [...extraArray, ...datesArray] : [...datesArray, ...extraArray];\n};\n\nexport const getDaysDiff = (date1: string | Date, date2: string | Date): number => {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (date2.getTime() - date1.getTime()) / C.TIME.MILLISECONDS_IN_DAY;\n  }\n  return (new Date(date2).getTime() - new Date(date1).getTime()) / C.TIME.MILLISECONDS_IN_DAY;\n};\n\nexport const getDaysInterval = (date1: string, date2: string): number => getDaysDiff(date1, date2) + 1;\n\nexport const getDateFromDiff = (date: string, diff: number): string =>\n  getDataString(new Date(date).getTime() + diff * C.TIME.MILLISECONDS_IN_DAY);\n\nexport const getDaysInMonth = (year: number, month: number): number => new Date(year, month, 0).getDate();\n\nexport const getDaysDiffBetweenMonths = (date1: string, date2: string): number => {\n  const d1 = new Date(date1);\n  const d2 = new Date(date2);\n  d1.setDate(1);\n  d2.setDate(1);\n  return getDaysDiff(d1, d2);\n};\n\nexport const getExpandedDate = (year: number, month: number, offsetMonths: number): string => {\n  const isFuture = offsetMonths > 0;\n  const date = new Date(Date.UTC(year, month - (isFuture ? 0 : 1) + offsetMonths, isFuture ? 0 : 1));\n  return getDataString(date);\n};\n\nexport const getMilisecondsUntilTomorrow = (days: number = 1): number => {\n  const today = new Date();\n  const otherDay = new Date(today.getFullYear(), today.getMonth(), today.getDate() + days);\n  return otherDay.getTime() - today.getTime();\n};\n\nexport const getNewDates = ({ direction, dateDiff }: MoveCard['payload'], dates: string[]): string[] => {\n  switch (direction) {\n    case -1:\n      return [getDateFromDiff(dates[0], dateDiff), dates[1]];\n    case 1:\n      return [dates[0], getDateFromDiff(dates[1], dateDiff)];\n    default:\n      return dates.map((date) => getDateFromDiff(date, dateDiff));\n  }\n};\n\nexport const getMonthList = (from: string, until: string, date?: DateTypeWithWeek, swap = 1): DateTypeWithWeek[] => {\n  const [fromYear, fromMonth] = from.split('-');\n  const [untilYear, untilMonth] = until.split('-');\n  const { year, month } = until === '' && date ? date : { year: untilYear, month: untilMonth };\n  const yearMonth1 = [Number(fromYear), Number(fromMonth)];\n  const yearMonth2 = [Number(year), Number(month)];\n  const min = swap > 0 ? yearMonth1 : yearMonth2;\n  const max = swap < 0 ? yearMonth1 : yearMonth2;\n  const extraMonth = until === '' ? 0 : 1; // We need this extra month to add equal number of months before and after\n  const skipOneMonthForFuture = swap === -1 ? 1 : 0;\n\n  const yearsDiff = max[0] - min[0];\n  const monthsDiff = max[1] - min[1] + extraMonth + yearsDiff * 12;\n\n  // TODO: Ensure there is sufficient months offset around initially rendered months to avoid addition at scroll\n  return Array(monthsDiff)\n    .fill(0)\n    .map((_, index) => getYMDWFromTimestamp(new Date(min[0], min[1] + index + skipOneMonthForFuture)));\n};\n\nexport const getExtendedMonthList = (months: DateTypeWithWeek[], i: number, offset: string): DateTypeWithWeek[] => {\n  const swap = i === 0 ? 1 : -1;\n  const newMonths = getMonthList(offset, '', months[i], swap);\n  Array.prototype[i ? 'push' : 'unshift'].apply(months, newMonths);\n  return months;\n};\n\nexport const getFromUntil = (cards: Cards): { from: string; until: string } =>\n  Object.values(cards).reduce(\n    ({ from, until }, card) => {\n      if (from === '') {\n        return { from: card.from, until: card.until };\n      }\n      return {\n        from: from.localeCompare(card.from) < 0 ? from : card.from,\n        until: until.localeCompare(card.until) > 0 ? until : card.until,\n      };\n    },\n    { from: '', until: '' }\n  );\n\nexport const getUIOffset = (\n  from: string,\n  until: string,\n  todayString: string\n): { fromOffset: string; untilOffset: string } => {\n  const min = from ? (from.localeCompare(todayString) <= 0 ? from : todayString) : todayString;\n  const max = until ? (todayString.localeCompare(until) < 0 ? until : todayString) : todayString;\n\n  const extraMonths = getExtraMonths();\n  return {\n    fromOffset: getExpandedDate(Number(min.slice(0, 4)), Number(min.slice(5, 7)), -extraMonths),\n    untilOffset: getExpandedDate(Number(max.slice(0, 4)), Number(max.slice(5, 7)), extraMonths),\n  };\n};\n","import { getTwoDigitDate } from './dates';\n\nimport { DateTypeWithWeek } from 'types';\n\nexport type SubscribtionStatus = {\n  started?: boolean;\n  x1?: number;\n  x2?: number;\n  y1?: number;\n  line?: number;\n  date?: string;\n  done?: boolean;\n};\nexport type Callback<T> = (status: T) => void;\nexport type SetNotification<T> = (fn: Callback<T>) => void;\nexport type Subscribtion<T> = (status: T) => {\n  notify: SetNotification<T>;\n  update: Callback<T>;\n  setMonths: Callback<DateTypeWithWeek[]>;\n};\n\nexport const subscribtion: Subscribtion<SubscribtionStatus> = (init) => {\n  let status = init;\n  let months: DateTypeWithWeek[] = [];\n  let callItBack: Callback<SubscribtionStatus> | undefined;\n  return {\n    notify: (fn) => {\n      callItBack = fn;\n    },\n    update: (update) => {\n      if (update.date) {\n        const [m, d] = update.date.split('-').map((x) => parseInt(x, 10));\n        update.date = m ? `${months[m].year}-${getTwoDigitDate(months[m].month)}-${getTwoDigitDate(d)}` : status.date;\n      } else {\n        update.date = status.date;\n      }\n      status = update;\n      callItBack && callItBack(status);\n    },\n    setMonths: (newMonths: DateTypeWithWeek[]) => {\n      months = newMonths;\n    },\n  };\n};\n\nexport const placeholderInitState = {\n  started: false,\n  x1: 0,\n  x2: 0,\n  y1: 0,\n  line: 0,\n  date: '',\n  done: false,\n};\nexport const placeholder = subscribtion(placeholderInitState);\n\nexport const passID = (() => {\n  let id = '';\n  return {\n    set: (newID: string) => (id = newID),\n    get: () => id,\n  };\n})();\n","import C from 'constants/index';\n\nimport { placeholder } from './subscribtion';\n\nexport const putPlaceholder = (): void => {\n  placeholder.update({\n    started: true,\n  });\n};\n\nexport const movePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  const curTarget = e.currentTarget as HTMLUListElement;\n  const target = e.target as HTMLLIElement;\n  if (target.parentElement === curTarget) {\n    const rect: ClientRect = curTarget.getBoundingClientRect();\n    const childRect: ClientRect = target.getBoundingClientRect();\n    const line = Math.floor((e.clientY - rect.top + curTarget.scrollTop - C.DAY.HEADER.HEIGHT) / C.CARD.VERTICAL_SPACE);\n    if (line >= 0) {\n      let month = -1;\n      Array.from(curTarget.children).some((item) => {\n        if (item instanceof HTMLElement && item.offsetWidth) {\n          month = month + 1;\n        }\n        return item === target;\n      });\n      placeholder.update({\n        x1: Math.trunc((target.offsetLeft + e.clientX - childRect.left) / C.DAY.WIDTH) * C.DAY.WIDTH,\n        x2: e.clientX - rect.left + curTarget.scrollLeft,\n        y1: C.DAY.HEADER.HEIGHT + line * C.CARD.VERTICAL_SPACE,\n        date: `${month}-${Math.max(Math.floor((e.clientX - childRect.left) / C.DAY.WIDTH), 0) + 1}`,\n        line,\n      });\n    }\n  }\n};\n\nexport const removePlaceholder = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n  if (e.type === 'mouseup') {\n    placeholder.update({\n      started: false,\n      done: true,\n    });\n  } else {\n    const target = e.relatedTarget as HTMLElement;\n    // TODO: check if we still need `data-form` attribute\n    if (!target || !target.getAttribute || target.getAttribute('data-form') !== 'edit') {\n      placeholder.update({\n        started: false,\n      });\n    }\n  }\n};\n","import C from 'constants/index';\n\nimport { putPlaceholder, movePlaceholder, removePlaceholder } from './placeholderActions';\nimport { passID } from './subscribtion';\n\nimport { MoveCardProp } from 'types/actionsProps';\n\ntype EventHandler = (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n\ntype CardActions = {\n  pressInZone: EventHandler;\n  moveInZone: EventHandler;\n  releaseInZone: EventHandler;\n  enterZone: EventHandler;\n  leaveZone: EventHandler;\n};\n\nconst [mXFix, mYFix] = C.CARD.CARDDECK_MOUSE_POSITION_FIX;\n\nconst getMousePositionFromCardDeck = (button: HTMLButtonElement, target: HTMLElement): number[] => {\n  if (button === target) {\n    return [button.offsetLeft, button.offsetTop];\n  }\n  if (target instanceof HTMLButtonElement) {\n    return [target.offsetLeft, target.offsetTop];\n  }\n  const cardDeck = button.parentElement as HTMLLIElement;\n  return [target.offsetLeft - cardDeck.offsetLeft - mXFix, target.offsetTop - cardDeck.offsetTop - mYFix];\n};\n\nconst getCoords = (\n  e: React.MouseEvent<HTMLElement, MouseEvent>,\n  coord: number[],\n  el: HTMLButtonElement\n): [number, number] => {\n  const target = e.target as HTMLElement;\n  const nativeEvent = e.nativeEvent;\n  const [mX, mY] = getMousePositionFromCardDeck(el, target);\n  const x = mX + nativeEvent.offsetX - coord[0];\n  const y = mY + nativeEvent.offsetY - coord[1];\n  return [x, y];\n};\n\nexport default (moveCard: (moveCard: MoveCardProp) => void): CardActions => {\n  const card = {\n    coord: [0, 0],\n    width: 0,\n    el: null as HTMLButtonElement | null,\n  };\n  const resize = {\n    limit: 0,\n    pressX: 0,\n    direction: 0,\n    extraSize: 0,\n  };\n  let dateTable: HTMLUListElement | null = null;\n  let setAim = false;\n\n  const removeDateTable = () => {\n    if (dateTable) {\n      dateTable.classList.remove('drag');\n      dateTable = null;\n    }\n  };\n\n  const clearDesk = (immidiate: boolean, wasResized: boolean = false): void => {\n    if (!card.el || !dateTable) {\n      return;\n    }\n    if (wasResized) {\n      resize.limit = 0;\n      resize.pressX = 0;\n      resize.direction = 0;\n      resize.extraSize = 0;\n      dateTable.style.cursor = '';\n    }\n    card.el.style.pointerEvents = '';\n    card.el.style.transform = '';\n    card.el.style.opacity = '';\n    card.el.style.zIndex = '';\n    card.el = null;\n    if (immidiate) {\n      removeDateTable();\n    } else {\n      setTimeout(removeDateTable, 10);\n    }\n  };\n\n  const pressInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (card.el) {\n      return;\n    }\n    if (e.target instanceof HTMLButtonElement) {\n      dateTable = e.currentTarget as HTMLUListElement;\n      dateTable.classList.add('drag');\n      card.el = e.target;\n      const { clientWidth, offsetLeft, offsetTop } = card.el;\n      const { offsetX, offsetY, clientX } = e.nativeEvent;\n      if (offsetX < C.CARD.RESIZE_TOLERANCE || clientWidth - offsetX < C.CARD.RESIZE_TOLERANCE) {\n        dateTable.style.cursor = 'ew-resize';\n        resize.pressX = clientX;\n        resize.direction = offsetX < C.CARD.RESIZE_TOLERANCE ? -1 : 1;\n        card.width = parseInt(card.el.style.width, 10);\n        resize.limit = (card.width - C.CARD.HORIZONTAL_SPACE) / -C.DAY.WIDTH;\n        return;\n      }\n      card.coord = [offsetLeft + offsetX, offsetTop + offsetY];\n    } else if (e.target instanceof HTMLDivElement) {\n      setAim = true;\n      putPlaceholder();\n    }\n  };\n  const moveInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (!card.el) {\n      if (e.target instanceof HTMLDivElement) {\n        movePlaceholder(e);\n      }\n      return;\n    }\n    if (!card.el.style.transform) {\n      card.el.style.pointerEvents = 'none';\n      card.el.style.zIndex = '5';\n    }\n    if (resize.direction === 0) {\n      const [x, y] = getCoords(e, card.coord, card.el);\n      if (e.clientY < C.DAY.HEADER.MILE_HEIGHT) {\n        card.el.style.opacity = '0';\n      } else {\n        card.el.style.transform = `translate(${x}px, ${y}px)`;\n        if (card.el.style.opacity !== '') {\n          card.el.style.opacity = '';\n        }\n      }\n    } else {\n      const { clientX } = e.nativeEvent;\n      const diffX = clientX - resize.pressX;\n      const extra =\n        resize.direction < 0\n          ? Math.round((C.CARD.RESIZE_TOLERANCE - diffX) / C.DAY.WIDTH)\n          : Math.ceil((diffX - C.CARD.RESIZE_TOLERANCE) / C.DAY.WIDTH);\n      resize.extraSize = Math.max(extra, resize.limit);\n      const extraX = resize.extraSize * C.DAY.WIDTH;\n      card.el.style.width = `${card.width + extraX}px`;\n      if (resize.direction < 0) {\n        card.el.style.transform = `translateX(${-extraX}px)`;\n      }\n    }\n  };\n  const releaseInZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    const id = passID.get();\n    if (resize.direction !== 0) {\n      if (resize.extraSize) {\n        if (id) {\n          moveCard({\n            id,\n            direction: resize.direction,\n            lineDiff: 0,\n            dateDiff: resize.extraSize * resize.direction,\n          });\n        } else {\n          throw Error('Card ID is missing, card will not be resized.');\n        }\n      }\n      clearDesk(card.el === e.target, true);\n      return;\n    }\n    if (card.el) {\n      if (card.el.style.opacity === '0') {\n        return;\n      }\n      if (card.el !== e.target) {\n        const [x, y] = getCoords(e, card.coord, card.el);\n        if (id) {\n          const lineDiff = Math.round(y / C.CARD.VERTICAL_SPACE);\n          const dateDiff = Math.round(x / C.DAY.WIDTH);\n          if (lineDiff || dateDiff) {\n            moveCard({\n              id,\n              direction: 0,\n              lineDiff,\n              dateDiff,\n            });\n          }\n        } else {\n          throw Error('Card ID is missing, card will not be moved.');\n        }\n      }\n      clearDesk(card.el === e.target);\n    } else if (setAim) {\n      setAim = false;\n      removePlaceholder(e);\n    }\n  };\n  const leaveZone = (e: React.MouseEvent<HTMLElement, MouseEvent>): void => {\n    if (e.type === 'mouseout') {\n      if (\n        e.relatedTarget instanceof HTMLButtonElement ||\n        e.relatedTarget instanceof HTMLHtmlElement ||\n        e.relatedTarget instanceof HTMLSpanElement ||\n        e.relatedTarget === null\n      ) {\n        removePlaceholder(e);\n        setAim = false;\n      }\n      return;\n    }\n    if (card.el && !(e.target instanceof HTMLButtonElement) && resize.direction === 0) {\n      card.el.style.opacity = '0';\n    }\n  };\n  const enterZone = (): void => {\n    if (setAim) {\n      setAim = false;\n    }\n    if (card.el && card.el.style.opacity !== '') {\n      card.el.style.opacity = '';\n    }\n  };\n\n  return {\n    pressInZone,\n    moveInZone,\n    releaseInZone,\n    enterZone,\n    leaveZone,\n  };\n};\n","import { EditCard, MoveCard } from 'types/actions';\nimport { MoveCardProp } from 'types/actionsProps';\nimport { EditSelection } from 'types/state';\n\nexport const editCard = (props: EditSelection): EditCard => ({\n  type: 'EDIT_CARD',\n  payload: {\n    ...props,\n  },\n});\n\nexport const moveCard = (props: MoveCardProp): MoveCard => ({\n  type: 'MOVE_CARD',\n  payload: {\n    ...props,\n  },\n});\n","export type Card = {\n  id: string;\n  line: number;\n  text: string;\n  from: string;\n  until: string;\n  progress?: number;\n};\n\nexport type MileColors =\n  | 'purple'\n  | 'violet'\n  | 'indigo'\n  | 'blue'\n  | 'azur'\n  | 'green'\n  | 'yellow'\n  | 'orange'\n  | 'fire'\n  | 'pink';\n\nexport type Milestone = {\n  id: string;\n  text: string;\n  date: string;\n  from?: never;\n  until?: never;\n  progress?: never;\n  color: MileColors;\n};\n\nexport type Meta = {\n  createdAt: number;\n  from: string;\n  name: string;\n  until: string;\n};\n\nexport enum ElementType {\n  card = 'card',\n  milestone = 'milestone',\n  none = '',\n}\n\nexport type List<Type> = {\n  [key: string]: Type;\n};\n\nexport interface PersistentState {\n  cards: List<Card>;\n  milestones: List<Milestone>;\n}\n\nexport type Cards = PersistentState['cards'];\nexport type Milestones = PersistentState['milestones'];\n\nexport type SelectedElement = Card | Milestone | undefined;\n\nexport type EditSelection = Card;\n\nexport interface Selection extends EditSelection {\n  isNew: boolean;\n  type: ElementType;\n}\n\nexport interface State extends PersistentState {\n  selection: Selection;\n  user: {\n    id: string;\n    name: string;\n    email: string;\n    photoURL: string;\n    fetchig: boolean;\n    roadmaps: {\n      [key: string]: boolean;\n    };\n    roadmapsSet: boolean;\n  };\n  metas: List<Meta>;\n  ui: {\n    currentRoadmapID: string;\n    todayTimestamp: number;\n    cardsPosition: string;\n    fromOffset: string;\n    untilOffset: string;\n  };\n}\n","import styled from 'styled-components';\n\nexport const PlaceholderBlock = styled.span`\n  position: absolute;\n  display: block;\n  height: 26px;\n  line-height: 28px;\n  border: ${(props: { solid: boolean }) => (props.solid ? '1px dashed #999' : '1px dashed #ddd')};\n  border-radius: 5px;\n  padding: 0 13px 0 12px;\n  box-shadow: 0 2px 5px -2px rgba(0, 0, 0, 0.2);\n  margin: 1px 2px;\n  background: rgba(255, 255, 255, 0.5);\n  pointer-events: none;\n  left: 0;\n  top: 0;\n`;\n\nexport const PlaceholderContent = styled.span`\n  display: inline-block;\n  font-weight: lighter;\n  position: absolute;\n  text-align: right;\n  font-size: 12px;\n  color: #999;\n  right: 7px;\n  left: 7px;\n`;\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { newCard } from 'state/actions/selection';\nimport { placeholder, placeholderInitState } from 'utils/subscribtion';\nimport { isAimOnCard, getPlaceholderData, getPlaceholderWidth } from 'utils/ui';\nimport { getDateFromDiff } from 'utils/dates';\n\nimport { PlaceholderBlock, PlaceholderContent } from 'styles/Placeholder';\n\nimport { State, ElementType } from 'types/state';\n\nconst Placeholder = (): JSX.Element => {\n  const [aim, setAim] = useState(placeholderInitState);\n  const cards = useSelector((state: State) => state.cards);\n  const memoizedCards = useMemo(() => Object.values(cards), [cards]);\n  const isAimHoversCard = useMemo(() => isAimOnCard(aim, memoizedCards), [aim, memoizedCards]);\n  const selectionType = useSelector((state: State) => state.selection.type);\n  useEffect(() => {\n    if (selectionType === ElementType.none) {\n      setAim(placeholderInitState);\n    }\n  }, [selectionType]);\n  const dispatch = useDispatch();\n\n  placeholder.notify(({ started, x1, x2, y1, line, date = '', done = false }) => {\n    if (started !== undefined && !isAimHoversCard) {\n      if (started && started !== aim.started) {\n        setAim({\n          ...aim,\n          started,\n          date: date,\n          x2: aim.x1,\n        });\n      } else if (aim.started && done) {\n        dispatch(\n          newCard({\n            line: aim.line,\n            from: aim.date,\n            until: getDateFromDiff(aim.date, getPlaceholderWidth(aim.x1, aim.x2) - 1),\n          })\n        );\n      } else {\n        setAim(placeholderInitState);\n      }\n    }\n    if (x1 !== undefined && y1 !== undefined && line !== undefined) {\n      if (aim.started === false) {\n        if (aim.x1 !== x1 || aim.y1 !== y1) {\n          setAim({\n            ...aim,\n            x1,\n            y1,\n            line,\n            date,\n          });\n        }\n      } else if (x2 !== undefined) {\n        setAim({\n          ...aim,\n          x2,\n        });\n      }\n    }\n  });\n\n  const shouldSkipAim = (aim.x1 === 0 && aim.y1 === 0) || isAimHoversCard;\n  const { style, size } = getPlaceholderData(aim.x1, aim.x2, aim.y1, shouldSkipAim);\n\n  return (\n    <PlaceholderBlock solid={aim.started} style={style}>\n      <PlaceholderContent>{size}</PlaceholderContent>\n    </PlaceholderBlock>\n  );\n};\n\nexport default React.memo(Placeholder);\n","import React from 'react';\n\nconst Day = ({\n  day,\n  weekDay,\n  tip,\n  isToday,\n}: {\n  day: number;\n  weekDay: string;\n  tip: string;\n  isToday: boolean;\n}): JSX.Element => {\n  const className = isToday ? 'today' : undefined;\n  return (\n    <span className={className} data-weekday={weekDay} title={tip}>\n      {day}\n    </span>\n  );\n};\n\nexport default Day;\n","import React from 'react';\n\nimport { getDateForTooltip, getMonthName } from 'utils/dates';\nimport Day from 'components/Deck/Day';\n\nimport { DateType } from 'types';\n\nconst Month = ({ date, today }: { date: DateType; today: DateType }): JSX.Element => {\n  const monthName = `${getMonthName(date)} ${date.year}`;\n  const days = Array(date.day)\n    .fill(date)\n    .map(({ year, month }: { year: number; month: number }, i: number) => {\n      const day = i + 1;\n      const isToday = today.year === year && today.month === month && today.day === day;\n      const [weekDay, tip] = getDateForTooltip({ year, month, day });\n      return <Day key={day} day={day} weekDay={weekDay} tip={tip} isToday={isToday} />;\n    });\n\n  return (\n    <React.Fragment>\n      <div className=\"monthname\">{monthName}</div>\n      <div className=\"days\">{days}</div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Month);\n","import styled from 'styled-components';\n\nimport { CardTypes } from 'types/card';\nimport { statusColorMap } from 'constants/colors';\n\nexport const CardWaraper = styled.section`\n  display: inline-block;\n  position: relative;\n  z-index: 2;\n`;\n\nexport const CardBlockText = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const CardStatusSVG = styled.svg.attrs({\n  xmlns: 'http://www.w3.org/2000/svg',\n  viewBox: '0 0 300 300',\n})`\n  background: ${({ type }: { type: CardTypes }) => statusColorMap[type]};\n  border-radius: 50%;\n  padding: 2px;\n  fill: #fff;\n`;\n\nexport const CardBlockProgress = styled.mark`\n  position: absolute;\n  display: block;\n  left: 4px;\n  right: 4px;\n  bottom: 3px;\n  height: 2px;\n  background: transparent;\n  overflow: hidden;\n  opacity: 0.4;\n  border-radius: 0 0 2px 2px;\n  transition: 0.1s;\n`;\n\nexport const CardBlock = styled.button`\n  border: none;\n  text-align: left;\n  box-sizing: content-box;\n  font-size: 12px;\n  position: absolute;\n  background: #fff;\n  border-radius: 4px;\n  margin: 0 2px;\n  line-height: 28px;\n  padding: 0 5px 0 5px;\n  border: 1px solid #ccc;\n  transition: box-shadow 0.1s, opacity 0.1s;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0 2px 3px -1px rgba(0, 0, 0, 0.3);\n  }\n  &:hover ${CardBlockProgress} {\n    opacity: 1;\n  }\n  & ${CardStatusSVG} {\n    position: absolute;\n    width: 0;\n    top: 3px;\n    right: 3px;\n    transform: translate(50%, -50%);\n    z-index: 2;\n    transition: 0.1s;\n  }\n  &:hover ${CardStatusSVG} {\n    width: 8px;\n    opacity: 1;\n  }\n  &.resized {\n    line-height: 28px;\n    border: 1px dashed #e2e2e2;\n    padding: 0 4px 0 6px;\n    cursor: ew-resize;\n  }\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    width: 5px;\n    bottom: 0;\n    opacity: 0;\n    cursor: ew-resize;\n  }\n  &:before {\n    left: 0;\n  }\n  &:after {\n    right: 0;\n  }\n  &:focus {\n    outline: none;\n  }\n  & * {\n    pointer-events: none;\n  }\n`;\n","import React from 'react';\n\nimport { CardStatusSVG } from 'styles/CardBlock';\n\nimport { CardTypes } from 'types/card';\n\n// Pending     — gray (empty circle)\n// In progress — blue (chart pie)\n// Delayed     - organge (exclamation)\n// Complete    - green (check)\n// Dropped     — red (cross)\n\nconst cardCases = (type: CardTypes): string => {\n  switch (type) {\n    case 'pending':\n      return 'M59 120a30 30 0 100 60 30 30 0 000-60zm93 0a30 30 0 100 60 30 30 0 000-60zm89 0a30 30 0 100 60 30 30 0 000-60z';\n    case 'progress':\n      return 'M150 150V15A135 135 0 1133.087 217.5L150 150';\n    case 'delayed':\n      return 'M150 21c-17 0-29 8-29 22v128c0 14 12 22 29 22 16 0 29-9 29-22V43c0-14-13-22-29-22zm0 201a29 29 0 100 58 29 29 0 000-58';\n    case 'complete':\n      return 'M119 260c-2 2-6 4-9 4s-7-2-10-4l-75-76c-8-8-8-20 0-28l9-10c8-7 21-7 29 0l47 48L237 66c8-8 21-8 29 0l9 10c8 8 8 20 0 28L119 260zm0 0';\n    case 'dropped':\n      return 'M185 150l66-66c8-7 8-19 0-27l-8-8c-8-8-20-8-27 0l-66 66-66-66c-7-8-19-8-27 0l-8 8c-8 8-8 20 0 27l66 66-66 66c-8 7-8 19 0 27l8 8c8 8 20 8 27 0l66-66 66 66c7 8 19 8 27 0l8-8c8-8 8-20 0-27l-66-66zm0 0';\n  }\n};\n\nconst CardStatus = ({ type, className }: { type?: CardTypes; className?: string }): JSX.Element | null =>\n  type ? (\n    <CardStatusSVG type={type} className={className}>\n      <path d={cardCases(type)} />\n    </CardStatusSVG>\n  ) : null;\n\nexport default React.memo(CardStatus);\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getProgressBackgroud, getCardStatus } from 'utils/ui';\nimport { selectCard, selectionDelete } from 'state/actions/selection';\nimport { removePlaceholder } from 'utils/placeholderActions';\nimport CardStatus from 'assets/CardStatus';\nimport { passID } from 'utils/subscribtion';\nimport { getDataString } from 'utils/dates';\n\nimport CLR from 'constants/colors';\n\nimport { CardBlock, CardBlockProgress, CardBlockText } from 'styles/CardBlock';\n\nimport { Card, State } from 'types/state';\n\ntype Props = {\n  card: Card;\n  style: {\n    width: string;\n    top: string;\n  };\n};\n\nconst RoadmapCard = ({ card, style }: Props): JSX.Element => {\n  const dispatch = useDispatch();\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const todayString = useMemo(() => getDataString(todayTimestamp), [todayTimestamp]);\n  const typeS = useMemo(() => getCardStatus(card.from, card.until, todayString, card.progress), [card, todayString]);\n  const progS = useMemo(() => getProgressBackgroud(card.progress, typeS ? CLR.statusColors[typeS] : ''), [card, typeS]);\n\n  const clickCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    if (\n      (e.target as HTMLButtonElement)?.parentElement?.parentElement?.classList.contains('drag') ||\n      e.altKey ||\n      e.ctrlKey ||\n      e.metaKey ||\n      e.shiftKey\n    ) {\n      return;\n    }\n    dispatch(\n      selectCard({\n        id: card.id,\n      })\n    );\n  };\n\n  const handleDoubleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (e.altKey) {\n      dispatch(\n        selectionDelete({\n          id: card.id,\n        })\n      );\n    }\n  };\n\n  const handleMouseDown = () => {\n    passID.set(card.id);\n  };\n\n  // TODO: Optimize rendering reducing new objects\n  return (\n    <CardBlock\n      style={style}\n      onClick={clickCard}\n      onDoubleClick={handleDoubleClick}\n      onMouseEnter={removePlaceholder}\n      onTouchStart={handleMouseDown}\n      onMouseDown={handleMouseDown}\n      title={card.text}\n    >\n      <CardStatus type={typeS} />\n      <CardBlockProgress style={progS} />\n      <CardBlockText>{card.text}</CardBlockText>\n    </CardBlock>\n  );\n};\n\nexport default React.memo(RoadmapCard);\n","import React, { useMemo, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Card from 'components/Deck/Card';\nimport { getDaysDiff, getDaysInterval } from 'utils/dates';\nimport { getCardsDeckHeight } from 'utils/ui';\n\nimport C from 'constants/index';\n\nimport { CardWaraper } from 'styles/CardBlock';\n\nimport { State } from 'types/state';\n\nconst CardsDeck = (): JSX.Element => {\n  const cardsObject = useSelector((state: State) => state.cards);\n  const { cardsPosition } = useSelector((state: State) => state.ui);\n  const lineSize = useRef(0);\n  const cards = useMemo(\n    () =>\n      Object.values(cardsObject).map((card) => {\n        const dayOffset = getDaysDiff(cardsPosition, card.from);\n        const dayDiff = getDaysInterval(card.from, card.until);\n        const style = {\n          left: `${dayOffset * C.DAY.WIDTH}px`,\n          width: `${dayDiff * C.DAY.WIDTH - C.CARD.HORIZONTAL_SPACE}px`,\n          top: `${C.DAY.HEADER.HEIGHT + card.line * C.CARD.VERTICAL_SPACE}px`,\n        };\n        lineSize.current = Math.max(lineSize.current, card.line);\n        return <Card key={card.id} card={card} style={style} />;\n      }),\n    [cardsObject, cardsPosition]\n  );\n  const wrapperStyle = useMemo(() => getCardsDeckHeight(lineSize.current), [lineSize.current]);\n\n  return <CardWaraper style={wrapperStyle}>{cards}</CardWaraper>;\n};\n\nexport default React.memo(CardsDeck);\n","import styled from 'styled-components';\n\nimport C from 'constants/index';\nimport { getMonthBackgroud } from 'utils/ui';\n\nexport const DeckBlock = styled.section`\n  font-size: 0;\n  width: 100vw;\n  height: 100%;\n  overflow: scroll;\n  white-space: nowrap;\n  position: relative;\n  user-select: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const DeckInner = styled.section`\n  display: flex;\n  min-height: calc(100vh - 45px);\n`;\n\nexport const MonthsBlock = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.2);\n  background-image: ${({ firstDay }: { firstDay: number }) => getMonthBackgroud(firstDay, C.DAY.WIDTH)};\n  background-size: ${C.DAY.WIDTH}px 100%, ${C.DAY.WIDTH * 7}px 100%;\n  .monthname {\n    display: block;\n    height: 54px;\n    font-size: 12px;\n    width: 100%;\n    padding: 8px 12px 3px;\n    position: sticky;\n    top: 0;\n    z-index: 8;\n    cursor: default;\n    background: #f7f8f9;\n    box-sizing: border-box;\n    color: #bbb;\n    box-shadow: rgba(0, 0, 0, 0.2) 2px 2px 2px, rgba(0, 0, 0, 0.06) 1px 0 0 inset;\n    pointer-events: all;\n  }\n  .days {\n    top: 25px;\n    position: sticky;\n    margin-top: -100%;\n    z-index: 9;\n    cursor: default;\n    user-select: none;\n    span {\n      width: 14px;\n      display: inline-block;\n      height: 14px;\n      font-size: 12px;\n      line-height: 14px;\n      padding: 8px 7px 7px 9px;\n      text-align: center;\n      color: #999;\n      position: relative;\n      z-index: 1;\n      &:before {\n        position: absolute;\n        width: 20px;\n        height: 20px;\n        left: 6px;\n        top: 5px;\n        border-radius: 50px;\n        z-index: -1;\n      }\n      &.today {\n        color: #fff;\n        &:hover {\n          color: #f00;\n          &:after {\n            background: #f00;\n          }\n        }\n        &:before {\n          content: '';\n          background: #f00;\n        }\n      }\n      &:hover {\n        transform: translateY(3px);\n        font-size: 10px;\n        padding-bottom: 4px;\n        &:before {\n          content: '';\n          background: transparent;\n          border: 1px solid currentColor;\n          left: 6px;\n          top: 2px;\n          border-radius: 3px;\n          width: 18px;\n          height: 18px;\n        }\n        &:after {\n          content: attr(data-weekday);\n          position: absolute;\n          width: 20px;\n          height: 8px;\n          background: #999;\n          font-size: 7px;\n          color: #fff;\n          line-height: 10px;\n          top: 2px;\n          border-radius: 3px 3px 0 0;\n          left: 6px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Today = styled.mark`\n  position: absolute;\n  top: 0;\n  width: 2px;\n  height: 100%;\n  background: linear-gradient(#f00, #8c0756);\n  pointer-events: none;\n`;\n\nexport const TodayScroll = styled.button`\n  border: none;\n  font-size: 12px;\n  position: absolute;\n  left: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition < 0 ? '0' : '100%')};\n  transform: ${({ scrollPosition }: { scrollPosition: number }) =>\n    scrollPosition === 0\n      ? 'translate(0)'\n      : scrollPosition < 0\n      ? 'translate(12px)'\n      : 'translate(-100%) translate(-12px)'};\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  margin: 3px auto;\n  line-height: 24px;\n  padding: 0 7px;\n  transition: box-shadow 0.1s, transform 0.1s, opacity 0.1s;\n  cursor: pointer;\n  z-index: 10;\n  color: #555;\n  user-select: none;\n  opacity: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? '0' : '1')};\n  pointer-events: ${({ scrollPosition }: { scrollPosition: number }) => (scrollPosition === 0 ? 'none' : undefined)};\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n  &:before {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition < 0 && `\"\\\\276E\"`};\n    color: #f00;\n    margin: 0 7px 0 3px;\n  }\n  &:after {\n    content: ${({ scrollPosition }: { scrollPosition: number }) => scrollPosition > 0 && `\"\\\\276F\"`};\n    color: #f00;\n    margin: 0 3px 0 7px;\n  }\n`;\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Month from 'components/Deck/Month';\nimport CardsDeck from 'components/Deck/CardsDeck';\nimport { getYMDFromTimestamp } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport { MonthsBlock, Today } from 'styles/DateTable';\n\nimport { DateTypeWithWeek } from 'types';\nimport { State } from 'types/state';\n\nconst MonthsList = ({\n  todayRef,\n  months,\n}: {\n  todayRef: React.RefObject<HTMLElement>;\n  months: DateTypeWithWeek[];\n}): JSX.Element => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const today = useMemo(() => getYMDFromTimestamp(todayTimestamp), [todayTimestamp]);\n  const cardsPosition = useSelector((state: State) => state.ui.cardsPosition);\n  const [cardsYear, cardsMonth] = useMemo(() => cardsPosition.split('-').map((val) => Number(val)), [cardsPosition]);\n  const todayStyle = useMemo(() => ({ left: `${today.day * C.DAY.WIDTH - C.DAY.WIDTH / 2}px` }), [today]);\n\n  const MonthBlock = useMemo(\n    () =>\n      function MonthMemo(\n        key: string,\n        monthStyle: {\n          width: string;\n        },\n        firstWeekDay: number,\n        isToday: boolean,\n        date: DateTypeWithWeek\n      ): JSX.Element {\n        return (\n          <MonthsBlock key={key} style={monthStyle} firstDay={firstWeekDay}>\n            {isToday && <Today ref={todayRef} style={todayStyle} />}\n            <Month date={date} today={today} />\n          </MonthsBlock>\n        );\n      },\n    [todayRef, todayStyle, today]\n  );\n\n  return (\n    <React.Fragment>\n      {months.map((date: DateTypeWithWeek) => {\n        const { year, month, day, firstWeekDay } = date;\n        const key = `${year}-${month}`;\n        const monthStyle = { width: `${day * C.DAY.WIDTH}px` };\n        const isToday = today.year === year && today.month === month;\n        if (cardsYear === year && cardsMonth === month) {\n          return (\n            <React.Fragment key={key}>\n              <CardsDeck />\n              {MonthBlock(key, monthStyle, firstWeekDay, isToday, date)}\n            </React.Fragment>\n          );\n        }\n        return MonthBlock(key, monthStyle, firstWeekDay, isToday, date);\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default MonthsList;\n","import { SetTodayTimestamp, SetUIOffset } from 'types/actions';\n\nexport const setUIOffset = (offset: SetUIOffset['payload']): SetUIOffset => ({\n  type: 'SET_UI_OFFSET',\n  payload: {\n    ...offset,\n  },\n});\n\nexport const setTodayTimestamp = (timestamp: number): SetTodayTimestamp => ({\n  type: 'SET_TODAY_TIMESTAMP',\n  payload: {\n    timestamp,\n  },\n});\n","import React, { useRef, useState, useLayoutEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getDaysDiffBetweenMonths, getExpandedDate, getMonthList, getExtendedMonthList } from 'utils/dates';\nimport { getExtraMonths, scrollToToday } from 'utils/ui';\nimport cardActions from 'utils/cardActions';\nimport { placeholder } from 'utils/subscribtion';\nimport { moveCard } from 'state/actions/cards';\nimport Placeholder from 'components/Placeholder/Placeholder';\nimport MonthsList from 'components/Deck/MonthsList';\nimport { setUIOffset } from 'state/actions/ui';\n\nimport C from 'constants/index';\n\nimport { DeckBlock, DeckInner, TodayScroll } from 'styles/DateTable';\n\nimport { MoveCardProp } from 'types/actionsProps';\nimport { State } from 'types/state';\nimport { DateTypeWithWeek } from 'types/index';\n\nconst Deck = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const listRef = useRef<HTMLElement>(null);\n  const todayRef = useRef<HTMLElement>(null);\n  const scroll = useRef({\n    days: 0,\n    left: 0,\n    fire: false,\n    ready: true,\n    position: 0,\n  });\n  const [scrollPosition, setScrollPosition] = useState(0);\n  const [months, setMonths] = useState([] as DateTypeWithWeek[]);\n  const hasMonths = useMemo(() => months.length > 0, [months.length]);\n  const fromOffset = useSelector((state: State) => state.ui.fromOffset);\n  const untilOffset = useSelector((state: State) => state.ui.untilOffset);\n  const lastOffset = useRef({ fromOffset, untilOffset });\n  const updateMonths = (newMonths: DateTypeWithWeek[]): void => {\n    setMonths(newMonths);\n    placeholder.setMonths(newMonths);\n  };\n  useLayoutEffect(() => {\n    // This effect makes the initial scroll to `today`\n    if (scroll.current.ready && listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current);\n      scroll.current.position = listRef.current.scrollLeft;\n      scroll.current.ready = false;\n    }\n  }, [hasMonths]);\n  useLayoutEffect(() => {\n    // This effect moves deck's scroll while user scrolls and when new months are added in front of existing dates\n    if (scroll.current.fire && listRef.current) {\n      listRef.current.scrollLeft = scroll.current.left;\n      scroll.current.fire = false;\n    }\n  }, [fromOffset, untilOffset]);\n  useMemo(() => {\n    // This function tracks offsets updates and adds new months before or after existing set\n    if (fromOffset && untilOffset) {\n      if (months.length === 0) {\n        // First time\n        updateMonths(getMonthList(fromOffset, untilOffset));\n      } else {\n        if (lastOffset.current.fromOffset !== fromOffset) {\n          updateMonths(getExtendedMonthList(months, 0, fromOffset));\n        } else if (lastOffset.current.untilOffset !== untilOffset) {\n          updateMonths(getExtendedMonthList(months, months.length - 1, untilOffset));\n        }\n      }\n    }\n    lastOffset.current = {\n      fromOffset,\n      untilOffset,\n    };\n  }, [months, fromOffset, untilOffset]);\n\n  const { pressInZone, moveInZone, releaseInZone, enterZone, leaveZone } = useMemo(() => {\n    const remoteDispatch = (cardDetails: MoveCardProp) => dispatch(moveCard(cardDetails));\n    return cardActions(remoteDispatch);\n  }, [dispatch]);\n\n  const showScrollButton = () => {\n    const list = listRef.current;\n    const scrollCurrent = scroll.current;\n    if (list && scrollCurrent) {\n      const todayElement = todayRef.current;\n      if (todayElement) {\n        const todayLeft = todayElement.getBoundingClientRect().left;\n        if (todayLeft < 0) {\n          setScrollPosition(-1);\n        } else if (todayLeft > list.offsetWidth) {\n          setScrollPosition(1);\n        } else {\n          setScrollPosition(0);\n        }\n      }\n      scrollCurrent.position = list.scrollLeft;\n    }\n  };\n\n  const renderPastOrFuture = (direction: number) => {\n    if (direction < 0 && listRef.current) {\n      const firstMonth = months[0];\n      const newDate = getExpandedDate(firstMonth.year, firstMonth.month, -getExtraMonths());\n      dispatch(\n        setUIOffset({\n          fromOffset: newDate,\n          untilOffset: untilOffset,\n        })\n      );\n      const extraLeftOffset = getDaysDiffBetweenMonths(newDate, fromOffset) * C.DAY.WIDTH;\n      scroll.current.left = listRef.current.scrollLeft + extraLeftOffset;\n      scroll.current.fire = true;\n    } else {\n      const lastMonth = months[months.length - 1];\n      const newDate = getExpandedDate(lastMonth.year, lastMonth.month, getExtraMonths());\n      dispatch(\n        setUIOffset({\n          fromOffset: fromOffset,\n          untilOffset: newDate,\n        })\n      );\n    }\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    if (listRef.current && todayRef.current) {\n      scrollToToday(listRef.current, todayRef.current, true);\n      e.currentTarget.blur();\n    }\n  };\n\n  const scollDeck = (e: React.UIEvent<HTMLElement>) => {\n    const deck = e.currentTarget as HTMLElement;\n    const days = Math.floor(deck.scrollLeft / C.DAY.WIDTH);\n    if (scroll.current.days !== days) {\n      scroll.current.days = days;\n      showScrollButton();\n      // TODO: If window width stays the same daysVisible & daysTotal can be cached\n      const daysVisible = Math.ceil(deck.offsetWidth / C.DAY.WIDTH);\n      const daysTotal = Math.ceil(deck.scrollWidth / C.DAY.WIDTH);\n      if (days <= daysVisible) {\n        renderPastOrFuture(-1);\n      } else if (days >= daysTotal - daysVisible * 2) {\n        renderPastOrFuture(1);\n      }\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const Months = useMemo(() => <MonthsList todayRef={todayRef} months={months} />, [months, months.length, todayRef]);\n\n  if (!months.length) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <TodayScroll scrollPosition={scrollPosition} tabIndex={scrollPosition ? undefined : -1} onClick={handleClick}>\n        Today\n      </TodayScroll>\n      <DeckBlock\n        ref={listRef}\n        onScroll={scollDeck}\n        onMouseEnter={enterZone}\n        onMouseOut={leaveZone}\n        onMouseLeave={leaveZone}\n      >\n        <DeckInner onMouseDown={pressInZone} onMouseMove={moveInZone} onMouseUp={releaseInZone}>\n          {Months}\n          <Placeholder />\n        </DeckInner>\n      </DeckBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Deck);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectionCancel } from 'state/actions/selection';\nimport { placeholder } from 'utils/subscribtion';\nimport Deck from 'components/Deck/Deck';\n\nimport { State } from 'types/state';\n\nconst Roadmap = (): JSX.Element | null => {\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const cancelAction = (e: KeyboardEvent): void => {\n      if (e.key.toLocaleLowerCase() === 'escape') {\n        e.preventDefault();\n        dispatch(selectionCancel());\n        placeholder.update({\n          started: false,\n        });\n      }\n    };\n    document.addEventListener('keydown', cancelAction);\n    return () => {\n      document.removeEventListener('keydown', cancelAction);\n    };\n  }, [dispatch]);\n\n  return currentRoadmapID ? <Deck /> : null;\n};\n\nexport default React.memo(Roadmap);\n","import styled from 'styled-components';\nimport { shake } from 'styles/Keyframes';\n\nexport const EditScreen = styled.section`\n  background: rgba(0, 0, 0, 0.2);\n  position: absolute;\n  overflow-y: scroll;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 100;\n`;\n\nexport const EditForm = styled.form`\n  background: #f7f8f9;\n  width: 600px;\n  max-width: 90%;\n  box-sizing: border-box;\n  margin: 15vh auto;\n  padding: 17px 20px 13px;\n  box-shadow: 0 0 0 0 #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n  transition: box-shadow 0.3s;\n  user-select: none;\n  &.invalid {\n    animation: ${shake} 0.3s linear;\n    box-shadow: 0 0 0 1px #d22121, 0 10px 10px -5px rgba(0, 0, 0, 0.5), inset 0 0 2px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const EditExtra = styled.div`\n  background: #e7e7ec;\n  margin: 12px -20px -13px;\n  padding: 19px;\n  font-size: 12px;\n  border-radius: 0 0 5px 5px;\n  box-shadow: inset 0 0 2px rgba(0, 0, 0, 0.3);\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Fieldset = styled.fieldset`\n  margin: 0;\n  padding: 0;\n  border: none;\n  display: inline-flex;\n  flex-wrap: wrap;\n  & > label,\n  & > span,\n  & > input {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 14px;\n  line-height: 27px;\n  background: #d9d9de;\n  border: 1px solid #999;\n  margin: 0 -5px 0 0;\n  padding: 0 13px 0 9px;\n  border-radius: 3px;\n  z-index: 3;\n`;\n\nexport const LabelWarp = styled(FormLabel).attrs({\n  as: 'span',\n})`\n  padding-left: ${({ join }: { join?: boolean }) => join && '13px'};\n  & + input[type='text'] {\n    width: 25px;\n    text-align: right;\n  }\n`;\n\nexport const FormInput = styled.input.attrs({\n  type: 'text',\n})`\n  background: #efeff3;\n  border: 1px solid #999;\n  border-radius: 3px;\n  margin: 0 5px 0 0;\n  padding: 0 7px 0 8px;\n  width: 75px;\n  font-size: 14px;\n  line-height: 27px;\n  z-index: 5;\n  &:focus {\n    background: #f7f8f9;\n  }\n  &::last-child {\n    margin-right: 0;\n  }\n  &:invalid,\n  &:invalid:focus {\n    border-color: #d22121;\n    outline-color: #d22121;\n  }\n`;\n\nexport const FormInputWrap = styled(FormInput).attrs({\n  as: 'span',\n})`\n  width: auto;\n  margin-right: -5px;\n`;\n\nexport const RangeInput = styled.input.attrs({\n  type: 'range',\n})`\n  height: 5px;\n  display: block;\n  margin: 11px 0 0;\n  appearance: none;\n  background: #2196f3;\n  border-radius: 4px;\n  box-shadow: inset 0 0px 1px 0px #333;\n  &::-webkit-slider-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &::-moz-range-thumb,\n  &::-ms-thumb {\n    appearance: none;\n    display: block;\n    width: 17px;\n    height: 17px;\n    background: #fff;\n    border-radius: 50%;\n    box-shadow: 0 1px 1px 0px rgba(0, 0, 0, 0.2), inset 0 0 1px #555;\n  }\n  &:disabled {\n    background: #999;\n  }\n  & + input[type='text'] {\n    width: 24px;\n    text-align: right;\n  }\n`;\n\nexport const EditExtraFields = styled.div`\n  flex: 1;\n  line-height: 0;\n  & hr {\n    background: transparent;\n    border: none;\n    margin: 0 auto;\n    padding-right: 5px;\n  }\n  & svg {\n    width: 15px;\n    height: 15px;\n    margin: 3px;\n    opacity: 0;\n    z-index: 1;\n    transform: translate(-40px, 0) scale(0.1);\n    transition: transform ease-in 0.1s, opacity ease-in 0.1s;\n    &.active {\n      opacity: 1;\n      transform: none;\n    }\n  }\n`;\n\nexport const EditExtraActions = styled.div`\n  flex: 0;\n`;\n\nexport const EditEntry = styled.textarea.attrs((props) => ({\n  placeholder: props.placeholder ? props.placeholder : 'Task name',\n  rows: 1,\n}))`\n  font: inherit;\n  width: 100%;\n  padding: 0;\n  border: none;\n  background: transparent;\n  resize: none;\n  &:focus {\n    outline: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst hoverColor = ({ action }: { action?: string }) => (action === 'danger' ? '#d22121' : '#5e88ad');\n\nexport const Button = styled.button.attrs({\n  type: 'button',\n})`\n  border: none;\n  width: 100%;\n  margin: 0;\n  padding: 6px 10px 5px;\n  font-size: 12px;\n  z-index: 1;\n  position: relative;\n  color: #777;\n  background: #f7f8f9;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px #999;\n  &:hover:not(:disabled),\n  &:focus:not(:disabled) {\n    z-index: 2;\n    cursor: pointer;\n    color: ${hoverColor};\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px ${hoverColor};\n  }\n  svg {\n    width: 23px;\n    display: none;\n    fill: currentColor;\n    margin: -3px -7px -5px;\n  }\n  & + & {\n    margin-top: -1px;\n  }\n  &:disabled {\n    color: #ccc;\n    background: #eee;\n  }\n  &:first-child {\n    border-radius: 3px 3px 0 0;\n  }\n  &:last-child {\n    border-radius: 0 0 3px 3px;\n  }\n  @media (max-width: 768px) {\n    span {\n      display: none;\n    }\n    svg {\n      display: inline-block;\n    }\n  }\n`;\n","import React, { useState, ChangeEvent } from 'react';\n\nimport { LabelWarp, RangeInput, FormInput } from 'styles/EditScreen';\n\ntype Props = {\n  id: string;\n  min: number;\n  max: number;\n  value: number;\n  disabled: boolean;\n  change?: (value: number) => void;\n  save: () => void;\n  title?: string;\n  join?: boolean;\n};\n\nconst Range = ({ id, min, max, value, disabled, change, save, title, join }: Props): JSX.Element => {\n  const [val, setVal] = useState(value);\n  const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    const newVal = Math.min(Math.max(parseInt(e.target.value, 10), min), max);\n    if (!Number.isNaN(newVal)) {\n      setVal(newVal);\n      if (change) {\n        change(newVal);\n      }\n    }\n  };\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <label htmlFor={id}>{title}</label> : null}\n      <LabelWarp join={join}>\n        <RangeInput id={id} min={min} max={max} disabled={disabled} value={val} onChange={handleChange} />\n      </LabelWarp>\n      <FormInput value={val} onChange={handleChange} onKeyDown={handleKeyDown} disabled={disabled} />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Range);\n","import styled from 'styled-components';\n\nexport const SwitchBlock = styled.label`\n  position: relative;\n  display: block;\n  width: 38px;\n  height: 21px;\n  margin: 3px 0;\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n    &:checked + span {\n      background-color: #2196f3;\n    }\n    &:focus + span {\n      box-shadow: 0 0 0 1px #efeff3, 0 0 0 3px #025fcc, 0 0 0 4px #fff;\n    }\n    &:checked + span:before {\n      transform: translateX(17px);\n    }\n  }\n  span {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: #999;\n    transition: 0.1s;\n    border-radius: 12px;\n    &:before {\n      position: absolute;\n      content: '';\n      height: 17px;\n      width: 17px;\n      left: 2px;\n      bottom: 2px;\n      background-color: white;\n      transition: 0.1s;\n      border-radius: 50%;\n    }\n  }\n`;\n","import React from 'react';\n\nimport { FormInputWrap, FormLabel } from 'styles/EditScreen';\nimport { SwitchBlock } from 'styles/Form/Switch';\n\ntype Props = { id: string; value: boolean; toggle: (value: boolean) => void; title?: string };\n\nconst Switch = ({ id, value, toggle, title }: Props): JSX.Element => {\n  const handleToggle = () => toggle(!value);\n  return (\n    <React.Fragment>\n      {typeof title === 'string' ? <FormLabel htmlFor={id}>{title}</FormLabel> : null}\n      <FormInputWrap>\n        <SwitchBlock>\n          <input type=\"checkbox\" id={id} defaultChecked={value} onChange={handleToggle} />\n          <span />\n        </SwitchBlock>\n      </FormInputWrap>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Switch);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { Fieldset, FormLabel, FormInput } from 'styles/EditScreen';\n\ntype DateInputProps = {\n  date?: string;\n  setDate: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  save: () => void;\n  title: string;\n  setFocus?: boolean;\n};\n\nconst DateInput = ({ date, setDate, save, title, setFocus }: DateInputProps): JSX.Element | null => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n  }, []);\n\n  const name = title.toLowerCase();\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      save();\n    }\n  };\n\n  return date === undefined ? null : (\n    <Fieldset>\n      <FormLabel htmlFor={name}>{title}</FormLabel>\n      <FormInput\n        id={name}\n        ref={setFocus ? inputRef : undefined}\n        value={date}\n        onChange={setDate}\n        onKeyDown={handleKeyDown}\n        required\n        pattern=\"([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))\"\n      />\n    </Fieldset>\n  );\n};\n\nexport default React.memo(DateInput);\n","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport Save from '@material-ui/icons/Save';\nimport Revert from '@material-ui/icons/NotInterested';\nimport Delete from '@material-ui/icons/DeleteForever';\n\nimport CardStatus from 'assets/CardStatus';\nimport { getCardStatus } from 'utils/ui';\nimport { getDataString } from 'utils/dates';\n\nimport { Button } from 'styles/Form/Button';\nimport { EditExtra, EditExtraActions, EditExtraFields, Fieldset } from 'styles/EditScreen';\n\nimport Range from './Range';\nimport Switch from './Switch';\nimport DateInput from './DateInput';\n\nimport { EditSelection, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\ntype EditFieldsProps = {\n  selection: EditSelection;\n  setSelection: React.Dispatch<React.SetStateAction<EditSelection>>;\n  cardDispatch: CardDispatch;\n  setFocus: boolean;\n};\n\nconst EditFields = ({ selection, setSelection, cardDispatch, setFocus }: EditFieldsProps): JSX.Element | null => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const todayString = useMemo(() => getDataString(todayTimestamp), [todayTimestamp]);\n\n  const progress = selection.progress || 0;\n  const isProgressOn = Number.isFinite(selection.progress);\n  const setProgress = (value: number) =>\n    setSelection({\n      ...selection,\n      progress: value,\n    });\n  const setProgressOn = (value: boolean) => {\n    if (value) {\n      selection.progress = progress;\n    } else {\n      delete selection.progress;\n    }\n    setSelection({ ...selection });\n  };\n  const setDate = (type: 'from' | 'until') => (e: React.ChangeEvent<HTMLInputElement>) =>\n    setSelection({\n      ...selection,\n      [type]: e.target.value,\n    });\n\n  const setFrom = setDate('from');\n  const setUntil = setDate('until');\n\n  const { from, until } = selection;\n\n  return (\n    <EditExtra>\n      <EditExtraFields>\n        <DateInput date={from} setDate={setFrom} save={cardDispatch.save} title=\"From\" setFocus={setFocus} />\n        <DateInput date={until} setDate={setUntil} save={cardDispatch.save} title=\"Until\" />\n\n        <Fieldset>\n          <Switch id=\"showProgress\" value={isProgressOn} toggle={setProgressOn} title=\"Completion\" />\n          <Range\n            id=\"progress\"\n            min={0}\n            max={100}\n            disabled={!isProgressOn}\n            value={progress}\n            change={setProgress}\n            save={cardDispatch.save}\n            join={true}\n          />\n          {from && until && typeof progress === 'number' && (\n            <CardStatus\n              type={getCardStatus(from, until, todayString, progress)}\n              className={isProgressOn ? 'active' : undefined}\n            />\n          )}\n        </Fieldset>\n      </EditExtraFields>\n      <EditExtraActions>\n        <Button onClick={cardDispatch.save} title=\"Save changes\" action={'primary'}>\n          <Save />\n          <span>Save</span>\n        </Button>\n        <Button onClick={cardDispatch.cancel} title=\"Revert changes\">\n          <Revert />\n          <span>Revert</span>\n        </Button>\n        <Button onClick={cardDispatch.delete} title=\"Delete card\" action={'danger'}>\n          <Delete />\n          <span>Delete</span>\n        </Button>\n      </EditExtraActions>\n    </EditExtra>\n  );\n};\n\nexport default React.memo(EditFields);\n","import React, { useRef, useLayoutEffect } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditEntry } from 'styles/EditScreen';\n\nimport { EditSelection } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst EditTitle = ({\n  selection,\n  setSelection,\n  cardDispatch,\n  enforceExtraFields,\n}: {\n  selection: EditSelection;\n  setSelection: React.Dispatch<React.SetStateAction<EditSelection>>;\n  cardDispatch: CardDispatch;\n  enforceExtraFields: React.Dispatch<React.SetStateAction<boolean>> | undefined;\n}): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, [selection.id]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    autoscaleTextarea(e.target as HTMLTextAreaElement);\n    setSelection({\n      ...selection,\n      text: e.target.value,\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      cardDispatch.save();\n    } else if (e.key.toLocaleLowerCase() === 'tab') {\n      if (enforceExtraFields) {\n        e.preventDefault();\n        enforceExtraFields(true);\n      }\n    }\n  };\n\n  return (\n    <EditEntry\n      ref={inputRef}\n      autoFocus={true}\n      onChange={handleChange}\n      onKeyDown={handleKeyDown}\n      value={selection.text}\n    />\n  );\n};\n\nexport default React.memo(EditTitle);\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // TODO: shallowEqual\n\nimport { editCard } from 'state/actions/cards';\nimport { selectionCancel, selectionDelete } from 'state/actions/selection';\nimport { hasCardChanged, isCardValid } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm } from 'styles/EditScreen';\n\nimport EditFields from './EditFields';\nimport EditTitle from './EditTitle';\n\nimport { EditSelection, State } from 'types/state';\nimport { CardDispatch } from 'types/actions';\n\nconst DefaultState = {\n  id: '',\n  text: '',\n  line: 0,\n  from: '',\n  until: '',\n} as EditSelection;\n\nconst EditScreen = (): JSX.Element | null => {\n  const dispatch = useDispatch();\n  const selection = useSelector((state: State) => state.selection);\n  const selectedElement = useSelector((state: State) => (selection.isNew ? undefined : state.cards[selection.id]));\n  const [isExtraFieldsEnforced, enforceExtraFields] = useState(selectedElement !== undefined);\n  const [newSelection, setNewSelection] = useState(DefaultState);\n  const [isInvalid, setInvalid] = useState(false);\n  useEffect(() => {\n    if (isInvalid) {\n      setTimeout(() => setInvalid(false), 500);\n    }\n  }, [isInvalid]);\n  useEffect(() => {\n    if (selection.id === '') {\n      enforceExtraFields(selectedElement !== undefined);\n    } else {\n      setNewSelection({\n        id: (selectedElement || selection).id,\n        text: (selectedElement || selection).text,\n        line: (selectedElement || selection).line,\n        from: (selectedElement || selection).from,\n        until: (selectedElement || selection).until,\n        progress: (selectedElement || selection).progress,\n      });\n    }\n    return () => {\n      setNewSelection(DefaultState);\n    };\n  }, [selection, selectedElement]);\n\n  if (selection.type === '' || newSelection.id === '') {\n    return null;\n  }\n\n  const cardDispatch: CardDispatch = {\n    save: () => {\n      if (isCardValid(newSelection)) {\n        return dispatch(hasCardChanged(newSelection, selectedElement) ? editCard(newSelection) : selectionCancel());\n      } else {\n        // TODO: Show user incorrect fields\n        setInvalid(true);\n        return;\n      }\n    },\n    cancel: () => dispatch(selectionCancel()),\n    delete: () => {\n      dispatch(\n        selectedElement\n          ? selectionDelete({\n              id: newSelection.id,\n            })\n          : selectionCancel()\n      );\n    },\n  };\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      cardDispatch.cancel();\n    }\n  };\n\n  const hasExtraFields = isExtraFieldsEnforced || Boolean(selectedElement);\n  return (\n    <Screen onClick={handleClick} data-form=\"edit\">\n      <EditForm className={isInvalid ? 'invalid' : undefined}>\n        <EditTitle\n          selection={newSelection}\n          setSelection={setNewSelection}\n          cardDispatch={cardDispatch}\n          enforceExtraFields={hasExtraFields ? undefined : enforceExtraFields}\n        />\n        {hasExtraFields ? (\n          <EditFields\n            selection={newSelection}\n            setSelection={setNewSelection}\n            cardDispatch={cardDispatch}\n            setFocus={isExtraFieldsEnforced}\n          />\n        ) : null}\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(EditScreen);\n","import {\n  AuthFetch,\n  AuthSuccess,\n  AuthOut,\n  SetAccountRoadmaps,\n  AddAccountRoadmap,\n  RemoveAccountRoadmap,\n  SetCurrentRoadmap,\n  RemoveCurrentRoadmap,\n  RoadmapDataFetch,\n} from 'types/actions';\nimport { AuthSuccessProp } from 'types/actionsProps';\nimport { PersistentState, State } from 'types/state';\n\nexport const authFetch = (): AuthFetch => ({\n  type: 'AUTH_FETCH',\n});\n\nexport const authSuccess = (userData: AuthSuccessProp): AuthSuccess => ({\n  type: 'AUTH_SUCCESS',\n  payload: {\n    ...userData,\n  },\n});\n\nexport const authOut = (): AuthOut => ({\n  type: 'AUTH_OUT',\n});\n\nexport const setAccountRoadmaps = (roadmaps: State['user']['roadmaps'], meta: State['metas']): SetAccountRoadmaps => ({\n  type: 'SET_ACCOUNT_ROADMAPS',\n  payload: {\n    roadmaps,\n    meta,\n  },\n});\n\nexport const addAccountRoadmap = (roadmapName: string): AddAccountRoadmap => ({\n  type: 'ADD_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapName,\n  },\n});\n\nexport const removeAccountRoadmap = (roadmapID: string): RemoveAccountRoadmap => ({\n  type: 'REMOVE_ACCOUNT_ROADMAP',\n  payload: {\n    roadmapID,\n  },\n});\n\nexport const setCurrentRoadmap = (currentRoadmapID: string): SetCurrentRoadmap => ({\n  type: 'SET_CURRENT_ROADMAP',\n  payload: {\n    currentRoadmapID,\n  },\n});\n\nexport const removeCurrentRoadmap = (): RemoveCurrentRoadmap => ({\n  type: 'REMOVE_CURRENT_ROADMAP',\n});\n\nexport const roadmapDataFetch = (roadmapData: PersistentState): RoadmapDataFetch => ({\n  type: 'ROADMAP_DATA_FETCH',\n  payload: {\n    ...roadmapData,\n  },\n});\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\nimport Roadmap from 'components/Roadmap/Roadmap';\nimport EditScreen from 'components/EditScreen/EditScreen';\nimport { setCurrentRoadmap, removeCurrentRoadmap } from 'state/actions/user';\n\nimport { RouteMatch } from 'types/routes';\nimport { State } from 'types/state';\n\nconst RoadmapScreen = (): JSX.Element => {\n  const history = useHistory();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { id: routeID } = (useRouteMatch('/roadmap/:id') as RouteMatch).params;\n  const roadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const currentRoadmapID = useSelector((state: State) => state.ui.currentRoadmapID);\n  const userRoadmapIDs = Object.keys(useSelector((state: State) => state.user.roadmaps));\n  useEffect(() => {\n    if (roadmapsSet) {\n      // TODO: Split two conditions if we want to create a roadmap for users without it\n      if (userRoadmapIDs.length && userRoadmapIDs.includes(routeID)) {\n        if (currentRoadmapID !== routeID) {\n          // We need to mark a roadmap as loaded to clean the state when navigating away\n          dispatch(setCurrentRoadmap(routeID));\n        }\n      } else {\n        // Account's roadmap list is loaded, but it's empty or doesn't contain the requested ID\n        history.push('/');\n      }\n    }\n    return () => {\n      // One of the roadmaps was loaded & rendered and we navigating away from this page\n      if (currentRoadmapID && location.pathname !== history.location.pathname) {\n        dispatch(removeCurrentRoadmap());\n      }\n    };\n  }, [history, location, dispatch, roadmapsSet, currentRoadmapID, routeID, userRoadmapIDs]);\n\n  return (\n    <React.Fragment>\n      <Roadmap />\n      <EditScreen />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(RoadmapScreen);\n","import styled from 'styled-components';\nimport { SpinnerMixin } from 'styles/Common/Spinner';\n\nexport const MainBlock = styled.main`\n  overflow: scroll;\n  position: relative;\n  height: calc(100vh - 45px);\n  &:empty:before {\n    content: '';\n    ${SpinnerMixin}\n  }\n`;\n","import styled from 'styled-components';\nimport { move } from 'styles/Keyframes';\n\nexport const LandingIntro = styled.section`\n  margin: 0;\n  overflow: hidden;\n  position: relative;\n  padding: 0 calc(50% - 240px);\n  span {\n    padding: 0 1em;\n    color: #ddd;\n  }\n`;\n\nexport const LandingRuller = styled.hr`\n  display: inline-block;\n  position: absolute;\n  overflow: visible;\n  font-size: 0;\n  height: 20px;\n  left: -50%;\n  width: 200%;\n  border: 10px solid #ec4af5;\n  border-bottom-color: #84ff00;\n  border-left: none;\n  border-right: none;\n  transform: rotate(-10deg);\n  margin-top: -50px;\n  opacity: 0.5;\n  z-index: -1;\n  &:after {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    font-size: 0;\n    height: 20px;\n    width: 50%;\n    border: 10px solid #edff00;\n    border-bottom-color: #4ba4f5;\n    border-left: none;\n    border-right: none;\n    top: 50px;\n    animation: ${move} linear 10s infinite;\n  }\n`;\n\nexport const LandingTitle = styled.h2`\n  font-size: 100px;\n  position: relative;\n  z-index: 2;\n  margin: 15vh auto 10vh;\n  white-space: nowrap;\n  color: #fff;\n  font-family: 'Franklin Gothic', 'Arial Bold';\n  line-height: 0.8em;\n  mark {\n    display: inline-block;\n    color: inherit;\n    background: #4ba4f5;\n    &:first-child {\n      background: #ec4af4;\n      margin-bottom: 6px;\n      z-index: 1;\n      position: relative;\n      margin-left: -18px;\n    }\n  }\n`;\n\nexport const LandingButton = styled.button.attrs({\n  type: 'button',\n})`\n  border: 2px solid #191919;\n  box-shadow: 0 3px 10px -3px;\n  border-radius: 4px;\n  background: #edff00;\n  padding: 6px 10px 5px 10px;\n  position: relative;\n  z-index: 3;\n  cursor: pointer;\n  font-size: 20px;\n  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  letter-spacing: 0.05em;\n  filter: contrast(0.9);\n  user-select: none;\n  &:hover,\n  &:active {\n    box-shadow: 0 3px 12px -2px;\n    filter: contrast(1);\n  }\n  &:active {\n    transform: translateY(1px);\n  }\n  & + span + & {\n    background: #84ff00;\n  }\n`;\n\nexport const LandingList = styled.ul`\n  padding: 0;\n  color: #ddd;\n  font-size: 20px;\n  margin: 10vh 1em;\n  font-weight: 100;\n  list-style: square;\n  line-height: 1.3em;\n  -webkit-font-smoothing: antialiased;\n`;\n","import React from 'react';\n\nimport { handleAuth } from 'data/auth';\n\nimport { MainBlock } from 'styles/Main';\nimport { LandingIntro, LandingButton, LandingRuller, LandingTitle, LandingList } from 'styles/Landing';\n\nconst SignedOff = (): JSX.Element => {\n  return (\n    <MainBlock>\n      <LandingIntro>\n        <LandingTitle>\n          <mark>Big plans</mark>\n          <br />\n          <mark>Small steps</mark>\n        </LandingTitle>\n        <LandingButton onClick={handleAuth}>Start a Free Trial</LandingButton>\n        <span>or</span>\n        <LandingButton onClick={handleAuth}>Log In</LandingButton>\n        <LandingRuller />\n        <LandingList>\n          <li>Free forever basic plan</li>\n          <li>No credit card needed</li>\n          <li>No password required</li>\n          <li>No ads, no activity trackers</li>\n          <li>We never share any of your data</li>\n        </LandingList>\n      </LandingIntro>\n    </MainBlock>\n  );\n};\n\nexport default React.memo(SignedOff);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport color from 'constants/colors';\n\nexport const RoadmapList = styled.section`\n  width: 300px;\n  margin: 20px auto;\n  font-size: 16px;\n`;\n\nexport const RoadmapListTitle = styled.span`\n  display: inline-block;\n  width: 100%;\n  padding: 0 10px;\n  box-sizing: border-box;\n`;\n\nexport const RoadmapListBubble = styled.span`\n  background: #aaa;\n  color: #fff;\n  padding: 0px 2px 0 3px;\n  border-radius: 4px;\n  font-weight: 100;\n  letter-spacing: 0.05em;\n  font-size: 13px;\n  float: right;\n  margin: 2px 0;\n  text-shadow: 1px 1px #999;\n`;\n\nexport const RoadmapListItem = styled(Link)`\n  display: inline-block;\n  width: 100%;\n  box-shadow: 0 2px 6px -1px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  margin: 10px auto 0;\n  padding: 8px 10px 6px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  text-decoration: none;\n  &:hover {\n    box-shadow: 0 3px 6px -1px rgba(0, 0, 0, 0.4), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  }\n`;\n\nexport const RoadmapListItemDetail = styled.small`\n  display: block;\n  font-size: 12px;\n  color: #ccc;\n  margin: 5px 0 2px;\n`;\n\nexport const RoadmapListAdd = styled.button.attrs({\n  type: 'button',\n})`\n  width: 100%;\n  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.1);\n  margin: 10px auto 0;\n  padding: 8px 10px;\n  border-radius: 4px;\n  appearance: none;\n  background: none;\n  border: none;\n  font-size: 14px;\n  color: #aaa;\n  cursor: pointer;\n  &:hover {\n    color: ${color.header.soft};\n    box-shadow: inset 0 0 0 1px ${color.header.soft};\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getLocalString } from 'utils/dates';\n\nimport C from 'constants/index';\n\nimport Landing from './Landing';\nimport {\n  RoadmapList,\n  RoadmapListTitle,\n  RoadmapListBubble,\n  RoadmapListItem,\n  RoadmapListAdd,\n  RoadmapListItemDetail,\n} from 'styles/Overview';\n\nimport { State } from 'types/state';\n\nconst limit = C.PLAN.FREE.LIMIT.ROADMAPS;\n\nconst Overview = ({ showInput }: { showInput: (value: boolean) => void }): JSX.Element | null => {\n  const userRoadmapsSet = useSelector((state: State) => state.user.roadmapsSet);\n  const userRoadmaps = useSelector((state: State) => state.user.roadmaps);\n  const metas = useSelector((state: State) => state.metas);\n  const user = useSelector((state: State) => state.user);\n  if (!user.fetchig && !user.id) {\n    return <Landing />;\n  }\n  if (!userRoadmapsSet) {\n    return null;\n  }\n  const roadmapsIDs = Object.keys(userRoadmaps);\n  const createRoadmap = () => showInput(true);\n  return (\n    <RoadmapList>\n      <RoadmapListTitle>\n        Available Roadmaps\n        <RoadmapListBubble title={`With free plan you can create up to ${limit} roadmaps`}>\n          {roadmapsIDs.length}/{limit}\n        </RoadmapListBubble>\n      </RoadmapListTitle>\n      {roadmapsIDs\n        .sort((a, b) => metas[a] && metas[b] && metas[a].createdAt - metas[b].createdAt)\n        .map(\n          (id, index) =>\n            index < limit && (\n              <RoadmapListItem key={id} to={`/roadmap/${id}/`}>\n                {metas[id].name}\n                <RoadmapListItemDetail>Creation date: {getLocalString(metas[id].createdAt)}</RoadmapListItemDetail>\n              </RoadmapListItem>\n            )\n        )}\n      {roadmapsIDs.length < limit && <RoadmapListAdd onClick={createRoadmap}>Create new roadmap</RoadmapListAdd>}\n    </RoadmapList>\n  );\n};\n\nexport default React.memo(Overview);\n","import React, { useLayoutEffect, useRef } from 'react';\n\nimport { autoscaleTextarea } from 'utils/ui';\n\nimport { EditScreen as Screen, EditForm, EditEntry } from 'styles/EditScreen';\n\nconst handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n  autoscaleTextarea(e.target as HTMLTextAreaElement);\n};\n\ntype Props = {\n  isShowingInput: boolean;\n  showInput: (value: boolean) => void;\n  roadmapName: string;\n  setRoadmapName: (value: string) => void;\n};\n\nconst SingleLineInput = ({ isShowingInput, showInput, roadmapName, setRoadmapName }: Props): JSX.Element | null => {\n  const inputRef = useRef<HTMLTextAreaElement>(null);\n  useLayoutEffect(() => {\n    if (inputRef !== null && inputRef.current !== null) {\n      autoscaleTextarea(inputRef.current, true);\n    }\n  }, []);\n\n  if (!isShowingInput) {\n    return null;\n  }\n\n  const handleClick = (e: React.MouseEvent) => {\n    if (e.target === e.currentTarget) {\n      showInput(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key.toLocaleLowerCase() === 'enter') {\n      e.preventDefault();\n      const { value } = e.currentTarget;\n      if (value !== '' && roadmapName !== value) {\n        setRoadmapName(value);\n      }\n      showInput(false);\n    } else if (e.key.toLocaleLowerCase() === 'escape') {\n      showInput(false);\n    }\n  };\n\n  return (\n    <Screen onClick={handleClick}>\n      <EditForm>\n        <EditEntry\n          ref={inputRef}\n          autoFocus={true}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Roadmap name\"\n        />\n      </EditForm>\n    </Screen>\n  );\n};\n\nexport default React.memo(SingleLineInput);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Overview from 'components/Overview/Overview';\nimport SingleLineInput from 'components/Overview/SingleLineInput';\nimport { addAccountRoadmap } from 'state/actions/user';\n\nconst OverviewScreen = (): JSX.Element => {\n  const [isShowingInput, showInput] = useState(false);\n  const [roadmapName, setRoadmapName] = useState('');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (roadmapName) {\n      dispatch(addAccountRoadmap(roadmapName));\n    }\n  }, [dispatch, roadmapName]);\n  return (\n    <React.Fragment>\n      <Overview showInput={showInput} />\n      <SingleLineInput\n        isShowingInput={isShowingInput}\n        showInput={showInput}\n        roadmapName={roadmapName}\n        setRoadmapName={setRoadmapName}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(OverviewScreen);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Roadmap from 'components/Screens/Roadmap';\nimport Overview from 'components/Screens/Overview';\n\nconst Routes = (): JSX.Element => (\n  <Switch>\n    <Route path=\"/roadmap/:id\">\n      <Roadmap />\n    </Route>\n    <Route path=\"/\">\n      <Overview />\n    </Route>\n  </Switch>\n);\n\nexport default React.memo(Routes);\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport Header from 'components/Header/Header';\nimport Routes from 'components/Core/Routes';\nimport { getMilisecondsUntilTomorrow, getTodayTimestamp } from 'utils/dates';\nimport { setTodayTimestamp } from 'state/actions/ui';\n\nimport { State } from 'types/state';\nimport { MainBlock } from 'styles/Main';\n\nlet timeout: number;\n\nconst Core = (): JSX.Element => {\n  const todayTimestamp = useSelector((state: State) => state.ui.todayTimestamp);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const manageTimer = () => {\n      if (document.hidden) {\n        window.clearTimeout(timeout);\n      } else {\n        const newTimestamp = getTodayTimestamp();\n        if (todayTimestamp !== newTimestamp) {\n          dispatch(setTodayTimestamp(newTimestamp));\n        } else {\n          timeout = window.setTimeout(() => {\n            dispatch(setTodayTimestamp(getTodayTimestamp()));\n          }, getMilisecondsUntilTomorrow());\n        }\n      }\n    };\n    manageTimer();\n    document.addEventListener('visibilitychange', manageTimer);\n    return () => {\n      document.removeEventListener('visibilitychange', manageTimer);\n    };\n  }, [dispatch, todayTimestamp]);\n\n  const fetchig = useSelector((state: State) => state.user.fetchig);\n  const userID = useSelector((state: State) => state.user.id);\n  const history = useHistory();\n  useEffect(() => {\n    if (!fetchig && userID === '') {\n      history.push('/'); // User isn't defined (logged out), but fetching has stopped\n    }\n  }, [history, fetchig, userID]);\n\n  return (\n    <React.Fragment>\n      <Header />\n      <MainBlock>{fetchig ? null : <Routes />}</MainBlock>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Core);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/analytics';\n\nexport default (saveAnalyticsState: (analyticsState: firebase.analytics.Analytics) => void): void => {\n  firebase.initializeApp({\n    apiKey: 'AIzaSyCEwZ2uDycrD2WnxZGF6LZGeXNJRf5Nxjo',\n    authDomain: 'auth.roadmap.business',\n    databaseURL: 'https://roadmap-business.firebaseio.com',\n    projectId: 'roadmap-business',\n    storageBucket: 'roadmap-business.appspot.com',\n    messagingSenderId: '191720794635',\n    appId: '1:191720794635:web:813af7fecc632a4f29f50e',\n    measurementId: 'G-KK1FJGXWFW',\n  });\n  if (process.env.NODE_ENV && process.env.NODE_ENV !== 'development' && saveAnalyticsState) {\n    saveAnalyticsState(firebase.analytics());\n  }\n};\n","import { getTodayTimestamp } from 'utils/dates';\n\nimport { ElementType, State } from 'types/state';\n\nexport default {\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    photoURL: '',\n    fetchig: false,\n    roadmaps: {},\n    roadmapsSet: false,\n  },\n  cards: {},\n  milestones: {},\n  selection: {\n    id: '',\n    isNew: false,\n    line: 0,\n    type: ElementType.none,\n    text: '',\n    from: '',\n    until: '',\n  },\n  metas: {},\n  ui: {\n    currentRoadmapID: '',\n    todayTimestamp: getTodayTimestamp(),\n    cardsPosition: '',\n    fromOffset: '',\n    untilOffset: '',\n  },\n} as State;\n","import produce from 'immer';\n\nimport initialState from 'state/initialState';\nimport { getDataString, getFromUntil, getUIOffset } from 'utils/dates';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['ui'];\n\nexport default (state: StatePart = initialState.ui, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: action.payload.currentRoadmapID,\n        };\n      });\n    case 'REMOVE_CURRENT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          currentRoadmapID: '',\n          cardsPosition: '',\n          fromOffset: '',\n          untilOffset: '',\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.ui;\n    case 'ROADMAP_DATA_FETCH':\n      // TODO: Ignore if the data fetch is actually data submit\n      if (state.cardsPosition !== '' && state.fromOffset !== '' && state.untilOffset !== '') {\n        return state;\n      }\n      return produce(state, (nextState: StatePart) => {\n        // TODO: store these values in DB and use them also in UI as default offset\n        let { from, until } = getFromUntil(action.payload.cards);\n        const todayString = getDataString(nextState.todayTimestamp);\n        const { fromOffset, untilOffset } = getUIOffset(from, until, todayString);\n        if (!from || !until) {\n          from = from || todayString;\n          until = until || todayString;\n        }\n        return {\n          ...nextState,\n          cardsPosition: `${from.slice(0, 7)}-01`,\n          fromOffset: fromOffset,\n          untilOffset: untilOffset,\n        };\n      });\n    case 'SET_UI_OFFSET':\n      return state.fromOffset === action.payload.fromOffset && state.untilOffset === action.payload.untilOffset\n        ? state\n        : produce(state, (nextState: StatePart) => {\n            return {\n              ...nextState,\n              ...action.payload,\n            };\n          });\n    case 'SET_TODAY_TIMESTAMP':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          todayTimestamp: action.payload.timestamp,\n        };\n      });\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport cards from './cards';\nimport milestones from './milestones';\nimport selection from './selection';\nimport metas from './metas';\nimport user from './user';\nimport ui from './ui';\n\nexport default combineReducers({\n  cards,\n  milestones,\n  selection,\n  metas,\n  user,\n  ui,\n});\n","import produce from 'immer';\n\nimport { getNewDates } from 'utils/dates';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['cards'];\n\nexport default (state = initialState.cards, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'EDIT_CARD':\n      return produce(state, (nextState: StatePart) => {\n        if (!Number.isInteger(action.payload.progress)) {\n          delete action.payload.progress;\n        }\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'MOVE_CARD':\n      return produce(state, (nextState: StatePart) => {\n        const card = nextState[action.payload.id];\n        const [from, until] = getNewDates(action.payload, [card.from, card.until]);\n        const line = Math.max(card.line + action.payload.lineDiff, 0);\n        nextState[action.payload.id] = {\n          ...nextState[action.payload.id],\n          line,\n          from,\n          until,\n        };\n        return nextState;\n      });\n    case 'SELECTION_DELETE':\n      if (state[action.payload.id] !== undefined) {\n        return produce(state, (nextState: StatePart) => {\n          delete nextState[action.payload.id];\n          return nextState;\n        });\n      }\n      return state;\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.cards,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.cards;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['milestones'];\n\nexport default (state = initialState.milestones, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'ADD_MILESTONE':\n      return produce(state, (nextState: StatePart) => {\n        nextState[action.payload.id] = { ...action.payload };\n        return nextState;\n      });\n    case 'DELETE_MILESTONE':\n      return produce(state, (nextState: StatePart) => {\n        Object.values(nextState).forEach((milestone) => {\n          if (milestone.date === action.payload.date) {\n            delete nextState[milestone.id];\n          }\n        });\n        return nextState;\n      });\n    case 'ROADMAP_DATA_FETCH':\n      return {\n        ...action.payload.milestones,\n      };\n    case 'REMOVE_CURRENT_ROADMAP':\n    case 'AUTH_OUT':\n      return initialState.milestones;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State, ElementType } from 'types/state';\n\ntype StatePart = State['selection'];\n\nexport default (state = initialState.selection, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'NEW_CARD':\n    case 'SELECT_CARD':\n      return produce(state, (nextState: StatePart) => ({\n        ...nextState,\n        ...action.payload,\n        type: ElementType.card,\n      }));\n    case 'SELECTION_CANCEL':\n    case 'SELECTION_DELETE':\n    case 'EDIT_CARD':\n      return produce(state, () => initialState.selection);\n    case 'AUTH_OUT':\n      return initialState.selection;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['metas'];\n\nexport default (state: StatePart = initialState.metas, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload.meta,\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.metas;\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nimport initialState from '../initialState';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\n\ntype StatePart = State['user'];\n\nexport default (state: StatePart = initialState.user, action: Actions): StatePart => {\n  switch (action.type) {\n    case 'AUTH_FETCH':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          fetchig: true,\n        };\n      });\n    case 'AUTH_SUCCESS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          ...action.payload,\n          fetchig: false,\n        };\n      });\n    case 'AUTH_OUT':\n      return initialState.user;\n    case 'SET_ACCOUNT_ROADMAPS':\n      return produce(state, (nextState: StatePart) => {\n        return {\n          ...nextState,\n          roadmaps: {\n            ...nextState.roadmaps,\n            ...action.payload.roadmaps,\n          },\n          roadmapsSet: true,\n        };\n      });\n    case 'REMOVE_ACCOUNT_ROADMAP':\n      return produce(state, (nextState: StatePart) => {\n        delete nextState.roadmaps[action.payload.roadmapID];\n        return nextState;\n      });\n    default:\n      return state;\n  }\n};\n","import firebase from 'firebase/app';\nimport { eventChannel, EventChannel, END } from 'redux-saga';\n\nimport { Card, PersistentState } from 'types/state';\n\nexport const getRoadmapContent = (roadmapID: string): EventChannel<PersistentState> =>\n  eventChannel((emiter) => {\n    const listener = firebase.database().ref(`roadmaps/${roadmapID}`);\n    listener.on('value', (snapshot) => {\n      const value = snapshot.val() as PersistentState;\n      if (value) {\n        emiter(value);\n      } else {\n        // This roadmap hasn't been found or access is denied\n        emiter(END);\n        listener.off();\n      }\n    });\n    return () => {\n      listener.off();\n    };\n  });\n\nexport const fetchAccountDetails = (userID: string): Promise<firebase.database.DataSnapshot> =>\n  firebase.database().ref(`users/${userID}`).once('value');\n\nexport const fetchRoadmapMeta = (roadmapID: string): Promise<firebase.database.DataSnapshot> =>\n  firebase.database().ref(`roadmaps/${roadmapID}/meta/`).once('value');\n\nexport const updateRemoteCardData = (currentRoadmapID: string, card: Card | { id: string }): void => {\n  const { id, ...content } = card;\n  const ref = firebase.database().ref(`roadmaps/${currentRoadmapID}/cards/${id}`);\n  if (Object.keys(content).length) {\n    void ref.update({\n      progress: null,\n      ...content,\n    });\n  } else {\n    void ref.remove();\n  }\n};\n\nexport const addRemoteAccountRoadmap = async (userID: string, time: number, roadmapName: string): Promise<string> => {\n  const roadmapID = firebase.database().ref(`users/${userID}/roadmaps/`).push().key;\n  if (roadmapID) {\n    await firebase\n      .database()\n      .ref(`users/${userID}/roadmaps/`)\n      .update({\n        [roadmapID]: true,\n      });\n    await firebase.database().ref(`roadmaps/${roadmapID}/meta/`).update({\n      name: roadmapName,\n      createdAt: time,\n    });\n    return roadmapID;\n  }\n  return '';\n};\n\nexport const removeRemoteAccountRoadmap = (userID: string, roadmapID: string): void => {\n  void firebase.database().ref(`users/${userID}/roadmaps/${roadmapID}/`).remove();\n};\n","import firebase from 'firebase/app';\n\nimport { State } from 'types/state';\n\nexport const createAccount = (user: State['user']): void =>\n  void firebase.database().ref(`users/${user.id}`).set({\n    email: user.email,\n    name: user.name,\n  });\n","import firebase from 'firebase';\nimport { put, fork, take, call, select, TakeEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { fetchAccountDetails, fetchRoadmapMeta } from 'data/data';\nimport { createAccount } from 'data/newUser';\nimport { setAccountRoadmaps } from 'state/actions/user';\n\nimport { AuthSuccess } from 'types/actions';\nimport { Meta, State } from 'types/state';\n\nfunction* fetchUserRoadmapsData(userID: string) {\n  const snapshot = (yield call(fetchAccountDetails, userID)) as firebase.database.DataSnapshot;\n  const value = (yield snapshot.val()) as {\n    roadmaps?: State['user']['roadmaps'];\n  } | null;\n  if (!value) {\n    const user = (yield select((state: State) => state.user)) as State['user'];\n    yield call(createAccount, user);\n  }\n  if (value?.roadmaps) {\n    const roadmapIDs = Object.keys(value.roadmaps);\n    if (roadmapIDs) {\n      const metas = {} as State['metas'];\n      for (const roadmapID of roadmapIDs) {\n        const snapshot = (yield call(fetchRoadmapMeta, roadmapID)) as firebase.database.DataSnapshot;\n        metas[roadmapID] = snapshot.val() as Meta;\n      }\n      yield put(setAccountRoadmaps(value.roadmaps, metas));\n    } else {\n      yield put(setAccountRoadmaps({}, {}));\n    }\n  } else {\n    yield put(setAccountRoadmaps({}, {}));\n  }\n}\n\nexport function* watchAuth(): Generator<TakeEffect | ForkEffect<void>, void, AuthSuccess> {\n  while (true) {\n    const action = yield take('AUTH_SUCCESS');\n    if (typeof action.payload?.id === 'string') {\n      yield fork(fetchUserRoadmapsData, action.payload.id);\n    }\n  }\n}\n","import { fork, take, select, TakeEffect, SelectEffect, ForkEffect } from 'redux-saga/effects';\n\nimport { updateRemoteCardData } from 'data/data';\n\nimport { CardEditActions } from 'types/actions';\nimport { Card, State } from 'types/state';\n\ntype Actions = CardEditActions | Card | State['user']['roadmaps'] | undefined;\n\nexport function* watchCardChange(): Generator<TakeEffect | SelectEffect | ForkEffect<unknown>, void, Actions | string> {\n  while (true) {\n    const action = (yield take(['EDIT_CARD', 'MOVE_CARD', 'SELECTION_DELETE'])) as CardEditActions;\n    const card = (yield select((state: State) => state.cards[action.payload.id])) as Card | undefined;\n    const currentRoadmapID = (yield select((state: State) => state.ui.currentRoadmapID)) as string;\n    if (currentRoadmapID) {\n      yield fork(updateRemoteCardData, currentRoadmapID, card || { id: action.payload.id });\n    }\n  }\n}\n","import { PersistentState } from 'types/state';\n\nexport const getKeyWithTrueValue = (arr: Array<[string, boolean]> = []): string | undefined =>\n  (arr.find((pair) => pair[1]) || [])[0];\n\nexport const hydrateWithIDs = (data: PersistentState): PersistentState => {\n  (Object.keys(data) as Array<keyof typeof data>).forEach((type) => {\n    const obj = data[type];\n    (Object.keys(obj) as Array<keyof typeof obj>).forEach((key) => {\n      const string = String(key);\n      obj[string].id = string;\n    });\n  });\n  return data;\n};\n","import {\n  put,\n  fork,\n  take,\n  call,\n  select,\n  race,\n  TakeEffect,\n  ForkEffect,\n  SelectEffect,\n  CallEffect,\n  PutEffect,\n} from 'redux-saga/effects';\nimport equal from 'fast-deep-equal';\n\nimport { getRoadmapContent, addRemoteAccountRoadmap } from 'data/data';\nimport { removeAccountRoadmap, roadmapDataFetch, setAccountRoadmaps } from 'state/actions/user';\nimport { hydrateWithIDs } from 'utils/arrays';\n\nimport C from 'constants/index';\n\nimport { AddAccountRoadmap, SetAccountRoadmaps, SetCurrentRoadmap } from 'types/actions';\nimport { PersistentState, State } from 'types/state';\n\nfunction* fetchCurrentRoadmapData(currentRoadmapID: string) {\n  const channel = getRoadmapContent(currentRoadmapID);\n  let isCancelled = false;\n  try {\n    while (true) {\n      const { roadmapData } = (yield race({\n        roadmapData: take(channel),\n        cancel: take('REMOVE_CURRENT_ROADMAP'),\n      })) as { roadmapData: PersistentState };\n      if (roadmapData) {\n        // TODO: Warn about changes in meta (it will not be auto-updated)\n        // TODO: Consider storing IDs in DB (use more space, but faster and we can compare values with Redux store)\n        if (roadmapData.cards === undefined && roadmapData.milestones === undefined) {\n          // New roadmaps are empty and will fail check with previous (also empty) state, so we have this shortcut\n          yield put(\n            roadmapDataFetch({\n              cards: {},\n              milestones: {},\n            })\n          );\n        } else {\n          const hydratedData = hydrateWithIDs({\n            cards: roadmapData.cards || {},\n            milestones: roadmapData.milestones || {},\n          });\n          const cards: PersistentState['cards'] = yield select((state) => state.cards);\n          const milestones: PersistentState['milestones'] = yield select((state) => state.milestones);\n          const equalCards = equal(hydratedData.cards, cards);\n          const equalMiles = equal(hydratedData.milestones, milestones);\n          if (!equalCards || !equalMiles) {\n            yield put(roadmapDataFetch(hydratedData));\n          }\n        }\n      } else {\n        isCancelled = true;\n        channel.close();\n      }\n    }\n  } finally {\n    if (!isCancelled) {\n      // Error in data fetch: requested roadmap doesn't exist. Removing its ID from user account.\n      yield put(removeAccountRoadmap(currentRoadmapID));\n    }\n  }\n}\n\nexport function* watchCurrentRoadmapChange(): Generator<TakeEffect | ForkEffect<void>, void, SetCurrentRoadmap> {\n  while (true) {\n    const { currentRoadmapID } = (yield take(['SET_CURRENT_ROADMAP'])).payload;\n    if (typeof currentRoadmapID === 'string' && currentRoadmapID.length === C.ID.LENGTH) {\n      yield fork(fetchCurrentRoadmapData, currentRoadmapID);\n    }\n  }\n}\n\nexport function* watchAddRoadmap(): Generator<\n  TakeEffect | SelectEffect | CallEffect<string> | PutEffect<SetAccountRoadmaps> | ForkEffect<void>,\n  void,\n  AddAccountRoadmap | string\n> {\n  while (true) {\n    const { roadmapName } = ((yield take(['ADD_ACCOUNT_ROADMAP'])) as AddAccountRoadmap).payload;\n    if (typeof roadmapName === 'string' && roadmapName.length) {\n      const userID = (yield select((state: State) => state.user.id)) as string;\n      const createdAt = Date.now();\n      const roadmapID = (yield call(addRemoteAccountRoadmap, userID, createdAt, roadmapName)) as string;\n      yield put(\n        setAccountRoadmaps(\n          {\n            [roadmapID]: true,\n          },\n          {\n            [roadmapID]: {\n              createdAt,\n              from: '',\n              name: roadmapName,\n              until: '',\n            },\n          }\n        )\n      );\n    }\n  }\n}\n","export const setRecurrentEvent = (fn: () => void, timeout: number): (() => void) => {\n  let eventActive = true;\n  const recurrentEvent = (func: () => void, time: number): void => {\n    setTimeout(() => {\n      if (eventActive) {\n        func();\n        recurrentEvent(func, time);\n      }\n    }, time);\n  };\n  return (() => {\n    fn();\n    recurrentEvent(fn, timeout);\n    return () => {\n      eventActive = false;\n    };\n  })();\n};\n","import { take } from 'redux-saga/effects';\n\nimport { writeUserLastActive } from 'data/user';\nimport { AuthSuccess } from 'types/actions';\nimport { setRecurrentEvent } from 'utils/recurrent';\nimport C from 'constants/index';\n\nexport function* sendLastActive() {\n  let stopSending = () => {};\n  while (true) {\n    const actionLogin = (yield take('AUTH_SUCCESS')) as AuthSuccess;\n    if (typeof actionLogin.payload?.id === 'string') {\n      stopSending = setRecurrentEvent(() => writeUserLastActive(actionLogin.payload.id), C.TIME.LAST_ACTIVE);\n    }\n    yield take('AUTH_OUT');\n    stopSending();\n  }\n}\n","import firebase from 'firebase/app';\n\nexport const analytics = (() => {\n  let savedAnalyticsState: firebase.analytics.Analytics | undefined;\n  return {\n    saveAnalyticsState: (analyticsState: firebase.analytics.Analytics) => {\n      savedAnalyticsState = analyticsState;\n    },\n    act: () => savedAnalyticsState,\n  };\n})();\n","import { take, TakeEffect } from 'redux-saga/effects';\n\nimport { analytics } from 'utils/analytics';\n\nimport { Actions } from 'types/actions';\n\nimport app from 'constants/../../package.json';\n\nexport function* sendAnalytics(): Generator<TakeEffect, void, Actions> {\n  while (true) {\n    const action = yield take('*');\n    if (action.type === 'AUTH_SUCCESS') {\n      analytics.act()?.logEvent('login', {\n        method: 'Google',\n        uuid: action.payload.id,\n        app_version: app.version,\n      });\n    }\n  }\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchAuth } from './auth';\nimport { watchCardChange } from './card';\nimport { watchAddRoadmap, watchCurrentRoadmapChange } from './roadmap';\nimport { sendLastActive } from './user';\nimport { sendAnalytics } from './analytics';\n\nexport default function* rootSaga(): Generator<unknown, void, unknown> {\n  yield all([\n    watchAuth(),\n    watchCardChange(),\n    watchAddRoadmap(),\n    watchCurrentRoadmapChange(),\n    sendLastActive(),\n    sendAnalytics(),\n  ]);\n}\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  input {\n    font-family: Helvetica, Arial, sans-serif;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { enableAllPlugins } from 'immer';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Core from 'components/Core/Core';\nimport createStore from 'state/store';\n\nimport { GlobalStyle } from 'styles/Global';\n\nenableAllPlugins();\nconst store = createStore();\nconst rootAppNode = document.body.firstElementChild;\n\nif (rootAppNode) {\n  ReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <GlobalStyle />\n        <Core />\n      </BrowserRouter>\n    </Provider>,\n    rootAppNode\n  );\n}\n","import { createStore, applyMiddleware, Store, CombinedState } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport dataInit from 'data';\nimport { trackAuthChange } from 'data/auth';\nimport rootReducer from 'state/reducers';\nimport rootSaga from 'state/sagas';\nimport { authFetch, authOut, authSuccess } from 'state/actions/user';\n\nimport { Actions } from 'types/actions';\nimport { State } from 'types/state';\nimport { AuthSuccessProp } from 'types/actionsProps';\n\nimport { analytics } from 'utils/analytics';\n// import { loadState, saveState } from './localStorage';\n\nexport default (): Store<CombinedState<State>, Actions> => {\n  // Global initialization of the Firebase\n  dataInit(analytics.saveAnalyticsState);\n\n  // const persistedState = loadState();\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = applyMiddleware(sagaMiddleware);\n  const composedMiddleware = composeWithDevTools({ trace: true, traceLimit: 25 })(middleware);\n\n  const store = createStore(rootReducer, composedMiddleware);\n  sagaMiddleware.run(rootSaga);\n\n  // Starting authorization and provinging two callbacks for succesful & failed fetching auth data\n  trackAuthChange({\n    fetching: () => store.dispatch(authFetch()),\n    success: (userData: AuthSuccessProp) => store.dispatch(authSuccess(userData)),\n    out: () => store.dispatch(authOut()),\n  });\n\n  // const store = createStore(rootReducer, persistedState, composedMiddleware);\n  // store.subscribe(() => {\n  //   const { selection, ...stateRest } = store.getState();\n  //   saveState(stateRest);\n  // });\n\n  return store;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkroadmap\"] = self[\"webpackChunkroadmap\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [559,21], () => (__webpack_require__(256)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}